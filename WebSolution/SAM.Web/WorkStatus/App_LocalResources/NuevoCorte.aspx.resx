<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnAgregar.Text" xml:space="preserve">
    <value>Agregar</value>
  </data>
  <data name="btnComenzar.Text" xml:space="preserve">
    <value>Comenzar Corte</value>
  </data>
  <data name="btnGuardar.Text" xml:space="preserve">
    <value>Guardar</value>
  </data>
  <data name="chkCorteAjuste.Text" xml:space="preserve">
    <value>Es Corte Ajuste</value>
  </data>
  <data name="chkTramoCompleto.Text" xml:space="preserve">
    <value>Es Tramo Completo</value>
  </data>
  <assembly alias="mscorlib" name="mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="GridBoundColumnResource1.HtmlEncode" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="hdCantidadReal.HeaderText" xml:space="preserve">
    <value>Cantidad Real</value>
  </data>
  <data name="hdCantidadReal.HtmlEncode" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="hdCantidadRequerida.HeaderText" xml:space="preserve">
    <value>Cantidad Requerida</value>
  </data>
  <data name="hdCantidadRequerida.HtmlEncode" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="hdEsAjuste.HeaderText" xml:space="preserve">
    <value>Es Ajuste</value>
  </data>
  <data name="hdEtiqueta.HeaderText" xml:space="preserve">
    <value>Etiqueta</value>
  </data>
  <data name="hdEtiqueta.HtmlEncode" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="hdMaquina.HeaderText" xml:space="preserve">
    <value>Maquina</value>
  </data>
  <data name="hdMaquina.HtmlEncode" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="imgBorrar.ToolTip" xml:space="preserve">
    <value>Borrar</value>
  </data>
  <data name="lblCorte.Text" xml:space="preserve">
    <value>CORTE</value>
  </data>
  <data name="lblDescripcionNumTitulo.Text" xml:space="preserve">
    <value>Descripción:</value>
  </data>
  <data name="lblDiam1NumTitulo.Text" xml:space="preserve">
    <value>Diámetro 1:</value>
  </data>
  <data name="lblDiam2NumTitulo.Text" xml:space="preserve">
    <value>Diámetro 2:</value>
  </data>
  <data name="lblEtiquetaMaterial.Text" xml:space="preserve">
    <value>Etiqueta Material:</value>
  </data>
  <data name="lblFechaTitulo.Text" xml:space="preserve">
    <value>Fecha Orden de Trabajo:</value>
  </data>
  <data name="lblICNumTitulo.Text" xml:space="preserve">
    <value>Item Code:</value>
  </data>
  <data name="lblInvFisicoTitulo.Text" xml:space="preserve">
    <value>Inventario Físico:</value>
  </data>
  <data name="lblInvTitulo.Text" xml:space="preserve">
    <value>Inventario Buen Estado:</value>
  </data>
  <data name="lblMaquina.Text" xml:space="preserve">
    <value>Máquina:</value>
  </data>
  <data name="lblNumeroControl.Text" xml:space="preserve">
    <value>Número de Control:</value>
  </data>
  <data name="lblNumeroUnico.Text" xml:space="preserve">
    <value>Número Único:</value>
  </data>
  <data name="lblTallerTitulo.Text" xml:space="preserve">
    <value>Taller:</value>
  </data>
  <data name="valCantidad.ErrorMessage" xml:space="preserve">
    <value>La cantidad debe ser un número entero positivo.</value>
  </data>
  <data name="valGuardar.HeaderText" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="valNumControl.ErrorMessage" xml:space="preserve">
    <value>El número de control es requerido.</value>
  </data>
  <data name="valNumeroUnico.ErrorMessage" xml:space="preserve">
    <value>El número único es requerido.</value>
  </data>
  <data name="valODT.ErrorMessage" xml:space="preserve">
    <value>La orden de trabajo es requerida.</value>
  </data>
  <data name="valSobrante.ErrorMessage" xml:space="preserve">
    <value>El valor del sobrante debe ser un número entero positivo.</value>
  </data>
  <data name="valSummaryResource1.HeaderText" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="lblOrdenTrabajo.Text" xml:space="preserve">
    <value>Orden de Trabajo:</value>
  </data>
  <data name="lblCantidadReal.ErrorMessage" xml:space="preserve">
    <value>La cantidad real es requerida.</value>
  </data>
  <data name="lblSobrante.ErrorMessage" xml:space="preserve">
    <value>El sobrante es requerido.</value>
  </data>
  <data name="lblCantidadReal.Label" xml:space="preserve">
    <value>Cantidad Real:</value>
  </data>
  <data name="lblCantidadRequerida.Label" xml:space="preserve">
    <value>Cantidad Requerida:</value>
  </data>
  <data name="lblRack.Label" xml:space="preserve">
    <value>Rack:</value>
  </data>
  <data name="lblSobrante.Label" xml:space="preserve">
    <value>Sobrante:</value>
  </data>
  <data name="valAgregar.HeaderText" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="litCantidad.Text" xml:space="preserve">
    <value>Cantidad en Inventario</value>
  </data>
  <data name="litCodigo.Text" xml:space="preserve">
    <value>Código</value>
  </data>
  <data name="valEtiquetaMaterial.ErrorMessage" xml:space="preserve">
    <value>La etiqueta del material es requerida</value>
  </data>
  <data name="btnReiniciar.Text" xml:space="preserve">
    <value>Reiniciar Corte</value>
  </data>
  <data name="valMaquina.ErrorMessage" xml:space="preserve">
    <value>La máquina es requerida.</value>
  </data>
  <data name="litDescripcion.Text" xml:space="preserve">
    <value>Descripción</value>
  </data>
  <data name="litEquivalente.Text" xml:space="preserve">
    <value>¿Es Equivalente?</value>
  </data>
  <data name="litEtiquetaMaterial.Text" xml:space="preserve">
    <value>Etiqueta Material</value>
  </data>
  <data name="litItemCode.Text" xml:space="preserve">
    <value>Item Code</value>
  </data>
  <data name="hdNumeroControl.HeaderText" xml:space="preserve">
    <value>Número de Control</value>
  </data>
  <data name="litDiam1.Text" xml:space="preserve">
    <value>D1</value>
  </data>
  <data name="litDiam2.Text" xml:space="preserve">
    <value>D2</value>
  </data>
  <data name="litEtiquetaSeccion.Text" xml:space="preserve">
    <value>Etiqueta Sección</value>
  </data>
  <data name="lblCortador.Text" xml:space="preserve">
    <value>Cortador:</value>
  </data>
  <data name="litNombre.Text" xml:space="preserve">
    <value>Nombre</value>
  </data>
  <data name="litNumeroEmpleado.Text" xml:space="preserve">
    <value>Número Empleado</value>
  </data>
</root>