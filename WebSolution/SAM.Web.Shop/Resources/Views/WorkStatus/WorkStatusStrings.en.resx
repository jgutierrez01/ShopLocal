<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BoardingOut" xml:space="preserve">
    <value>Salida de embarque</value>
  </data>
  <data name="ControlNumber" xml:space="preserve">
    <value>Control Number</value>
  </data>
  <data name="DatePainting" xml:space="preserve">
    <value>Date of painting</value>
  </data>
  <data name="DatePreparation" xml:space="preserve">
    <value>Date of Preparation</value>
  </data>
  <data name="DateProcess_Required_ErrorMessage" xml:space="preserve">
    <value>Date of processs is required</value>
  </data>
  <data name="DateRequisition" xml:space="preserve">
    <value>Date Requisition </value>
  </data>
  <data name="ExitShipment" xml:space="preserve">
    <value>Output successful shipment</value>
  </data>
  <data name="HaveDatePainting" xml:space="preserve">
    <value>The following spools already have date of painting.</value>
  </data>
  <data name="HaveDateRequisitionPainting" xml:space="preserve">
    <value>The following spools already have date of requisition painting.</value>
  </data>
  <data name="HaveDateShipment" xml:space="preserve">
    <value>The following spools already have date shipment.</value>
  </data>
  <data name="HavePreparation" xml:space="preserve">
    <value>The following spools already have date preparation.</value>
  </data>
  <data name="InvalidDate" xml:space="preserve">
    <value>The following spools have no  passed the validation of dates.</value>
  </data>
  <data name="Mensaje_SpoolAgregado" xml:space="preserve">
    <value>The spool already added.</value>
  </data>
  <data name="MessageSuccess" xml:space="preserve">
    <value>Sucessfull Edition</value>
  </data>
  <data name="NotMeetCondition" xml:space="preserve">
    <value>The number of control does not meet the conditions for processing.</value>
  </data>
  <data name="NumberReport" xml:space="preserve">
    <value>Report Number </value>
  </data>
  <data name="NumberReport_Required_ErrorMessage" xml:space="preserve">
    <value>Number Report is required</value>
  </data>
  <data name="NumberRequisition" xml:space="preserve">
    <value>Requisition Number </value>
  </data>
  <data name="NumbersControl_Processed" xml:space="preserve">
    <value>The following spools were processed correctly.</value>
  </data>
  <data name="NumberShipment" xml:space="preserve">
    <value>Number of Shipment</value>
  </data>
  <data name="NumberShipment_Required_ErrorMessage" xml:space="preserve">
    <value>Number Shipment Required</value>
  </data>
  <data name="PageHeader_Painting" xml:space="preserve">
    <value>Painting</value>
  </data>
  <data name="PageHeader_Preparation" xml:space="preserve">
    <value>Shipment Preparation</value>
  </data>
  <data name="PageHeader_RequisitionPainting" xml:space="preserve">
    <value>Requisition Painting</value>
  </data>
  <data name="PageHeader_Ship" xml:space="preserve">
    <value>Shipping</value>
  </data>
  <data name="PreparationDate" xml:space="preserve">
    <value>Preparation Date</value>
  </data>
  <data name="ReportIssues" xml:space="preserve">
    <value>Report Issues</value>
  </data>
  <data name="RequisitionPainting" xml:space="preserve">
    <value>Requisition Painting</value>
  </data>
  <data name="ShipOut" xml:space="preserve">
    <value>Shipment out</value>
  </data>
  <data name="Spool" xml:space="preserve">
    <value>Spool</value>
  </data>
  <data name="TentativeDate" xml:space="preserve">
    <value>Tentative date of shipment</value>
  </data>
  <data name="TypeReport" xml:space="preserve">
    <value>Type of report</value>
  </data>
  <data name="TypeReportId_Required" xml:space="preserve">
    <value>TypeReport Required</value>
  </data>
  <data name="TypeReport_Required_ErrorMessage" xml:space="preserve">
    <value>Type report required</value>
  </data>
  <data name="WishOverWrite" xml:space="preserve">
    <value>Overwrite it?</value>
  </data>
  <data name="Yard" xml:space="preserve">
    <value>Yard</value>
  </data>
  <data name="SubjectSendReport" xml:space="preserve">
    <value>Report unprocessed Spools</value>
  </data>
  <data name="EmailSend" xml:space="preserve">
    <value>Successful sending email</value>
  </data>
  <data name="UploadDate" xml:space="preserve">
    <value>Upload Date</value>
  </data>
  <data name="Quadrant" xml:space="preserve">
    <value>Grid</value>
  </data>
  <data name="PageHeader_Location" xml:space="preserve">
    <value>Grid</value>
  </data>
  <data name="QuadrantId_Required_ErrorMessage" xml:space="preserve">
    <value>Grid is required</value>
  </data>
  <data name="HaveLocation" xml:space="preserve">
    <value>The following spools have Grid.</value>
  </data>
  <data name="DateLocation" xml:space="preserve">
    <value>Date Grid</value>
  </data>
  <data name="MaximumDiameter" xml:space="preserve">
    <value>Maximum Diameter</value>
  </data>
  <data name="SteelFamily" xml:space="preserve">
    <value>Type Material</value>
  </data>
  <data name="HaveDateOkPND" xml:space="preserve">
    <value>The following spools already have date of Ok PND.</value>
  </data>
</root>