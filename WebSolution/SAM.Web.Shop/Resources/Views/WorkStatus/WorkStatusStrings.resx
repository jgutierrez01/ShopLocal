<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ControlNumber" xml:space="preserve">
    <value>Número de Control</value>
  </data>
  <data name="DatePainting" xml:space="preserve">
    <value>Fecha de Pintura</value>
  </data>
  <data name="DatePreparation" xml:space="preserve">
    <value>Fecha de Preparación</value>
  </data>
  <data name="DateProcess_Required_ErrorMessage" xml:space="preserve">
    <value>La fecha del Proceso es requerida</value>
  </data>
  <data name="DateRequisition" xml:space="preserve">
    <value>Fecha Requisición</value>
  </data>
  <data name="ExitShipment" xml:space="preserve">
    <value>Salida de embarque exitoso.</value>
  </data>
  <data name="HaveDatePainting" xml:space="preserve">
    <value>Los siguientes spools ya cuentan con fecha de Pintura.</value>
  </data>
  <data name="HaveDateRequisitionPainting" xml:space="preserve">
    <value>Los siguientes spools ya cuentan con fecha de Requisición de Pintura.</value>
  </data>
  <data name="HaveDateShipment" xml:space="preserve">
    <value>Los siguientes spools ya cuentan con fecha de embarque.</value>
  </data>
  <data name="HavePreparation" xml:space="preserve">
    <value>Los siguientes spools ya cuentan con fecha de preparación.</value>
  </data>
  <data name="InvalidDate" xml:space="preserve">
    <value>Los siguientes spools no han pasado la validación de fechas correspondiente.</value>
  </data>
  <data name="Mensaje_SpoolAgregado" xml:space="preserve">
    <value>El spool ya esta agregado.</value>
  </data>
  <data name="MessageSuccess" xml:space="preserve">
    <value>Edición exitosa</value>
  </data>
  <data name="NotMeetCondition" xml:space="preserve">
    <value>Los siguientes numeros de control no cumplen con las condiciones necesarias para ser procesados.</value>
  </data>
  <data name="NumberReport" xml:space="preserve">
    <value>Número de Reporte</value>
  </data>
  <data name="NumberReport_Required_ErrorMessage" xml:space="preserve">
    <value>El número de reporte es requerido.</value>
  </data>
  <data name="NumberRequisition" xml:space="preserve">
    <value>Número de Requisición</value>
  </data>
  <data name="NumbersControl_Processed" xml:space="preserve">
    <value>Los siguientes spools fueron procesados correctamente.</value>
  </data>
  <data name="NumberShipment" xml:space="preserve">
    <value>Número de embarque</value>
  </data>
  <data name="NumberShipment_Required_ErrorMessage" xml:space="preserve">
    <value>El número de embarque es requerido</value>
  </data>
  <data name="PageHeader_Painting" xml:space="preserve">
    <value>Pintura</value>
  </data>
  <data name="PageHeader_Preparation" xml:space="preserve">
    <value>Preparación Embarque</value>
  </data>
  <data name="PageHeader_RequisitionPainting" xml:space="preserve">
    <value>Requisición Pintura</value>
  </data>
  <data name="PageHeader_Ship" xml:space="preserve">
    <value>Embarcar</value>
  </data>
  <data name="PreparationDate" xml:space="preserve">
    <value>Fecha de Preparación</value>
  </data>
  <data name="ReportIssues" xml:space="preserve">
    <value>Reporte Problemas</value>
  </data>
  <data name="RequisitionPainting" xml:space="preserve">
    <value>Requisición Pintura</value>
  </data>
  <data name="ShipOut" xml:space="preserve">
    <value>Salida de Emparque</value>
  </data>
  <data name="Spool" xml:space="preserve">
    <value>Spool</value>
  </data>
  <data name="TentativeDate" xml:space="preserve">
    <value>Fecha tentativa de embarque</value>
  </data>
  <data name="TypeReport" xml:space="preserve">
    <value>Tipo de reporte</value>
  </data>
  <data name="TypeReportId_Required_ErrorMessage" xml:space="preserve">
    <value>El tipo de reporte es requerido </value>
  </data>
  <data name="TypeReport_Required_ErrorMessage" xml:space="preserve">
    <value>Tipo de Reporte requerido</value>
  </data>
  <data name="WishOverWrite" xml:space="preserve">
    <value>¿Desea sobre escribirla?</value>
  </data>
  <data name="Yard" xml:space="preserve">
    <value>Patio</value>
  </data>
  <data name="SubjectSendReport" xml:space="preserve">
    <value>Reporte Spools no procesados</value>
  </data>
  <data name="EmailSend" xml:space="preserve">
    <value>Correo enviado correctamente.</value>
  </data>
  <data name="UploadDate" xml:space="preserve">
    <value>Fecha Carga</value>
  </data>
  <data name="Quadrant" xml:space="preserve">
    <value>Cuadrante</value>
  </data>
  <data name="PageHeader_Location" xml:space="preserve">
    <value>Cuadrante</value>
  </data>
  <data name="QuadrantId_Required_ErrorMessage" xml:space="preserve">
    <value>El cuadrante es requerido</value>
  </data>
  <data name="HaveLocation" xml:space="preserve">
    <value>Los siguientes spools ya cuentan con cuadrante.</value>
  </data>
  <data name="DateLocation" xml:space="preserve">
    <value>Fecha cuadrante</value>
  </data>
  <data name="MaximumDiameter" xml:space="preserve">
    <value>Diámetro Máximo </value>
  </data>
  <data name="SteelFamily" xml:space="preserve">
    <value>Tipo Material</value>
  </data>
  <data name="HaveDateOkPND" xml:space="preserve">
    <value>Los siguientes spools ya cuentan con Ok PND.</value>
  </data>
  <data name="Mensaje_NumeroControlCuadrante" xml:space="preserve">
    <value>El numero de control para ese cuadrante ya esta agregado.</value>
  </data>
  <data name="Mensaje_SQSinNC" xml:space="preserve">
    <value>No hay numeros de control con el SQ indicado en la busqueda.</value>
  </data>
</root>