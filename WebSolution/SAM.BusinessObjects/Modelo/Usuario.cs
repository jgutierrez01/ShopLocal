//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SAM.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Perfil))]
    [KnownType(typeof(UsuarioProyecto))]
    [KnownType(typeof(PersonalizacionSeguimientoSpool))]
    [KnownType(typeof(PersonalizacionSeguimientoJunta))]
    [KnownType(typeof(PendienteDetalle))]
    [KnownType(typeof(Pendiente))]
    [KnownType(typeof(ProyectoPendiente))]
    [KnownType(typeof(HistoricoWorkstatus))]
    [KnownType(typeof(ProyectoCamposRecepcion))]
    [KnownType(typeof(BastonSpoolJunta))]
    [KnownType(typeof(Estacion))]
    [KnownType(typeof(BastonSpool))]
    [KnownType(typeof(CuadranteHistorico))]
    [KnownType(typeof(Transferencia))]
    [KnownType(typeof(TransferenciaSpool))]
    [KnownType(typeof(Destino))]
    [Serializable]
    public partial class Usuario: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public System.Guid UserId
        {
            get { return _userId; }
            set
            {
                if (_userId != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'UserId' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _userId = value;
                    OnPropertyChanged("UserId");
                }
            }
        }
        private System.Guid _userId;
    
        [DataMember]
        public Nullable<int> PerfilID
        {
            get { return _perfilID; }
            set
            {
                if (_perfilID != value)
                {
                    ChangeTracker.RecordOriginalValue("PerfilID", _perfilID);
                    if (!IsDeserializing)
                    {
                        if (Perfil != null && Perfil.PerfilID != value)
                        {
                            Perfil = null;
                        }
                    }
                    _perfilID = value;
                    OnPropertyChanged("PerfilID");
                }
            }
        }
        private Nullable<int> _perfilID;
    
        [DataMember]
        public string Nombre
        {
            get { return _nombre; }
            set
            {
                if (_nombre != value)
                {
                    _nombre = value;
                    OnPropertyChanged("Nombre");
                }
            }
        }
        private string _nombre;
    
        [DataMember]
        public string ApPaterno
        {
            get { return _apPaterno; }
            set
            {
                if (_apPaterno != value)
                {
                    _apPaterno = value;
                    OnPropertyChanged("ApPaterno");
                }
            }
        }
        private string _apPaterno;
    
        [DataMember]
        public string ApMaterno
        {
            get { return _apMaterno; }
            set
            {
                if (_apMaterno != value)
                {
                    _apMaterno = value;
                    OnPropertyChanged("ApMaterno");
                }
            }
        }
        private string _apMaterno;
    
        [DataMember]
        public string Idioma
        {
            get { return _idioma; }
            set
            {
                if (_idioma != value)
                {
                    _idioma = value;
                    OnPropertyChanged("Idioma");
                }
            }
        }
        private string _idioma;
    
        [DataMember]
        public bool BloqueadoPorAdministrador
        {
            get { return _bloqueadoPorAdministrador; }
            set
            {
                if (_bloqueadoPorAdministrador != value)
                {
                    _bloqueadoPorAdministrador = value;
                    OnPropertyChanged("BloqueadoPorAdministrador");
                }
            }
        }
        private bool _bloqueadoPorAdministrador;
    
        [DataMember]
        public bool EsAdministradorSistema
        {
            get { return _esAdministradorSistema; }
            set
            {
                if (_esAdministradorSistema != value)
                {
                    _esAdministradorSistema = value;
                    OnPropertyChanged("EsAdministradorSistema");
                }
            }
        }
        private bool _esAdministradorSistema;
    
        [DataMember]
        public Nullable<System.Guid> UsuarioModifica
        {
            get { return _usuarioModifica; }
            set
            {
                if (_usuarioModifica != value)
                {
                    _usuarioModifica = value;
                    OnPropertyChanged("UsuarioModifica");
                }
            }
        }
        private Nullable<System.Guid> _usuarioModifica;
    
        [DataMember]
        public Nullable<System.DateTime> FechaModificacion
        {
            get { return _fechaModificacion; }
            set
            {
                if (_fechaModificacion != value)
                {
                    _fechaModificacion = value;
                    OnPropertyChanged("FechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _fechaModificacion;
    
        [DataMember]
        public byte[] VersionRegistro
        {
            get { return _versionRegistro; }
            set
            {
                if (_versionRegistro != value)
                {
                    ChangeTracker.RecordOriginalValue("VersionRegistro", _versionRegistro);
                    _versionRegistro = value;
                    OnPropertyChanged("VersionRegistro");
                }
            }
        }
        private byte[] _versionRegistro;
    
        [DataMember]
        public string VistaDashboard
        {
            get { return _vistaDashboard; }
            set
            {
                if (_vistaDashboard != value)
                {
                    _vistaDashboard = value;
                    OnPropertyChanged("VistaDashboard");
                }
            }
        }
        private string _vistaDashboard;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public Perfil Perfil
        {
            get { return _perfil; }
            set
            {
                if (!ReferenceEquals(_perfil, value))
                {
                    var previousValue = _perfil;
                    _perfil = value;
                    FixupPerfil(previousValue);
                    OnNavigationPropertyChanged("Perfil");
                }
            }
        }
        private Perfil _perfil;
    
        [DataMember]
        public TrackableCollection<UsuarioProyecto> UsuarioProyecto
        {
            get
            {
                if (_usuarioProyecto == null)
                {
                    _usuarioProyecto = new TrackableCollection<UsuarioProyecto>();
                    _usuarioProyecto.CollectionChanged += FixupUsuarioProyecto;
                }
                return _usuarioProyecto;
            }
            set
            {
                if (!ReferenceEquals(_usuarioProyecto, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_usuarioProyecto != null)
                    {
                        _usuarioProyecto.CollectionChanged -= FixupUsuarioProyecto;
                    }
                    _usuarioProyecto = value;
                    if (_usuarioProyecto != null)
                    {
                        _usuarioProyecto.CollectionChanged += FixupUsuarioProyecto;
                    }
                    OnNavigationPropertyChanged("UsuarioProyecto");
                }
            }
        }
        private TrackableCollection<UsuarioProyecto> _usuarioProyecto;
    
        [DataMember]
        public TrackableCollection<PersonalizacionSeguimientoSpool> PersonalizacionSeguimientoSpool
        {
            get
            {
                if (_personalizacionSeguimientoSpool == null)
                {
                    _personalizacionSeguimientoSpool = new TrackableCollection<PersonalizacionSeguimientoSpool>();
                    _personalizacionSeguimientoSpool.CollectionChanged += FixupPersonalizacionSeguimientoSpool;
                }
                return _personalizacionSeguimientoSpool;
            }
            set
            {
                if (!ReferenceEquals(_personalizacionSeguimientoSpool, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_personalizacionSeguimientoSpool != null)
                    {
                        _personalizacionSeguimientoSpool.CollectionChanged -= FixupPersonalizacionSeguimientoSpool;
                    }
                    _personalizacionSeguimientoSpool = value;
                    if (_personalizacionSeguimientoSpool != null)
                    {
                        _personalizacionSeguimientoSpool.CollectionChanged += FixupPersonalizacionSeguimientoSpool;
                    }
                    OnNavigationPropertyChanged("PersonalizacionSeguimientoSpool");
                }
            }
        }
        private TrackableCollection<PersonalizacionSeguimientoSpool> _personalizacionSeguimientoSpool;
    
        [DataMember]
        public TrackableCollection<PersonalizacionSeguimientoJunta> PersonalizacionSeguimientoJunta
        {
            get
            {
                if (_personalizacionSeguimientoJunta == null)
                {
                    _personalizacionSeguimientoJunta = new TrackableCollection<PersonalizacionSeguimientoJunta>();
                    _personalizacionSeguimientoJunta.CollectionChanged += FixupPersonalizacionSeguimientoJunta;
                }
                return _personalizacionSeguimientoJunta;
            }
            set
            {
                if (!ReferenceEquals(_personalizacionSeguimientoJunta, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_personalizacionSeguimientoJunta != null)
                    {
                        _personalizacionSeguimientoJunta.CollectionChanged -= FixupPersonalizacionSeguimientoJunta;
                    }
                    _personalizacionSeguimientoJunta = value;
                    if (_personalizacionSeguimientoJunta != null)
                    {
                        _personalizacionSeguimientoJunta.CollectionChanged += FixupPersonalizacionSeguimientoJunta;
                    }
                    OnNavigationPropertyChanged("PersonalizacionSeguimientoJunta");
                }
            }
        }
        private TrackableCollection<PersonalizacionSeguimientoJunta> _personalizacionSeguimientoJunta;
    
        [DataMember]
        public TrackableCollection<PendienteDetalle> PendienteDetalle
        {
            get
            {
                if (_pendienteDetalle == null)
                {
                    _pendienteDetalle = new TrackableCollection<PendienteDetalle>();
                    _pendienteDetalle.CollectionChanged += FixupPendienteDetalle;
                }
                return _pendienteDetalle;
            }
            set
            {
                if (!ReferenceEquals(_pendienteDetalle, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_pendienteDetalle != null)
                    {
                        _pendienteDetalle.CollectionChanged -= FixupPendienteDetalle;
                    }
                    _pendienteDetalle = value;
                    if (_pendienteDetalle != null)
                    {
                        _pendienteDetalle.CollectionChanged += FixupPendienteDetalle;
                    }
                    OnNavigationPropertyChanged("PendienteDetalle");
                }
            }
        }
        private TrackableCollection<PendienteDetalle> _pendienteDetalle;
    
        [DataMember]
        public TrackableCollection<Pendiente> PendientesGenerados
        {
            get
            {
                if (_pendientesGenerados == null)
                {
                    _pendientesGenerados = new TrackableCollection<Pendiente>();
                    _pendientesGenerados.CollectionChanged += FixupPendientesGenerados;
                }
                return _pendientesGenerados;
            }
            set
            {
                if (!ReferenceEquals(_pendientesGenerados, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_pendientesGenerados != null)
                    {
                        _pendientesGenerados.CollectionChanged -= FixupPendientesGenerados;
                    }
                    _pendientesGenerados = value;
                    if (_pendientesGenerados != null)
                    {
                        _pendientesGenerados.CollectionChanged += FixupPendientesGenerados;
                    }
                    OnNavigationPropertyChanged("PendientesGenerados");
                }
            }
        }
        private TrackableCollection<Pendiente> _pendientesGenerados;
    
        [DataMember]
        public TrackableCollection<Pendiente> PendientesAsignados
        {
            get
            {
                if (_pendientesAsignados == null)
                {
                    _pendientesAsignados = new TrackableCollection<Pendiente>();
                    _pendientesAsignados.CollectionChanged += FixupPendientesAsignados;
                }
                return _pendientesAsignados;
            }
            set
            {
                if (!ReferenceEquals(_pendientesAsignados, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_pendientesAsignados != null)
                    {
                        _pendientesAsignados.CollectionChanged -= FixupPendientesAsignados;
                    }
                    _pendientesAsignados = value;
                    if (_pendientesAsignados != null)
                    {
                        _pendientesAsignados.CollectionChanged += FixupPendientesAsignados;
                    }
                    OnNavigationPropertyChanged("PendientesAsignados");
                }
            }
        }
        private TrackableCollection<Pendiente> _pendientesAsignados;
    
        [DataMember]
        public TrackableCollection<ProyectoPendiente> ProyectoPendiente
        {
            get
            {
                if (_proyectoPendiente == null)
                {
                    _proyectoPendiente = new TrackableCollection<ProyectoPendiente>();
                    _proyectoPendiente.CollectionChanged += FixupProyectoPendiente;
                }
                return _proyectoPendiente;
            }
            set
            {
                if (!ReferenceEquals(_proyectoPendiente, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_proyectoPendiente != null)
                    {
                        _proyectoPendiente.CollectionChanged -= FixupProyectoPendiente;
                    }
                    _proyectoPendiente = value;
                    if (_proyectoPendiente != null)
                    {
                        _proyectoPendiente.CollectionChanged += FixupProyectoPendiente;
                    }
                    OnNavigationPropertyChanged("ProyectoPendiente");
                }
            }
        }
        private TrackableCollection<ProyectoPendiente> _proyectoPendiente;
    
        [DataMember]
        public TrackableCollection<HistoricoWorkstatus> HistoricoWorkstatus
        {
            get
            {
                if (_historicoWorkstatus == null)
                {
                    _historicoWorkstatus = new TrackableCollection<HistoricoWorkstatus>();
                    _historicoWorkstatus.CollectionChanged += FixupHistoricoWorkstatus;
                }
                return _historicoWorkstatus;
            }
            set
            {
                if (!ReferenceEquals(_historicoWorkstatus, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_historicoWorkstatus != null)
                    {
                        _historicoWorkstatus.CollectionChanged -= FixupHistoricoWorkstatus;
                    }
                    _historicoWorkstatus = value;
                    if (_historicoWorkstatus != null)
                    {
                        _historicoWorkstatus.CollectionChanged += FixupHistoricoWorkstatus;
                    }
                    OnNavigationPropertyChanged("HistoricoWorkstatus");
                }
            }
        }
        private TrackableCollection<HistoricoWorkstatus> _historicoWorkstatus;
    
        [DataMember]
        public TrackableCollection<ProyectoCamposRecepcion> ProyectoCamposRecepcion
        {
            get
            {
                if (_proyectoCamposRecepcion == null)
                {
                    _proyectoCamposRecepcion = new TrackableCollection<ProyectoCamposRecepcion>();
                    _proyectoCamposRecepcion.CollectionChanged += FixupProyectoCamposRecepcion;
                }
                return _proyectoCamposRecepcion;
            }
            set
            {
                if (!ReferenceEquals(_proyectoCamposRecepcion, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_proyectoCamposRecepcion != null)
                    {
                        _proyectoCamposRecepcion.CollectionChanged -= FixupProyectoCamposRecepcion;
                    }
                    _proyectoCamposRecepcion = value;
                    if (_proyectoCamposRecepcion != null)
                    {
                        _proyectoCamposRecepcion.CollectionChanged += FixupProyectoCamposRecepcion;
                    }
                    OnNavigationPropertyChanged("ProyectoCamposRecepcion");
                }
            }
        }
        private TrackableCollection<ProyectoCamposRecepcion> _proyectoCamposRecepcion;
    
        [DataMember]
        public TrackableCollection<BastonSpoolJunta> BastonSpoolJunta
        {
            get
            {
                if (_bastonSpoolJunta == null)
                {
                    _bastonSpoolJunta = new TrackableCollection<BastonSpoolJunta>();
                    _bastonSpoolJunta.CollectionChanged += FixupBastonSpoolJunta;
                }
                return _bastonSpoolJunta;
            }
            set
            {
                if (!ReferenceEquals(_bastonSpoolJunta, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_bastonSpoolJunta != null)
                    {
                        _bastonSpoolJunta.CollectionChanged -= FixupBastonSpoolJunta;
                    }
                    _bastonSpoolJunta = value;
                    if (_bastonSpoolJunta != null)
                    {
                        _bastonSpoolJunta.CollectionChanged += FixupBastonSpoolJunta;
                    }
                    OnNavigationPropertyChanged("BastonSpoolJunta");
                }
            }
        }
        private TrackableCollection<BastonSpoolJunta> _bastonSpoolJunta;
    
        [DataMember]
        public TrackableCollection<Estacion> Estacion
        {
            get
            {
                if (_estacion == null)
                {
                    _estacion = new TrackableCollection<Estacion>();
                    _estacion.CollectionChanged += FixupEstacion;
                }
                return _estacion;
            }
            set
            {
                if (!ReferenceEquals(_estacion, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_estacion != null)
                    {
                        _estacion.CollectionChanged -= FixupEstacion;
                    }
                    _estacion = value;
                    if (_estacion != null)
                    {
                        _estacion.CollectionChanged += FixupEstacion;
                    }
                    OnNavigationPropertyChanged("Estacion");
                }
            }
        }
        private TrackableCollection<Estacion> _estacion;
    
        [DataMember]
        public TrackableCollection<BastonSpool> BastonSpool
        {
            get
            {
                if (_bastonSpool == null)
                {
                    _bastonSpool = new TrackableCollection<BastonSpool>();
                    _bastonSpool.CollectionChanged += FixupBastonSpool;
                }
                return _bastonSpool;
            }
            set
            {
                if (!ReferenceEquals(_bastonSpool, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_bastonSpool != null)
                    {
                        _bastonSpool.CollectionChanged -= FixupBastonSpool;
                    }
                    _bastonSpool = value;
                    if (_bastonSpool != null)
                    {
                        _bastonSpool.CollectionChanged += FixupBastonSpool;
                    }
                    OnNavigationPropertyChanged("BastonSpool");
                }
            }
        }
        private TrackableCollection<BastonSpool> _bastonSpool;
    
        [DataMember]
        public TrackableCollection<CuadranteHistorico> CuadranteHistorico
        {
            get
            {
                if (_cuadranteHistorico == null)
                {
                    _cuadranteHistorico = new TrackableCollection<CuadranteHistorico>();
                    _cuadranteHistorico.CollectionChanged += FixupCuadranteHistorico;
                }
                return _cuadranteHistorico;
            }
            set
            {
                if (!ReferenceEquals(_cuadranteHistorico, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cuadranteHistorico != null)
                    {
                        _cuadranteHistorico.CollectionChanged -= FixupCuadranteHistorico;
                    }
                    _cuadranteHistorico = value;
                    if (_cuadranteHistorico != null)
                    {
                        _cuadranteHistorico.CollectionChanged += FixupCuadranteHistorico;
                    }
                    OnNavigationPropertyChanged("CuadranteHistorico");
                }
            }
        }
        private TrackableCollection<CuadranteHistorico> _cuadranteHistorico;
    
        [DataMember]
        public TrackableCollection<Transferencia> Transferencia
        {
            get
            {
                if (_transferencia == null)
                {
                    _transferencia = new TrackableCollection<Transferencia>();
                    _transferencia.CollectionChanged += FixupTransferencia;
                }
                return _transferencia;
            }
            set
            {
                if (!ReferenceEquals(_transferencia, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_transferencia != null)
                    {
                        _transferencia.CollectionChanged -= FixupTransferencia;
                    }
                    _transferencia = value;
                    if (_transferencia != null)
                    {
                        _transferencia.CollectionChanged += FixupTransferencia;
                    }
                    OnNavigationPropertyChanged("Transferencia");
                }
            }
        }
        private TrackableCollection<Transferencia> _transferencia;
    
        [DataMember]
        public TrackableCollection<TransferenciaSpool> TransferenciaSpool
        {
            get
            {
                if (_transferenciaSpool == null)
                {
                    _transferenciaSpool = new TrackableCollection<TransferenciaSpool>();
                    _transferenciaSpool.CollectionChanged += FixupTransferenciaSpool;
                }
                return _transferenciaSpool;
            }
            set
            {
                if (!ReferenceEquals(_transferenciaSpool, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_transferenciaSpool != null)
                    {
                        _transferenciaSpool.CollectionChanged -= FixupTransferenciaSpool;
                    }
                    _transferenciaSpool = value;
                    if (_transferenciaSpool != null)
                    {
                        _transferenciaSpool.CollectionChanged += FixupTransferenciaSpool;
                    }
                    OnNavigationPropertyChanged("TransferenciaSpool");
                }
            }
        }
        private TrackableCollection<TransferenciaSpool> _transferenciaSpool;
    
        [DataMember]
        public TrackableCollection<Destino> Destino
        {
            get
            {
                if (_destino == null)
                {
                    _destino = new TrackableCollection<Destino>();
                    _destino.CollectionChanged += FixupDestino;
                }
                return _destino;
            }
            set
            {
                if (!ReferenceEquals(_destino, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_destino != null)
                    {
                        _destino.CollectionChanged -= FixupDestino;
                    }
                    _destino = value;
                    if (_destino != null)
                    {
                        _destino.CollectionChanged += FixupDestino;
                    }
                    OnNavigationPropertyChanged("Destino");
                }
            }
        }
        private TrackableCollection<Destino> _destino;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
    	public void OnDeserializedMethod(StreamingContext context)
    	{
    		IsDeserializing = false;
    		ChangeTracker.ChangeTrackingEnabled = true;
    			if (_usuarioProyecto != null)
    		{
    			_usuarioProyecto.CollectionChanged -= FixupUsuarioProyecto;
    			_usuarioProyecto.CollectionChanged += FixupUsuarioProyecto;
    			}
    			if (_personalizacionSeguimientoSpool != null)
    		{
    			_personalizacionSeguimientoSpool.CollectionChanged -= FixupPersonalizacionSeguimientoSpool;
    			_personalizacionSeguimientoSpool.CollectionChanged += FixupPersonalizacionSeguimientoSpool;
    			}
    			if (_personalizacionSeguimientoJunta != null)
    		{
    			_personalizacionSeguimientoJunta.CollectionChanged -= FixupPersonalizacionSeguimientoJunta;
    			_personalizacionSeguimientoJunta.CollectionChanged += FixupPersonalizacionSeguimientoJunta;
    			}
    			if (_pendienteDetalle != null)
    		{
    			_pendienteDetalle.CollectionChanged -= FixupPendienteDetalle;
    			_pendienteDetalle.CollectionChanged += FixupPendienteDetalle;
    			}
    			if (_pendientesGenerados != null)
    		{
    			_pendientesGenerados.CollectionChanged -= FixupPendientesGenerados;
    			_pendientesGenerados.CollectionChanged += FixupPendientesGenerados;
    			}
    			if (_pendientesAsignados != null)
    		{
    			_pendientesAsignados.CollectionChanged -= FixupPendientesAsignados;
    			_pendientesAsignados.CollectionChanged += FixupPendientesAsignados;
    			}
    			if (_proyectoPendiente != null)
    		{
    			_proyectoPendiente.CollectionChanged -= FixupProyectoPendiente;
    			_proyectoPendiente.CollectionChanged += FixupProyectoPendiente;
    			}
    			if (_historicoWorkstatus != null)
    		{
    			_historicoWorkstatus.CollectionChanged -= FixupHistoricoWorkstatus;
    			_historicoWorkstatus.CollectionChanged += FixupHistoricoWorkstatus;
    			}
    			if (_proyectoCamposRecepcion != null)
    		{
    			_proyectoCamposRecepcion.CollectionChanged -= FixupProyectoCamposRecepcion;
    			_proyectoCamposRecepcion.CollectionChanged += FixupProyectoCamposRecepcion;
    			}
    			if (_bastonSpoolJunta != null)
    		{
    			_bastonSpoolJunta.CollectionChanged -= FixupBastonSpoolJunta;
    			_bastonSpoolJunta.CollectionChanged += FixupBastonSpoolJunta;
    			}
    			if (_estacion != null)
    		{
    			_estacion.CollectionChanged -= FixupEstacion;
    			_estacion.CollectionChanged += FixupEstacion;
    			}
    			if (_bastonSpool != null)
    		{
    			_bastonSpool.CollectionChanged -= FixupBastonSpool;
    			_bastonSpool.CollectionChanged += FixupBastonSpool;
    			}
    			if (_cuadranteHistorico != null)
    		{
    			_cuadranteHistorico.CollectionChanged -= FixupCuadranteHistorico;
    			_cuadranteHistorico.CollectionChanged += FixupCuadranteHistorico;
    			}
    			if (_transferencia != null)
    		{
    			_transferencia.CollectionChanged -= FixupTransferencia;
    			_transferencia.CollectionChanged += FixupTransferencia;
    			}
    			if (_transferenciaSpool != null)
    		{
    			_transferenciaSpool.CollectionChanged -= FixupTransferenciaSpool;
    			_transferenciaSpool.CollectionChanged += FixupTransferenciaSpool;
    			}
    			if (_destino != null)
    		{
    			_destino.CollectionChanged -= FixupDestino;
    			_destino.CollectionChanged += FixupDestino;
    			}
    		}
    
    
        protected virtual void ClearNavigationProperties()
        {
            Perfil = null;
            UsuarioProyecto.Clear();
            PersonalizacionSeguimientoSpool.Clear();
            PersonalizacionSeguimientoJunta.Clear();
            PendienteDetalle.Clear();
            PendientesGenerados.Clear();
            PendientesAsignados.Clear();
            ProyectoPendiente.Clear();
            HistoricoWorkstatus.Clear();
            ProyectoCamposRecepcion.Clear();
            BastonSpoolJunta.Clear();
            Estacion.Clear();
            BastonSpool.Clear();
            CuadranteHistorico.Clear();
            Transferencia.Clear();
            TransferenciaSpool.Clear();
            Destino.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupPerfil(Perfil previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Usuario.Contains(this))
            {
                previousValue.Usuario.Remove(this);
            }
    
            if (Perfil != null)
            {
                if (!Perfil.Usuario.Contains(this))
                {
                    Perfil.Usuario.Add(this);
                }
    
                PerfilID = Perfil.PerfilID;
            }
            else if (!skipKeys)
            {
                PerfilID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Perfil")
                    && (ChangeTracker.OriginalValues["Perfil"] == Perfil))
                {
                    ChangeTracker.OriginalValues.Remove("Perfil");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Perfil", previousValue);
                }
                if (Perfil != null && !Perfil.ChangeTracker.ChangeTrackingEnabled)
                {
                    Perfil.StartTracking();
                }
            }
        }
    
        private void FixupUsuarioProyecto(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (UsuarioProyecto item in e.NewItems)
                {
                    item.Usuario = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("UsuarioProyecto", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (UsuarioProyecto item in e.OldItems)
                {
                    if (ReferenceEquals(item.Usuario, this))
                    {
                        item.Usuario = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("UsuarioProyecto", item);
                    }
                }
            }
        }
    
        private void FixupPersonalizacionSeguimientoSpool(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (PersonalizacionSeguimientoSpool item in e.NewItems)
                {
                    item.Usuario = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("PersonalizacionSeguimientoSpool", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PersonalizacionSeguimientoSpool item in e.OldItems)
                {
                    if (ReferenceEquals(item.Usuario, this))
                    {
                        item.Usuario = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("PersonalizacionSeguimientoSpool", item);
                    }
                }
            }
        }
    
        private void FixupPersonalizacionSeguimientoJunta(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (PersonalizacionSeguimientoJunta item in e.NewItems)
                {
                    item.Usuario = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("PersonalizacionSeguimientoJunta", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PersonalizacionSeguimientoJunta item in e.OldItems)
                {
                    if (ReferenceEquals(item.Usuario, this))
                    {
                        item.Usuario = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("PersonalizacionSeguimientoJunta", item);
                    }
                }
            }
        }
    
        private void FixupPendienteDetalle(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (PendienteDetalle item in e.NewItems)
                {
                    item.UsuarioResponsable = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("PendienteDetalle", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PendienteDetalle item in e.OldItems)
                {
                    if (ReferenceEquals(item.UsuarioResponsable, this))
                    {
                        item.UsuarioResponsable = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("PendienteDetalle", item);
                    }
                }
            }
        }
    
        private void FixupPendientesGenerados(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Pendiente item in e.NewItems)
                {
                    item.UsuarioGenera = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("PendientesGenerados", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Pendiente item in e.OldItems)
                {
                    if (ReferenceEquals(item.UsuarioGenera, this))
                    {
                        item.UsuarioGenera = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("PendientesGenerados", item);
                    }
                }
            }
        }
    
        private void FixupPendientesAsignados(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Pendiente item in e.NewItems)
                {
                    item.UsuarioResponsable = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("PendientesAsignados", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Pendiente item in e.OldItems)
                {
                    if (ReferenceEquals(item.UsuarioResponsable, this))
                    {
                        item.UsuarioResponsable = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("PendientesAsignados", item);
                    }
                }
            }
        }
    
        private void FixupProyectoPendiente(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ProyectoPendiente item in e.NewItems)
                {
                    item.Usuario = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ProyectoPendiente", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ProyectoPendiente item in e.OldItems)
                {
                    if (ReferenceEquals(item.Usuario, this))
                    {
                        item.Usuario = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ProyectoPendiente", item);
                    }
                }
            }
        }
    
        private void FixupHistoricoWorkstatus(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (HistoricoWorkstatus item in e.NewItems)
                {
                    item.Usuario = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("HistoricoWorkstatus", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (HistoricoWorkstatus item in e.OldItems)
                {
                    if (ReferenceEquals(item.Usuario, this))
                    {
                        item.Usuario = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("HistoricoWorkstatus", item);
                    }
                }
            }
        }
    
        private void FixupProyectoCamposRecepcion(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ProyectoCamposRecepcion item in e.NewItems)
                {
                    item.Usuario = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ProyectoCamposRecepcion", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ProyectoCamposRecepcion item in e.OldItems)
                {
                    if (ReferenceEquals(item.Usuario, this))
                    {
                        item.Usuario = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ProyectoCamposRecepcion", item);
                    }
                }
            }
        }
    
        private void FixupBastonSpoolJunta(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (BastonSpoolJunta item in e.NewItems)
                {
                    item.Usuario = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("BastonSpoolJunta", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BastonSpoolJunta item in e.OldItems)
                {
                    if (ReferenceEquals(item.Usuario, this))
                    {
                        item.Usuario = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("BastonSpoolJunta", item);
                    }
                }
            }
        }
    
        private void FixupEstacion(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Estacion item in e.NewItems)
                {
                    item.Usuario = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Estacion", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Estacion item in e.OldItems)
                {
                    if (ReferenceEquals(item.Usuario, this))
                    {
                        item.Usuario = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Estacion", item);
                    }
                }
            }
        }
    
        private void FixupBastonSpool(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (BastonSpool item in e.NewItems)
                {
                    item.Usuario = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("BastonSpool", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BastonSpool item in e.OldItems)
                {
                    if (ReferenceEquals(item.Usuario, this))
                    {
                        item.Usuario = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("BastonSpool", item);
                    }
                }
            }
        }
    
        private void FixupCuadranteHistorico(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CuadranteHistorico item in e.NewItems)
                {
                    item.Usuario = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CuadranteHistorico", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CuadranteHistorico item in e.OldItems)
                {
                    if (ReferenceEquals(item.Usuario, this))
                    {
                        item.Usuario = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CuadranteHistorico", item);
                    }
                }
            }
        }
    
        private void FixupTransferencia(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Transferencia item in e.NewItems)
                {
                    item.Usuario = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Transferencia", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Transferencia item in e.OldItems)
                {
                    if (ReferenceEquals(item.Usuario, this))
                    {
                        item.Usuario = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Transferencia", item);
                    }
                }
            }
        }
    
        private void FixupTransferenciaSpool(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (TransferenciaSpool item in e.NewItems)
                {
                    item.Usuario = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("TransferenciaSpool", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TransferenciaSpool item in e.OldItems)
                {
                    if (ReferenceEquals(item.Usuario, this))
                    {
                        item.Usuario = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("TransferenciaSpool", item);
                    }
                }
            }
        }
    
        private void FixupDestino(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Destino item in e.NewItems)
                {
                    item.Usuario = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Destino", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Destino item in e.OldItems)
                {
                    if (ReferenceEquals(item.Usuario, this))
                    {
                        item.Usuario = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Destino", item);
                    }
                }
            }
        }

        #endregion

    }
}
