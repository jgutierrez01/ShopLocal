//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SAM.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(FabArea))]
    [KnownType(typeof(FamiliaAcero))]
    [KnownType(typeof(SpoolPendiente))]
    [KnownType(typeof(TipoJunta))]
    [Serializable]
    public partial class JuntaSpoolPendiente: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int JuntaSpoolPendienteID
        {
            get { return _juntaSpoolPendienteID; }
            set
            {
                if (_juntaSpoolPendienteID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'JuntaSpoolPendienteID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _juntaSpoolPendienteID = value;
                    OnPropertyChanged("JuntaSpoolPendienteID");
                }
            }
        }
        private int _juntaSpoolPendienteID;
    
        [DataMember]
        public int SpoolPendienteID
        {
            get { return _spoolPendienteID; }
            set
            {
                if (_spoolPendienteID != value)
                {
                    ChangeTracker.RecordOriginalValue("SpoolPendienteID", _spoolPendienteID);
                    if (!IsDeserializing)
                    {
                        if (SpoolPendiente != null && SpoolPendiente.SpoolPendienteID != value)
                        {
                            SpoolPendiente = null;
                        }
                    }
                    _spoolPendienteID = value;
                    OnPropertyChanged("SpoolPendienteID");
                }
            }
        }
        private int _spoolPendienteID;
    
        [DataMember]
        public int TipoJuntaID
        {
            get { return _tipoJuntaID; }
            set
            {
                if (_tipoJuntaID != value)
                {
                    ChangeTracker.RecordOriginalValue("TipoJuntaID", _tipoJuntaID);
                    if (!IsDeserializing)
                    {
                        if (TipoJunta != null && TipoJunta.TipoJuntaID != value)
                        {
                            TipoJunta = null;
                        }
                    }
                    _tipoJuntaID = value;
                    OnPropertyChanged("TipoJuntaID");
                }
            }
        }
        private int _tipoJuntaID;
    
        [DataMember]
        public int FabAreaID
        {
            get { return _fabAreaID; }
            set
            {
                if (_fabAreaID != value)
                {
                    ChangeTracker.RecordOriginalValue("FabAreaID", _fabAreaID);
                    if (!IsDeserializing)
                    {
                        if (FabArea != null && FabArea.FabAreaID != value)
                        {
                            FabArea = null;
                        }
                    }
                    _fabAreaID = value;
                    OnPropertyChanged("FabAreaID");
                }
            }
        }
        private int _fabAreaID;
    
        [DataMember]
        public string Etiqueta
        {
            get { return _etiqueta; }
            set
            {
                if (_etiqueta != value)
                {
                    _etiqueta = value;
                    OnPropertyChanged("Etiqueta");
                }
            }
        }
        private string _etiqueta;
    
        [DataMember]
        public string EtiquetaMaterial1
        {
            get { return _etiquetaMaterial1; }
            set
            {
                if (_etiquetaMaterial1 != value)
                {
                    _etiquetaMaterial1 = value;
                    OnPropertyChanged("EtiquetaMaterial1");
                }
            }
        }
        private string _etiquetaMaterial1;
    
        [DataMember]
        public string EtiquetaMaterial2
        {
            get { return _etiquetaMaterial2; }
            set
            {
                if (_etiquetaMaterial2 != value)
                {
                    _etiquetaMaterial2 = value;
                    OnPropertyChanged("EtiquetaMaterial2");
                }
            }
        }
        private string _etiquetaMaterial2;
    
        [DataMember]
        public string Cedula
        {
            get { return _cedula; }
            set
            {
                if (_cedula != value)
                {
                    _cedula = value;
                    OnPropertyChanged("Cedula");
                }
            }
        }
        private string _cedula;
    
        [DataMember]
        public int FamiliaAceroMaterial1ID
        {
            get { return _familiaAceroMaterial1ID; }
            set
            {
                if (_familiaAceroMaterial1ID != value)
                {
                    ChangeTracker.RecordOriginalValue("FamiliaAceroMaterial1ID", _familiaAceroMaterial1ID);
                    if (!IsDeserializing)
                    {
                        if (FamiliaAcero != null && FamiliaAcero.FamiliaAceroID != value)
                        {
                            FamiliaAcero = null;
                        }
                    }
                    _familiaAceroMaterial1ID = value;
                    OnPropertyChanged("FamiliaAceroMaterial1ID");
                }
            }
        }
        private int _familiaAceroMaterial1ID;
    
        [DataMember]
        public Nullable<int> FamiliaAceroMaterial2ID
        {
            get { return _familiaAceroMaterial2ID; }
            set
            {
                if (_familiaAceroMaterial2ID != value)
                {
                    ChangeTracker.RecordOriginalValue("FamiliaAceroMaterial2ID", _familiaAceroMaterial2ID);
                    if (!IsDeserializing)
                    {
                        if (FamiliaAcero1 != null && FamiliaAcero1.FamiliaAceroID != value)
                        {
                            FamiliaAcero1 = null;
                        }
                    }
                    _familiaAceroMaterial2ID = value;
                    OnPropertyChanged("FamiliaAceroMaterial2ID");
                }
            }
        }
        private Nullable<int> _familiaAceroMaterial2ID;
    
        [DataMember]
        public decimal Diametro
        {
            get { return _diametro; }
            set
            {
                if (_diametro != value)
                {
                    _diametro = value;
                    OnPropertyChanged("Diametro");
                }
            }
        }
        private decimal _diametro;
    
        [DataMember]
        public Nullable<decimal> Espesor
        {
            get { return _espesor; }
            set
            {
                if (_espesor != value)
                {
                    _espesor = value;
                    OnPropertyChanged("Espesor");
                }
            }
        }
        private Nullable<decimal> _espesor;
    
        [DataMember]
        public Nullable<decimal> KgTeoricos
        {
            get { return _kgTeoricos; }
            set
            {
                if (_kgTeoricos != value)
                {
                    _kgTeoricos = value;
                    OnPropertyChanged("KgTeoricos");
                }
            }
        }
        private Nullable<decimal> _kgTeoricos;
    
        [DataMember]
        public Nullable<decimal> Peqs
        {
            get { return _peqs; }
            set
            {
                if (_peqs != value)
                {
                    _peqs = value;
                    OnPropertyChanged("Peqs");
                }
            }
        }
        private Nullable<decimal> _peqs;
    
        [DataMember]
        public Nullable<System.Guid> UsuarioModifica
        {
            get { return _usuarioModifica; }
            set
            {
                if (_usuarioModifica != value)
                {
                    _usuarioModifica = value;
                    OnPropertyChanged("UsuarioModifica");
                }
            }
        }
        private Nullable<System.Guid> _usuarioModifica;
    
        [DataMember]
        public Nullable<System.DateTime> FechaModificacion
        {
            get { return _fechaModificacion; }
            set
            {
                if (_fechaModificacion != value)
                {
                    _fechaModificacion = value;
                    OnPropertyChanged("FechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _fechaModificacion;
    
        [DataMember]
        public byte[] VersionRegistro
        {
            get { return _versionRegistro; }
            set
            {
                if (_versionRegistro != value)
                {
                    ChangeTracker.RecordOriginalValue("VersionRegistro", _versionRegistro);
                    _versionRegistro = value;
                    OnPropertyChanged("VersionRegistro");
                }
            }
        }
        private byte[] _versionRegistro;
    
        [DataMember]
        public bool RequierePwht
        {
            get { return _requierePwht; }
            set
            {
                if (_requierePwht != value)
                {
                    _requierePwht = value;
                    OnPropertyChanged("RequierePwht");
                }
            }
        }
        private bool _requierePwht;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public FabArea FabArea
        {
            get { return _fabArea; }
            set
            {
                if (!ReferenceEquals(_fabArea, value))
                {
                    var previousValue = _fabArea;
                    _fabArea = value;
                    FixupFabArea(previousValue);
                    OnNavigationPropertyChanged("FabArea");
                }
            }
        }
        private FabArea _fabArea;
    
        [DataMember]
        public FamiliaAcero FamiliaAcero
        {
            get { return _familiaAcero; }
            set
            {
                if (!ReferenceEquals(_familiaAcero, value))
                {
                    var previousValue = _familiaAcero;
                    _familiaAcero = value;
                    FixupFamiliaAcero(previousValue);
                    OnNavigationPropertyChanged("FamiliaAcero");
                }
            }
        }
        private FamiliaAcero _familiaAcero;
    
        [DataMember]
        public FamiliaAcero FamiliaAcero1
        {
            get { return _familiaAcero1; }
            set
            {
                if (!ReferenceEquals(_familiaAcero1, value))
                {
                    var previousValue = _familiaAcero1;
                    _familiaAcero1 = value;
                    FixupFamiliaAcero1(previousValue);
                    OnNavigationPropertyChanged("FamiliaAcero1");
                }
            }
        }
        private FamiliaAcero _familiaAcero1;
    
        [DataMember]
        public SpoolPendiente SpoolPendiente
        {
            get { return _spoolPendiente; }
            set
            {
                if (!ReferenceEquals(_spoolPendiente, value))
                {
                    var previousValue = _spoolPendiente;
                    _spoolPendiente = value;
                    FixupSpoolPendiente(previousValue);
                    OnNavigationPropertyChanged("SpoolPendiente");
                }
            }
        }
        private SpoolPendiente _spoolPendiente;
    
        [DataMember]
        public TipoJunta TipoJunta
        {
            get { return _tipoJunta; }
            set
            {
                if (!ReferenceEquals(_tipoJunta, value))
                {
                    var previousValue = _tipoJunta;
                    _tipoJunta = value;
                    FixupTipoJunta(previousValue);
                    OnNavigationPropertyChanged("TipoJunta");
                }
            }
        }
        private TipoJunta _tipoJunta;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
    	public void OnDeserializedMethod(StreamingContext context)
    	{
    		IsDeserializing = false;
    		ChangeTracker.ChangeTrackingEnabled = true;
    		}
    
    
        protected virtual void ClearNavigationProperties()
        {
            FabArea = null;
            FamiliaAcero = null;
            FamiliaAcero1 = null;
            SpoolPendiente = null;
            TipoJunta = null;
        }

        #endregion

        #region Association Fixup
    
        private void FixupFabArea(FabArea previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JuntaSpoolPendiente.Contains(this))
            {
                previousValue.JuntaSpoolPendiente.Remove(this);
            }
    
            if (FabArea != null)
            {
                if (!FabArea.JuntaSpoolPendiente.Contains(this))
                {
                    FabArea.JuntaSpoolPendiente.Add(this);
                }
    
                FabAreaID = FabArea.FabAreaID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("FabArea")
                    && (ChangeTracker.OriginalValues["FabArea"] == FabArea))
                {
                    ChangeTracker.OriginalValues.Remove("FabArea");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("FabArea", previousValue);
                }
                if (FabArea != null && !FabArea.ChangeTracker.ChangeTrackingEnabled)
                {
                    FabArea.StartTracking();
                }
            }
        }
    
        private void FixupFamiliaAcero(FamiliaAcero previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JuntaSpoolPendiente.Contains(this))
            {
                previousValue.JuntaSpoolPendiente.Remove(this);
            }
    
            if (FamiliaAcero != null)
            {
                if (!FamiliaAcero.JuntaSpoolPendiente.Contains(this))
                {
                    FamiliaAcero.JuntaSpoolPendiente.Add(this);
                }
    
                FamiliaAceroMaterial1ID = FamiliaAcero.FamiliaAceroID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("FamiliaAcero")
                    && (ChangeTracker.OriginalValues["FamiliaAcero"] == FamiliaAcero))
                {
                    ChangeTracker.OriginalValues.Remove("FamiliaAcero");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("FamiliaAcero", previousValue);
                }
                if (FamiliaAcero != null && !FamiliaAcero.ChangeTracker.ChangeTrackingEnabled)
                {
                    FamiliaAcero.StartTracking();
                }
            }
        }
    
        private void FixupFamiliaAcero1(FamiliaAcero previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (FamiliaAcero1 != null)
            {
                FamiliaAceroMaterial2ID = FamiliaAcero1.FamiliaAceroID;
            }
    
            else if (!skipKeys)
            {
                FamiliaAceroMaterial2ID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("FamiliaAcero1")
                    && (ChangeTracker.OriginalValues["FamiliaAcero1"] == FamiliaAcero1))
                {
                    ChangeTracker.OriginalValues.Remove("FamiliaAcero1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("FamiliaAcero1", previousValue);
                }
                if (FamiliaAcero1 != null && !FamiliaAcero1.ChangeTracker.ChangeTrackingEnabled)
                {
                    FamiliaAcero1.StartTracking();
                }
            }
        }
    
        private void FixupSpoolPendiente(SpoolPendiente previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JuntaSpoolPendiente.Contains(this))
            {
                previousValue.JuntaSpoolPendiente.Remove(this);
            }
    
            if (SpoolPendiente != null)
            {
                if (!SpoolPendiente.JuntaSpoolPendiente.Contains(this))
                {
                    SpoolPendiente.JuntaSpoolPendiente.Add(this);
                }
    
                SpoolPendienteID = SpoolPendiente.SpoolPendienteID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SpoolPendiente")
                    && (ChangeTracker.OriginalValues["SpoolPendiente"] == SpoolPendiente))
                {
                    ChangeTracker.OriginalValues.Remove("SpoolPendiente");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SpoolPendiente", previousValue);
                }
                if (SpoolPendiente != null && !SpoolPendiente.ChangeTracker.ChangeTrackingEnabled)
                {
                    SpoolPendiente.StartTracking();
                }
            }
        }
    
        private void FixupTipoJunta(TipoJunta previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JuntaSpoolPendiente.Contains(this))
            {
                previousValue.JuntaSpoolPendiente.Remove(this);
            }
    
            if (TipoJunta != null)
            {
                if (!TipoJunta.JuntaSpoolPendiente.Contains(this))
                {
                    TipoJunta.JuntaSpoolPendiente.Add(this);
                }
    
                TipoJuntaID = TipoJunta.TipoJuntaID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TipoJunta")
                    && (ChangeTracker.OriginalValues["TipoJunta"] == TipoJunta))
                {
                    ChangeTracker.OriginalValues.Remove("TipoJunta");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TipoJunta", previousValue);
                }
                if (TipoJunta != null && !TipoJunta.ChangeTracker.ChangeTrackingEnabled)
                {
                    TipoJunta.StartTracking();
                }
            }
        }

        #endregion

    }
}
