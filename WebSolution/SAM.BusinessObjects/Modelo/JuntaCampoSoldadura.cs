//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SAM.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(JuntaCampo))]
    [KnownType(typeof(ProcesoRaiz))]
    [KnownType(typeof(ProcesoRelleno))]
    [KnownType(typeof(Wps))]
    [KnownType(typeof(JuntaCampoSoldaduraDetalle))]
    [Serializable]
    public partial class JuntaCampoSoldadura: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int JuntaCampoSoldaduraID
        {
            get { return _juntaCampoSoldaduraID; }
            set
            {
                if (_juntaCampoSoldaduraID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'JuntaCampoSoldaduraID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _juntaCampoSoldaduraID = value;
                    OnPropertyChanged("JuntaCampoSoldaduraID");
                }
            }
        }
        private int _juntaCampoSoldaduraID;
    
        [DataMember]
        public int JuntaCampoID
        {
            get { return _juntaCampoID; }
            set
            {
                if (_juntaCampoID != value)
                {
                    ChangeTracker.RecordOriginalValue("JuntaCampoID", _juntaCampoID);
                    if (!IsDeserializing)
                    {
                        if (JuntaCampo1 != null && JuntaCampo1.JuntaCampoID != value)
                        {
                            JuntaCampo1 = null;
                        }
                    }
                    _juntaCampoID = value;
                    OnPropertyChanged("JuntaCampoID");
                }
            }
        }
        private int _juntaCampoID;
    
        [DataMember]
        public System.DateTime FechaSoldadura
        {
            get { return _fechaSoldadura; }
            set
            {
                if (_fechaSoldadura != value)
                {
                    _fechaSoldadura = value;
                    OnPropertyChanged("FechaSoldadura");
                }
            }
        }
        private System.DateTime _fechaSoldadura;
    
        [DataMember]
        public System.DateTime FechaReporte
        {
            get { return _fechaReporte; }
            set
            {
                if (_fechaReporte != value)
                {
                    _fechaReporte = value;
                    OnPropertyChanged("FechaReporte");
                }
            }
        }
        private System.DateTime _fechaReporte;
    
        [DataMember]
        public Nullable<int> ProcesoRellenoID
        {
            get { return _procesoRellenoID; }
            set
            {
                if (_procesoRellenoID != value)
                {
                    ChangeTracker.RecordOriginalValue("ProcesoRellenoID", _procesoRellenoID);
                    if (!IsDeserializing)
                    {
                        if (ProcesoRelleno != null && ProcesoRelleno.ProcesoRellenoID != value)
                        {
                            ProcesoRelleno = null;
                        }
                    }
                    _procesoRellenoID = value;
                    OnPropertyChanged("ProcesoRellenoID");
                }
            }
        }
        private Nullable<int> _procesoRellenoID;
    
        [DataMember]
        public Nullable<int> ProcesoRaizID
        {
            get { return _procesoRaizID; }
            set
            {
                if (_procesoRaizID != value)
                {
                    ChangeTracker.RecordOriginalValue("ProcesoRaizID", _procesoRaizID);
                    if (!IsDeserializing)
                    {
                        if (ProcesoRaiz != null && ProcesoRaiz.ProcesoRaizID != value)
                        {
                            ProcesoRaiz = null;
                        }
                    }
                    _procesoRaizID = value;
                    OnPropertyChanged("ProcesoRaizID");
                }
            }
        }
        private Nullable<int> _procesoRaizID;
    
        [DataMember]
        public Nullable<int> WpsRaizID
        {
            get { return _wpsRaizID; }
            set
            {
                if (_wpsRaizID != value)
                {
                    ChangeTracker.RecordOriginalValue("WpsRaizID", _wpsRaizID);
                    if (!IsDeserializing)
                    {
                        if (Wps != null && Wps.WpsID != value)
                        {
                            Wps = null;
                        }
                    }
                    _wpsRaizID = value;
                    OnPropertyChanged("WpsRaizID");
                }
            }
        }
        private Nullable<int> _wpsRaizID;
    
        [DataMember]
        public Nullable<int> WpsRellenoID
        {
            get { return _wpsRellenoID; }
            set
            {
                if (_wpsRellenoID != value)
                {
                    ChangeTracker.RecordOriginalValue("WpsRellenoID", _wpsRellenoID);
                    if (!IsDeserializing)
                    {
                        if (Wps1 != null && Wps1.WpsID != value)
                        {
                            Wps1 = null;
                        }
                    }
                    _wpsRellenoID = value;
                    OnPropertyChanged("WpsRellenoID");
                }
            }
        }
        private Nullable<int> _wpsRellenoID;
    
        [DataMember]
        public string Observaciones
        {
            get { return _observaciones; }
            set
            {
                if (_observaciones != value)
                {
                    _observaciones = value;
                    OnPropertyChanged("Observaciones");
                }
            }
        }
        private string _observaciones;
    
        [DataMember]
        public Nullable<System.Guid> UsuarioModifica
        {
            get { return _usuarioModifica; }
            set
            {
                if (_usuarioModifica != value)
                {
                    _usuarioModifica = value;
                    OnPropertyChanged("UsuarioModifica");
                }
            }
        }
        private Nullable<System.Guid> _usuarioModifica;
    
        [DataMember]
        public Nullable<System.DateTime> FechaModificacion
        {
            get { return _fechaModificacion; }
            set
            {
                if (_fechaModificacion != value)
                {
                    _fechaModificacion = value;
                    OnPropertyChanged("FechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _fechaModificacion;
    
        [DataMember]
        public byte[] VersionRegistro
        {
            get { return _versionRegistro; }
            set
            {
                if (_versionRegistro != value)
                {
                    ChangeTracker.RecordOriginalValue("VersionRegistro", _versionRegistro);
                    _versionRegistro = value;
                    OnPropertyChanged("VersionRegistro");
                }
            }
        }
        private byte[] _versionRegistro;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<JuntaCampo> JuntaCampo
        {
            get
            {
                if (_juntaCampo == null)
                {
                    _juntaCampo = new TrackableCollection<JuntaCampo>();
                    _juntaCampo.CollectionChanged += FixupJuntaCampo;
                }
                return _juntaCampo;
            }
            set
            {
                if (!ReferenceEquals(_juntaCampo, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_juntaCampo != null)
                    {
                        _juntaCampo.CollectionChanged -= FixupJuntaCampo;
                    }
                    _juntaCampo = value;
                    if (_juntaCampo != null)
                    {
                        _juntaCampo.CollectionChanged += FixupJuntaCampo;
                    }
                    OnNavigationPropertyChanged("JuntaCampo");
                }
            }
        }
        private TrackableCollection<JuntaCampo> _juntaCampo;
    
        [DataMember]
        public JuntaCampo JuntaCampo1
        {
            get { return _juntaCampo1; }
            set
            {
                if (!ReferenceEquals(_juntaCampo1, value))
                {
                    var previousValue = _juntaCampo1;
                    _juntaCampo1 = value;
                    FixupJuntaCampo1(previousValue);
                    OnNavigationPropertyChanged("JuntaCampo1");
                }
            }
        }
        private JuntaCampo _juntaCampo1;
    
        [DataMember]
        public ProcesoRaiz ProcesoRaiz
        {
            get { return _procesoRaiz; }
            set
            {
                if (!ReferenceEquals(_procesoRaiz, value))
                {
                    var previousValue = _procesoRaiz;
                    _procesoRaiz = value;
                    FixupProcesoRaiz(previousValue);
                    OnNavigationPropertyChanged("ProcesoRaiz");
                }
            }
        }
        private ProcesoRaiz _procesoRaiz;
    
        [DataMember]
        public ProcesoRelleno ProcesoRelleno
        {
            get { return _procesoRelleno; }
            set
            {
                if (!ReferenceEquals(_procesoRelleno, value))
                {
                    var previousValue = _procesoRelleno;
                    _procesoRelleno = value;
                    FixupProcesoRelleno(previousValue);
                    OnNavigationPropertyChanged("ProcesoRelleno");
                }
            }
        }
        private ProcesoRelleno _procesoRelleno;
    
        [DataMember]
        public Wps Wps
        {
            get { return _wps; }
            set
            {
                if (!ReferenceEquals(_wps, value))
                {
                    var previousValue = _wps;
                    _wps = value;
                    FixupWps(previousValue);
                    OnNavigationPropertyChanged("Wps");
                }
            }
        }
        private Wps _wps;
    
        [DataMember]
        public Wps Wps1
        {
            get { return _wps1; }
            set
            {
                if (!ReferenceEquals(_wps1, value))
                {
                    var previousValue = _wps1;
                    _wps1 = value;
                    FixupWps1(previousValue);
                    OnNavigationPropertyChanged("Wps1");
                }
            }
        }
        private Wps _wps1;
    
        [DataMember]
        public TrackableCollection<JuntaCampoSoldaduraDetalle> JuntaCampoSoldaduraDetalle
        {
            get
            {
                if (_juntaCampoSoldaduraDetalle == null)
                {
                    _juntaCampoSoldaduraDetalle = new TrackableCollection<JuntaCampoSoldaduraDetalle>();
                    _juntaCampoSoldaduraDetalle.CollectionChanged += FixupJuntaCampoSoldaduraDetalle;
                }
                return _juntaCampoSoldaduraDetalle;
            }
            set
            {
                if (!ReferenceEquals(_juntaCampoSoldaduraDetalle, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_juntaCampoSoldaduraDetalle != null)
                    {
                        _juntaCampoSoldaduraDetalle.CollectionChanged -= FixupJuntaCampoSoldaduraDetalle;
                    }
                    _juntaCampoSoldaduraDetalle = value;
                    if (_juntaCampoSoldaduraDetalle != null)
                    {
                        _juntaCampoSoldaduraDetalle.CollectionChanged += FixupJuntaCampoSoldaduraDetalle;
                    }
                    OnNavigationPropertyChanged("JuntaCampoSoldaduraDetalle");
                }
            }
        }
        private TrackableCollection<JuntaCampoSoldaduraDetalle> _juntaCampoSoldaduraDetalle;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
    	public void OnDeserializedMethod(StreamingContext context)
    	{
    		IsDeserializing = false;
    		ChangeTracker.ChangeTrackingEnabled = true;
    			if (_juntaCampo != null)
    		{
    			_juntaCampo.CollectionChanged -= FixupJuntaCampo;
    			_juntaCampo.CollectionChanged += FixupJuntaCampo;
    			}
    			if (_juntaCampoSoldaduraDetalle != null)
    		{
    			_juntaCampoSoldaduraDetalle.CollectionChanged -= FixupJuntaCampoSoldaduraDetalle;
    			_juntaCampoSoldaduraDetalle.CollectionChanged += FixupJuntaCampoSoldaduraDetalle;
    			}
    		}
    
    
        protected virtual void ClearNavigationProperties()
        {
            JuntaCampo.Clear();
            JuntaCampo1 = null;
            ProcesoRaiz = null;
            ProcesoRelleno = null;
            Wps = null;
            Wps1 = null;
            JuntaCampoSoldaduraDetalle.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupJuntaCampo1(JuntaCampo previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JuntaCampoSoldadura1.Contains(this))
            {
                previousValue.JuntaCampoSoldadura1.Remove(this);
            }
    
            if (JuntaCampo1 != null)
            {
                if (!JuntaCampo1.JuntaCampoSoldadura1.Contains(this))
                {
                    JuntaCampo1.JuntaCampoSoldadura1.Add(this);
                }
    
                JuntaCampoID = JuntaCampo1.JuntaCampoID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("JuntaCampo1")
                    && (ChangeTracker.OriginalValues["JuntaCampo1"] == JuntaCampo1))
                {
                    ChangeTracker.OriginalValues.Remove("JuntaCampo1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("JuntaCampo1", previousValue);
                }
                if (JuntaCampo1 != null && !JuntaCampo1.ChangeTracker.ChangeTrackingEnabled)
                {
                    JuntaCampo1.StartTracking();
                }
            }
        }
    
        private void FixupProcesoRaiz(ProcesoRaiz previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JuntaCampoSoldadura.Contains(this))
            {
                previousValue.JuntaCampoSoldadura.Remove(this);
            }
    
            if (ProcesoRaiz != null)
            {
                if (!ProcesoRaiz.JuntaCampoSoldadura.Contains(this))
                {
                    ProcesoRaiz.JuntaCampoSoldadura.Add(this);
                }
    
                ProcesoRaizID = ProcesoRaiz.ProcesoRaizID;
            }
            else if (!skipKeys)
            {
                ProcesoRaizID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ProcesoRaiz")
                    && (ChangeTracker.OriginalValues["ProcesoRaiz"] == ProcesoRaiz))
                {
                    ChangeTracker.OriginalValues.Remove("ProcesoRaiz");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ProcesoRaiz", previousValue);
                }
                if (ProcesoRaiz != null && !ProcesoRaiz.ChangeTracker.ChangeTrackingEnabled)
                {
                    ProcesoRaiz.StartTracking();
                }
            }
        }
    
        private void FixupProcesoRelleno(ProcesoRelleno previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JuntaCampoSoldadura.Contains(this))
            {
                previousValue.JuntaCampoSoldadura.Remove(this);
            }
    
            if (ProcesoRelleno != null)
            {
                if (!ProcesoRelleno.JuntaCampoSoldadura.Contains(this))
                {
                    ProcesoRelleno.JuntaCampoSoldadura.Add(this);
                }
    
                ProcesoRellenoID = ProcesoRelleno.ProcesoRellenoID;
            }
            else if (!skipKeys)
            {
                ProcesoRellenoID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ProcesoRelleno")
                    && (ChangeTracker.OriginalValues["ProcesoRelleno"] == ProcesoRelleno))
                {
                    ChangeTracker.OriginalValues.Remove("ProcesoRelleno");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ProcesoRelleno", previousValue);
                }
                if (ProcesoRelleno != null && !ProcesoRelleno.ChangeTracker.ChangeTrackingEnabled)
                {
                    ProcesoRelleno.StartTracking();
                }
            }
        }
    
        private void FixupWps(Wps previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JuntaCampoSoldadura.Contains(this))
            {
                previousValue.JuntaCampoSoldadura.Remove(this);
            }
    
            if (Wps != null)
            {
                if (!Wps.JuntaCampoSoldadura.Contains(this))
                {
                    Wps.JuntaCampoSoldadura.Add(this);
                }
    
                WpsRaizID = Wps.WpsID;
            }
            else if (!skipKeys)
            {
                WpsRaizID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Wps")
                    && (ChangeTracker.OriginalValues["Wps"] == Wps))
                {
                    ChangeTracker.OriginalValues.Remove("Wps");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Wps", previousValue);
                }
                if (Wps != null && !Wps.ChangeTracker.ChangeTrackingEnabled)
                {
                    Wps.StartTracking();
                }
            }
        }
    
        private void FixupWps1(Wps previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JuntaCampoSoldadura1.Contains(this))
            {
                previousValue.JuntaCampoSoldadura1.Remove(this);
            }
    
            if (Wps1 != null)
            {
                if (!Wps1.JuntaCampoSoldadura1.Contains(this))
                {
                    Wps1.JuntaCampoSoldadura1.Add(this);
                }
    
                WpsRellenoID = Wps1.WpsID;
            }
            else if (!skipKeys)
            {
                WpsRellenoID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Wps1")
                    && (ChangeTracker.OriginalValues["Wps1"] == Wps1))
                {
                    ChangeTracker.OriginalValues.Remove("Wps1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Wps1", previousValue);
                }
                if (Wps1 != null && !Wps1.ChangeTracker.ChangeTrackingEnabled)
                {
                    Wps1.StartTracking();
                }
            }
        }
    
        private void FixupJuntaCampo(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (JuntaCampo item in e.NewItems)
                {
                    item.JuntaCampoSoldadura = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("JuntaCampo", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (JuntaCampo item in e.OldItems)
                {
                    if (ReferenceEquals(item.JuntaCampoSoldadura, this))
                    {
                        item.JuntaCampoSoldadura = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("JuntaCampo", item);
                    }
                }
            }
        }
    
        private void FixupJuntaCampoSoldaduraDetalle(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (JuntaCampoSoldaduraDetalle item in e.NewItems)
                {
                    item.JuntaCampoSoldadura = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("JuntaCampoSoldaduraDetalle", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (JuntaCampoSoldaduraDetalle item in e.OldItems)
                {
                    if (ReferenceEquals(item.JuntaCampoSoldadura, this))
                    {
                        item.JuntaCampoSoldadura = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("JuntaCampoSoldaduraDetalle", item);
                    }
                }
            }
        }

        #endregion

    }
}
