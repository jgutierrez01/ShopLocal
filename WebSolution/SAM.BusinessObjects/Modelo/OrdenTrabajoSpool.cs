//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SAM.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(CorteDetalle))]
    [KnownType(typeof(Despacho))]
    [KnownType(typeof(OrdenTrabajo))]
    [KnownType(typeof(OrdenTrabajoJunta))]
    [KnownType(typeof(OrdenTrabajoMaterial))]
    [KnownType(typeof(Spool))]
    [KnownType(typeof(JuntaWorkstatus))]
    [KnownType(typeof(WorkstatusSpool))]
    [KnownType(typeof(JuntaCampo))]
    [Serializable]
    public partial class OrdenTrabajoSpool: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int OrdenTrabajoSpoolID
        {
            get { return _ordenTrabajoSpoolID; }
            set
            {
                if (_ordenTrabajoSpoolID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'OrdenTrabajoSpoolID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _ordenTrabajoSpoolID = value;
                    OnPropertyChanged("OrdenTrabajoSpoolID");
                }
            }
        }
        private int _ordenTrabajoSpoolID;
    
        [DataMember]
        public int OrdenTrabajoID
        {
            get { return _ordenTrabajoID; }
            set
            {
                if (_ordenTrabajoID != value)
                {
                    ChangeTracker.RecordOriginalValue("OrdenTrabajoID", _ordenTrabajoID);
                    if (!IsDeserializing)
                    {
                        if (OrdenTrabajo != null && OrdenTrabajo.OrdenTrabajoID != value)
                        {
                            OrdenTrabajo = null;
                        }
                    }
                    _ordenTrabajoID = value;
                    OnPropertyChanged("OrdenTrabajoID");
                }
            }
        }
        private int _ordenTrabajoID;
    
        [DataMember]
        public int SpoolID
        {
            get { return _spoolID; }
            set
            {
                if (_spoolID != value)
                {
                    ChangeTracker.RecordOriginalValue("SpoolID", _spoolID);
                    if (!IsDeserializing)
                    {
                        if (Spool != null && Spool.SpoolID != value)
                        {
                            Spool = null;
                        }
                    }
                    _spoolID = value;
                    OnPropertyChanged("SpoolID");
                }
            }
        }
        private int _spoolID;
    
        [DataMember]
        public int Partida
        {
            get { return _partida; }
            set
            {
                if (_partida != value)
                {
                    _partida = value;
                    OnPropertyChanged("Partida");
                }
            }
        }
        private int _partida;
    
        [DataMember]
        public string NumeroControl
        {
            get { return _numeroControl; }
            set
            {
                if (_numeroControl != value)
                {
                    _numeroControl = value;
                    OnPropertyChanged("NumeroControl");
                }
            }
        }
        private string _numeroControl;
    
        [DataMember]
        public Nullable<System.Guid> UsuarioModifica
        {
            get { return _usuarioModifica; }
            set
            {
                if (_usuarioModifica != value)
                {
                    _usuarioModifica = value;
                    OnPropertyChanged("UsuarioModifica");
                }
            }
        }
        private Nullable<System.Guid> _usuarioModifica;
    
        [DataMember]
        public Nullable<System.DateTime> FechaModificacion
        {
            get { return _fechaModificacion; }
            set
            {
                if (_fechaModificacion != value)
                {
                    _fechaModificacion = value;
                    OnPropertyChanged("FechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _fechaModificacion;
    
        [DataMember]
        public byte[] VersionRegistro
        {
            get { return _versionRegistro; }
            set
            {
                if (_versionRegistro != value)
                {
                    ChangeTracker.RecordOriginalValue("VersionRegistro", _versionRegistro);
                    _versionRegistro = value;
                    OnPropertyChanged("VersionRegistro");
                }
            }
        }
        private byte[] _versionRegistro;
    
        [DataMember]
        public bool EsAsignado
        {
            get { return _esAsignado; }
            set
            {
                if (_esAsignado != value)
                {
                    _esAsignado = value;
                    OnPropertyChanged("EsAsignado");
                }
            }
        }
        private bool _esAsignado;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<CorteDetalle> CorteDetalle
        {
            get
            {
                if (_corteDetalle == null)
                {
                    _corteDetalle = new TrackableCollection<CorteDetalle>();
                    _corteDetalle.CollectionChanged += FixupCorteDetalle;
                }
                return _corteDetalle;
            }
            set
            {
                if (!ReferenceEquals(_corteDetalle, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_corteDetalle != null)
                    {
                        _corteDetalle.CollectionChanged -= FixupCorteDetalle;
                    }
                    _corteDetalle = value;
                    if (_corteDetalle != null)
                    {
                        _corteDetalle.CollectionChanged += FixupCorteDetalle;
                    }
                    OnNavigationPropertyChanged("CorteDetalle");
                }
            }
        }
        private TrackableCollection<CorteDetalle> _corteDetalle;
    
        [DataMember]
        public TrackableCollection<Despacho> Despacho
        {
            get
            {
                if (_despacho == null)
                {
                    _despacho = new TrackableCollection<Despacho>();
                    _despacho.CollectionChanged += FixupDespacho;
                }
                return _despacho;
            }
            set
            {
                if (!ReferenceEquals(_despacho, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_despacho != null)
                    {
                        _despacho.CollectionChanged -= FixupDespacho;
                    }
                    _despacho = value;
                    if (_despacho != null)
                    {
                        _despacho.CollectionChanged += FixupDespacho;
                    }
                    OnNavigationPropertyChanged("Despacho");
                }
            }
        }
        private TrackableCollection<Despacho> _despacho;
    
        [DataMember]
        public OrdenTrabajo OrdenTrabajo
        {
            get { return _ordenTrabajo; }
            set
            {
                if (!ReferenceEquals(_ordenTrabajo, value))
                {
                    var previousValue = _ordenTrabajo;
                    _ordenTrabajo = value;
                    FixupOrdenTrabajo(previousValue);
                    OnNavigationPropertyChanged("OrdenTrabajo");
                }
            }
        }
        private OrdenTrabajo _ordenTrabajo;
    
        [DataMember]
        public TrackableCollection<OrdenTrabajoJunta> OrdenTrabajoJunta
        {
            get
            {
                if (_ordenTrabajoJunta == null)
                {
                    _ordenTrabajoJunta = new TrackableCollection<OrdenTrabajoJunta>();
                    _ordenTrabajoJunta.CollectionChanged += FixupOrdenTrabajoJunta;
                }
                return _ordenTrabajoJunta;
            }
            set
            {
                if (!ReferenceEquals(_ordenTrabajoJunta, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_ordenTrabajoJunta != null)
                    {
                        _ordenTrabajoJunta.CollectionChanged -= FixupOrdenTrabajoJunta;
                    }
                    _ordenTrabajoJunta = value;
                    if (_ordenTrabajoJunta != null)
                    {
                        _ordenTrabajoJunta.CollectionChanged += FixupOrdenTrabajoJunta;
                    }
                    OnNavigationPropertyChanged("OrdenTrabajoJunta");
                }
            }
        }
        private TrackableCollection<OrdenTrabajoJunta> _ordenTrabajoJunta;
    
        [DataMember]
        public TrackableCollection<OrdenTrabajoMaterial> OrdenTrabajoMaterial
        {
            get
            {
                if (_ordenTrabajoMaterial == null)
                {
                    _ordenTrabajoMaterial = new TrackableCollection<OrdenTrabajoMaterial>();
                    _ordenTrabajoMaterial.CollectionChanged += FixupOrdenTrabajoMaterial;
                }
                return _ordenTrabajoMaterial;
            }
            set
            {
                if (!ReferenceEquals(_ordenTrabajoMaterial, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_ordenTrabajoMaterial != null)
                    {
                        _ordenTrabajoMaterial.CollectionChanged -= FixupOrdenTrabajoMaterial;
                    }
                    _ordenTrabajoMaterial = value;
                    if (_ordenTrabajoMaterial != null)
                    {
                        _ordenTrabajoMaterial.CollectionChanged += FixupOrdenTrabajoMaterial;
                    }
                    OnNavigationPropertyChanged("OrdenTrabajoMaterial");
                }
            }
        }
        private TrackableCollection<OrdenTrabajoMaterial> _ordenTrabajoMaterial;
    
        [DataMember]
        public Spool Spool
        {
            get { return _spool; }
            set
            {
                if (!ReferenceEquals(_spool, value))
                {
                    var previousValue = _spool;
                    _spool = value;
                    FixupSpool(previousValue);
                    OnNavigationPropertyChanged("Spool");
                }
            }
        }
        private Spool _spool;
    
        [DataMember]
        public TrackableCollection<JuntaWorkstatus> JuntaWorkstatus
        {
            get
            {
                if (_juntaWorkstatus == null)
                {
                    _juntaWorkstatus = new TrackableCollection<JuntaWorkstatus>();
                    _juntaWorkstatus.CollectionChanged += FixupJuntaWorkstatus;
                }
                return _juntaWorkstatus;
            }
            set
            {
                if (!ReferenceEquals(_juntaWorkstatus, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_juntaWorkstatus != null)
                    {
                        _juntaWorkstatus.CollectionChanged -= FixupJuntaWorkstatus;
                    }
                    _juntaWorkstatus = value;
                    if (_juntaWorkstatus != null)
                    {
                        _juntaWorkstatus.CollectionChanged += FixupJuntaWorkstatus;
                    }
                    OnNavigationPropertyChanged("JuntaWorkstatus");
                }
            }
        }
        private TrackableCollection<JuntaWorkstatus> _juntaWorkstatus;
    
        [DataMember]
        public TrackableCollection<WorkstatusSpool> WorkstatusSpool
        {
            get
            {
                if (_workstatusSpool == null)
                {
                    _workstatusSpool = new TrackableCollection<WorkstatusSpool>();
                    _workstatusSpool.CollectionChanged += FixupWorkstatusSpool;
                }
                return _workstatusSpool;
            }
            set
            {
                if (!ReferenceEquals(_workstatusSpool, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_workstatusSpool != null)
                    {
                        _workstatusSpool.CollectionChanged -= FixupWorkstatusSpool;
                    }
                    _workstatusSpool = value;
                    if (_workstatusSpool != null)
                    {
                        _workstatusSpool.CollectionChanged += FixupWorkstatusSpool;
                    }
                    OnNavigationPropertyChanged("WorkstatusSpool");
                }
            }
        }
        private TrackableCollection<WorkstatusSpool> _workstatusSpool;
    
        [DataMember]
        public TrackableCollection<JuntaCampo> JuntaCampo
        {
            get
            {
                if (_juntaCampo == null)
                {
                    _juntaCampo = new TrackableCollection<JuntaCampo>();
                    _juntaCampo.CollectionChanged += FixupJuntaCampo;
                }
                return _juntaCampo;
            }
            set
            {
                if (!ReferenceEquals(_juntaCampo, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_juntaCampo != null)
                    {
                        _juntaCampo.CollectionChanged -= FixupJuntaCampo;
                    }
                    _juntaCampo = value;
                    if (_juntaCampo != null)
                    {
                        _juntaCampo.CollectionChanged += FixupJuntaCampo;
                    }
                    OnNavigationPropertyChanged("JuntaCampo");
                }
            }
        }
        private TrackableCollection<JuntaCampo> _juntaCampo;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
    	public void OnDeserializedMethod(StreamingContext context)
    	{
    		IsDeserializing = false;
    		ChangeTracker.ChangeTrackingEnabled = true;
    			if (_corteDetalle != null)
    		{
    			_corteDetalle.CollectionChanged -= FixupCorteDetalle;
    			_corteDetalle.CollectionChanged += FixupCorteDetalle;
    			}
    			if (_despacho != null)
    		{
    			_despacho.CollectionChanged -= FixupDespacho;
    			_despacho.CollectionChanged += FixupDespacho;
    			}
    			if (_ordenTrabajoJunta != null)
    		{
    			_ordenTrabajoJunta.CollectionChanged -= FixupOrdenTrabajoJunta;
    			_ordenTrabajoJunta.CollectionChanged += FixupOrdenTrabajoJunta;
    			}
    			if (_ordenTrabajoMaterial != null)
    		{
    			_ordenTrabajoMaterial.CollectionChanged -= FixupOrdenTrabajoMaterial;
    			_ordenTrabajoMaterial.CollectionChanged += FixupOrdenTrabajoMaterial;
    			}
    			if (_juntaWorkstatus != null)
    		{
    			_juntaWorkstatus.CollectionChanged -= FixupJuntaWorkstatus;
    			_juntaWorkstatus.CollectionChanged += FixupJuntaWorkstatus;
    			}
    			if (_workstatusSpool != null)
    		{
    			_workstatusSpool.CollectionChanged -= FixupWorkstatusSpool;
    			_workstatusSpool.CollectionChanged += FixupWorkstatusSpool;
    			}
    			if (_juntaCampo != null)
    		{
    			_juntaCampo.CollectionChanged -= FixupJuntaCampo;
    			_juntaCampo.CollectionChanged += FixupJuntaCampo;
    			}
    		}
    
    
        protected virtual void ClearNavigationProperties()
        {
            CorteDetalle.Clear();
            Despacho.Clear();
            OrdenTrabajo = null;
            OrdenTrabajoJunta.Clear();
            OrdenTrabajoMaterial.Clear();
            Spool = null;
            JuntaWorkstatus.Clear();
            WorkstatusSpool.Clear();
            JuntaCampo.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupOrdenTrabajo(OrdenTrabajo previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.OrdenTrabajoSpool.Contains(this))
            {
                previousValue.OrdenTrabajoSpool.Remove(this);
            }
    
            if (OrdenTrabajo != null)
            {
                if (!OrdenTrabajo.OrdenTrabajoSpool.Contains(this))
                {
                    OrdenTrabajo.OrdenTrabajoSpool.Add(this);
                }
    
                OrdenTrabajoID = OrdenTrabajo.OrdenTrabajoID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("OrdenTrabajo")
                    && (ChangeTracker.OriginalValues["OrdenTrabajo"] == OrdenTrabajo))
                {
                    ChangeTracker.OriginalValues.Remove("OrdenTrabajo");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("OrdenTrabajo", previousValue);
                }
                if (OrdenTrabajo != null && !OrdenTrabajo.ChangeTracker.ChangeTrackingEnabled)
                {
                    OrdenTrabajo.StartTracking();
                }
            }
        }
    
        private void FixupSpool(Spool previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.OrdenTrabajoSpool.Contains(this))
            {
                previousValue.OrdenTrabajoSpool.Remove(this);
            }
    
            if (Spool != null)
            {
                if (!Spool.OrdenTrabajoSpool.Contains(this))
                {
                    Spool.OrdenTrabajoSpool.Add(this);
                }
    
                SpoolID = Spool.SpoolID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Spool")
                    && (ChangeTracker.OriginalValues["Spool"] == Spool))
                {
                    ChangeTracker.OriginalValues.Remove("Spool");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Spool", previousValue);
                }
                if (Spool != null && !Spool.ChangeTracker.ChangeTrackingEnabled)
                {
                    Spool.StartTracking();
                }
            }
        }
    
        private void FixupCorteDetalle(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CorteDetalle item in e.NewItems)
                {
                    item.OrdenTrabajoSpool = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CorteDetalle", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CorteDetalle item in e.OldItems)
                {
                    if (ReferenceEquals(item.OrdenTrabajoSpool, this))
                    {
                        item.OrdenTrabajoSpool = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CorteDetalle", item);
                    }
                }
            }
        }
    
        private void FixupDespacho(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Despacho item in e.NewItems)
                {
                    item.OrdenTrabajoSpool = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Despacho", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Despacho item in e.OldItems)
                {
                    if (ReferenceEquals(item.OrdenTrabajoSpool, this))
                    {
                        item.OrdenTrabajoSpool = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Despacho", item);
                    }
                }
            }
        }
    
        private void FixupOrdenTrabajoJunta(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (OrdenTrabajoJunta item in e.NewItems)
                {
                    item.OrdenTrabajoSpool = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("OrdenTrabajoJunta", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (OrdenTrabajoJunta item in e.OldItems)
                {
                    if (ReferenceEquals(item.OrdenTrabajoSpool, this))
                    {
                        item.OrdenTrabajoSpool = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("OrdenTrabajoJunta", item);
                    }
                }
            }
        }
    
        private void FixupOrdenTrabajoMaterial(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (OrdenTrabajoMaterial item in e.NewItems)
                {
                    item.OrdenTrabajoSpool = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("OrdenTrabajoMaterial", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (OrdenTrabajoMaterial item in e.OldItems)
                {
                    if (ReferenceEquals(item.OrdenTrabajoSpool, this))
                    {
                        item.OrdenTrabajoSpool = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("OrdenTrabajoMaterial", item);
                    }
                }
            }
        }
    
        private void FixupJuntaWorkstatus(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (JuntaWorkstatus item in e.NewItems)
                {
                    item.OrdenTrabajoSpool = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("JuntaWorkstatus", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (JuntaWorkstatus item in e.OldItems)
                {
                    if (ReferenceEquals(item.OrdenTrabajoSpool, this))
                    {
                        item.OrdenTrabajoSpool = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("JuntaWorkstatus", item);
                    }
                }
            }
        }
    
        private void FixupWorkstatusSpool(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (WorkstatusSpool item in e.NewItems)
                {
                    item.OrdenTrabajoSpool = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("WorkstatusSpool", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (WorkstatusSpool item in e.OldItems)
                {
                    if (ReferenceEquals(item.OrdenTrabajoSpool, this))
                    {
                        item.OrdenTrabajoSpool = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("WorkstatusSpool", item);
                    }
                }
            }
        }
    
        private void FixupJuntaCampo(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (JuntaCampo item in e.NewItems)
                {
                    item.OrdenTrabajoSpool = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("JuntaCampo", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (JuntaCampo item in e.OldItems)
                {
                    if (ReferenceEquals(item.OrdenTrabajoSpool, this))
                    {
                        item.OrdenTrabajoSpool = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("JuntaCampo", item);
                    }
                }
            }
        }

        #endregion

    }
}
