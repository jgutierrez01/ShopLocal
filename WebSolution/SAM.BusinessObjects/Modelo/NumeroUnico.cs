//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SAM.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Colada))]
    [KnownType(typeof(Fabricante))]
    [KnownType(typeof(Proveedor))]
    [KnownType(typeof(Proyecto))]
    [KnownType(typeof(NumeroUnicoInventario))]
    [KnownType(typeof(NumeroUnicoMovimiento))]
    [KnownType(typeof(NumeroUnicoSegmento))]
    [KnownType(typeof(RecepcionNumeroUnico))]
    [KnownType(typeof(Despacho))]
    [KnownType(typeof(TipoCorte))]
    [KnownType(typeof(PinturaNumeroUnico))]
    [KnownType(typeof(RequisicionNumeroUnicoDetalle))]
    [KnownType(typeof(NumeroUnicoCorte))]
    [KnownType(typeof(OrdenTrabajoMaterial))]
    [KnownType(typeof(CongeladoParcial))]
    [KnownType(typeof(JuntaCampoArmado))]
    [KnownType(typeof(ItemCode))]
    [KnownType(typeof(JuntaArmado))]
    [Serializable]
    public partial class NumeroUnico: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int NumeroUnicoID
        {
            get { return _numeroUnicoID; }
            set
            {
                if (_numeroUnicoID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'NumeroUnicoID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _numeroUnicoID = value;
                    OnPropertyChanged("NumeroUnicoID");
                }
            }
        }
        private int _numeroUnicoID;
    
        [DataMember]
        public int ProyectoID
        {
            get { return _proyectoID; }
            set
            {
                if (_proyectoID != value)
                {
                    ChangeTracker.RecordOriginalValue("ProyectoID", _proyectoID);
                    if (!IsDeserializing)
                    {
                        if (Proyecto != null && Proyecto.ProyectoID != value)
                        {
                            Proyecto = null;
                        }
                    }
                    _proyectoID = value;
                    OnPropertyChanged("ProyectoID");
                }
            }
        }
        private int _proyectoID;
    
        [DataMember]
        public Nullable<int> ItemCodeID
        {
            get { return _itemCodeID; }
            set
            {
                if (_itemCodeID != value)
                {
                    ChangeTracker.RecordOriginalValue("ItemCodeID", _itemCodeID);
                    if (!IsDeserializing)
                    {
                        if (ItemCode != null && ItemCode.ItemCodeID != value)
                        {
                            ItemCode = null;
                        }
                    }
                    _itemCodeID = value;
                    OnPropertyChanged("ItemCodeID");
                }
            }
        }
        private Nullable<int> _itemCodeID;
    
        [DataMember]
        public Nullable<int> ColadaID
        {
            get { return _coladaID; }
            set
            {
                if (_coladaID != value)
                {
                    ChangeTracker.RecordOriginalValue("ColadaID", _coladaID);
                    if (!IsDeserializing)
                    {
                        if (Colada != null && Colada.ColadaID != value)
                        {
                            Colada = null;
                        }
                    }
                    _coladaID = value;
                    OnPropertyChanged("ColadaID");
                }
            }
        }
        private Nullable<int> _coladaID;
    
        [DataMember]
        public Nullable<int> ProveedorID
        {
            get { return _proveedorID; }
            set
            {
                if (_proveedorID != value)
                {
                    ChangeTracker.RecordOriginalValue("ProveedorID", _proveedorID);
                    if (!IsDeserializing)
                    {
                        if (Proveedor != null && Proveedor.ProveedorID != value)
                        {
                            Proveedor = null;
                        }
                    }
                    _proveedorID = value;
                    OnPropertyChanged("ProveedorID");
                }
            }
        }
        private Nullable<int> _proveedorID;
    
        [DataMember]
        public Nullable<int> FabricanteID
        {
            get { return _fabricanteID; }
            set
            {
                if (_fabricanteID != value)
                {
                    ChangeTracker.RecordOriginalValue("FabricanteID", _fabricanteID);
                    if (!IsDeserializing)
                    {
                        if (Fabricante != null && Fabricante.FabricanteID != value)
                        {
                            Fabricante = null;
                        }
                    }
                    _fabricanteID = value;
                    OnPropertyChanged("FabricanteID");
                }
            }
        }
        private Nullable<int> _fabricanteID;
    
        [DataMember]
        public string Codigo
        {
            get { return _codigo; }
            set
            {
                if (_codigo != value)
                {
                    _codigo = value;
                    OnPropertyChanged("Codigo");
                }
            }
        }
        private string _codigo;
    
        [DataMember]
        public string Estatus
        {
            get { return _estatus; }
            set
            {
                if (_estatus != value)
                {
                    _estatus = value;
                    OnPropertyChanged("Estatus");
                }
            }
        }
        private string _estatus;
    
        [DataMember]
        public string Factura
        {
            get { return _factura; }
            set
            {
                if (_factura != value)
                {
                    _factura = value;
                    OnPropertyChanged("Factura");
                }
            }
        }
        private string _factura;
    
        [DataMember]
        public string PartidaFactura
        {
            get { return _partidaFactura; }
            set
            {
                if (_partidaFactura != value)
                {
                    _partidaFactura = value;
                    OnPropertyChanged("PartidaFactura");
                }
            }
        }
        private string _partidaFactura;
    
        [DataMember]
        public string OrdenDeCompra
        {
            get { return _ordenDeCompra; }
            set
            {
                if (_ordenDeCompra != value)
                {
                    _ordenDeCompra = value;
                    OnPropertyChanged("OrdenDeCompra");
                }
            }
        }
        private string _ordenDeCompra;
    
        [DataMember]
        public string PartidaOrdenDeCompra
        {
            get { return _partidaOrdenDeCompra; }
            set
            {
                if (_partidaOrdenDeCompra != value)
                {
                    _partidaOrdenDeCompra = value;
                    OnPropertyChanged("PartidaOrdenDeCompra");
                }
            }
        }
        private string _partidaOrdenDeCompra;
    
        [DataMember]
        public decimal Diametro1
        {
            get { return _diametro1; }
            set
            {
                if (_diametro1 != value)
                {
                    _diametro1 = value;
                    OnPropertyChanged("Diametro1");
                }
            }
        }
        private decimal _diametro1;
    
        [DataMember]
        public decimal Diametro2
        {
            get { return _diametro2; }
            set
            {
                if (_diametro2 != value)
                {
                    _diametro2 = value;
                    OnPropertyChanged("Diametro2");
                }
            }
        }
        private decimal _diametro2;
    
        [DataMember]
        public string Cedula
        {
            get { return _cedula; }
            set
            {
                if (_cedula != value)
                {
                    _cedula = value;
                    OnPropertyChanged("Cedula");
                }
            }
        }
        private string _cedula;
    
        [DataMember]
        public bool MarcadoAsme
        {
            get { return _marcadoAsme; }
            set
            {
                if (_marcadoAsme != value)
                {
                    _marcadoAsme = value;
                    OnPropertyChanged("MarcadoAsme");
                }
            }
        }
        private bool _marcadoAsme;
    
        [DataMember]
        public bool MarcadoGolpe
        {
            get { return _marcadoGolpe; }
            set
            {
                if (_marcadoGolpe != value)
                {
                    _marcadoGolpe = value;
                    OnPropertyChanged("MarcadoGolpe");
                }
            }
        }
        private bool _marcadoGolpe;
    
        [DataMember]
        public bool MarcadoPintura
        {
            get { return _marcadoPintura; }
            set
            {
                if (_marcadoPintura != value)
                {
                    _marcadoPintura = value;
                    OnPropertyChanged("MarcadoPintura");
                }
            }
        }
        private bool _marcadoPintura;
    
        [DataMember]
        public string PruebasHidrostaticas
        {
            get { return _pruebasHidrostaticas; }
            set
            {
                if (_pruebasHidrostaticas != value)
                {
                    _pruebasHidrostaticas = value;
                    OnPropertyChanged("PruebasHidrostaticas");
                }
            }
        }
        private string _pruebasHidrostaticas;
    
        [DataMember]
        public bool TieneDano
        {
            get { return _tieneDano; }
            set
            {
                if (_tieneDano != value)
                {
                    _tieneDano = value;
                    OnPropertyChanged("TieneDano");
                }
            }
        }
        private bool _tieneDano;
    
        [DataMember]
        public Nullable<System.Guid> UsuarioModifica
        {
            get { return _usuarioModifica; }
            set
            {
                if (_usuarioModifica != value)
                {
                    _usuarioModifica = value;
                    OnPropertyChanged("UsuarioModifica");
                }
            }
        }
        private Nullable<System.Guid> _usuarioModifica;
    
        [DataMember]
        public Nullable<System.DateTime> FechaModificacion
        {
            get { return _fechaModificacion; }
            set
            {
                if (_fechaModificacion != value)
                {
                    _fechaModificacion = value;
                    OnPropertyChanged("FechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _fechaModificacion;
    
        [DataMember]
        public byte[] VersionRegistro
        {
            get { return _versionRegistro; }
            set
            {
                if (_versionRegistro != value)
                {
                    ChangeTracker.RecordOriginalValue("VersionRegistro", _versionRegistro);
                    _versionRegistro = value;
                    OnPropertyChanged("VersionRegistro");
                }
            }
        }
        private byte[] _versionRegistro;
    
        [DataMember]
        public Nullable<int> TipoCorte1ID
        {
            get { return _tipoCorte1ID; }
            set
            {
                if (_tipoCorte1ID != value)
                {
                    ChangeTracker.RecordOriginalValue("TipoCorte1ID", _tipoCorte1ID);
                    if (!IsDeserializing)
                    {
                        if (TipoCorte != null && TipoCorte.TipoCorteID != value)
                        {
                            TipoCorte = null;
                        }
                    }
                    _tipoCorte1ID = value;
                    OnPropertyChanged("TipoCorte1ID");
                }
            }
        }
        private Nullable<int> _tipoCorte1ID;
    
        [DataMember]
        public Nullable<int> TipoCorte2ID
        {
            get { return _tipoCorte2ID; }
            set
            {
                if (_tipoCorte2ID != value)
                {
                    ChangeTracker.RecordOriginalValue("TipoCorte2ID", _tipoCorte2ID);
                    if (!IsDeserializing)
                    {
                        if (TipoCorte1 != null && TipoCorte1.TipoCorteID != value)
                        {
                            TipoCorte1 = null;
                        }
                    }
                    _tipoCorte2ID = value;
                    OnPropertyChanged("TipoCorte2ID");
                }
            }
        }
        private Nullable<int> _tipoCorte2ID;
    
        [DataMember]
        public string NumeroUnicoCliente
        {
            get { return _numeroUnicoCliente; }
            set
            {
                if (_numeroUnicoCliente != value)
                {
                    _numeroUnicoCliente = value;
                    OnPropertyChanged("NumeroUnicoCliente");
                }
            }
        }
        private string _numeroUnicoCliente;
    
        [DataMember]
        public string Rack
        {
            get { return _rack; }
            set
            {
                if (_rack != value)
                {
                    _rack = value;
                    OnPropertyChanged("Rack");
                }
            }
        }
        private string _rack;
    
        [DataMember]
        public string Observaciones
        {
            get { return _observaciones; }
            set
            {
                if (_observaciones != value)
                {
                    _observaciones = value;
                    OnPropertyChanged("Observaciones");
                }
            }
        }
        private string _observaciones;
    
        [DataMember]
        public string CampoLibreRecepcion1
        {
            get { return _campoLibreRecepcion1; }
            set
            {
                if (_campoLibreRecepcion1 != value)
                {
                    _campoLibreRecepcion1 = value;
                    OnPropertyChanged("CampoLibreRecepcion1");
                }
            }
        }
        private string _campoLibreRecepcion1;
    
        [DataMember]
        public string CampoLibreRecepcion2
        {
            get { return _campoLibreRecepcion2; }
            set
            {
                if (_campoLibreRecepcion2 != value)
                {
                    _campoLibreRecepcion2 = value;
                    OnPropertyChanged("CampoLibreRecepcion2");
                }
            }
        }
        private string _campoLibreRecepcion2;
    
        [DataMember]
        public string CampoLibreRecepcion3
        {
            get { return _campoLibreRecepcion3; }
            set
            {
                if (_campoLibreRecepcion3 != value)
                {
                    _campoLibreRecepcion3 = value;
                    OnPropertyChanged("CampoLibreRecepcion3");
                }
            }
        }
        private string _campoLibreRecepcion3;
    
        [DataMember]
        public string CampoLibreRecepcion4
        {
            get { return _campoLibreRecepcion4; }
            set
            {
                if (_campoLibreRecepcion4 != value)
                {
                    _campoLibreRecepcion4 = value;
                    OnPropertyChanged("CampoLibreRecepcion4");
                }
            }
        }
        private string _campoLibreRecepcion4;
    
        [DataMember]
        public string CampoLibreRecepcion5
        {
            get { return _campoLibreRecepcion5; }
            set
            {
                if (_campoLibreRecepcion5 != value)
                {
                    _campoLibreRecepcion5 = value;
                    OnPropertyChanged("CampoLibreRecepcion5");
                }
            }
        }
        private string _campoLibreRecepcion5;
    
        [DataMember]
        public string CampoLibre1
        {
            get { return _campoLibre1; }
            set
            {
                if (_campoLibre1 != value)
                {
                    _campoLibre1 = value;
                    OnPropertyChanged("CampoLibre1");
                }
            }
        }
        private string _campoLibre1;
    
        [DataMember]
        public string CampoLibre2
        {
            get { return _campoLibre2; }
            set
            {
                if (_campoLibre2 != value)
                {
                    _campoLibre2 = value;
                    OnPropertyChanged("CampoLibre2");
                }
            }
        }
        private string _campoLibre2;
    
        [DataMember]
        public string CampoLibre3
        {
            get { return _campoLibre3; }
            set
            {
                if (_campoLibre3 != value)
                {
                    _campoLibre3 = value;
                    OnPropertyChanged("CampoLibre3");
                }
            }
        }
        private string _campoLibre3;
    
        [DataMember]
        public string CampoLibre4
        {
            get { return _campoLibre4; }
            set
            {
                if (_campoLibre4 != value)
                {
                    _campoLibre4 = value;
                    OnPropertyChanged("CampoLibre4");
                }
            }
        }
        private string _campoLibre4;
    
        [DataMember]
        public string CampoLibre5
        {
            get { return _campoLibre5; }
            set
            {
                if (_campoLibre5 != value)
                {
                    _campoLibre5 = value;
                    OnPropertyChanged("CampoLibre5");
                }
            }
        }
        private string _campoLibre5;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public Colada Colada
        {
            get { return _colada; }
            set
            {
                if (!ReferenceEquals(_colada, value))
                {
                    var previousValue = _colada;
                    _colada = value;
                    FixupColada(previousValue);
                    OnNavigationPropertyChanged("Colada");
                }
            }
        }
        private Colada _colada;
    
        [DataMember]
        public Fabricante Fabricante
        {
            get { return _fabricante; }
            set
            {
                if (!ReferenceEquals(_fabricante, value))
                {
                    var previousValue = _fabricante;
                    _fabricante = value;
                    FixupFabricante(previousValue);
                    OnNavigationPropertyChanged("Fabricante");
                }
            }
        }
        private Fabricante _fabricante;
    
        [DataMember]
        public Proveedor Proveedor
        {
            get { return _proveedor; }
            set
            {
                if (!ReferenceEquals(_proveedor, value))
                {
                    var previousValue = _proveedor;
                    _proveedor = value;
                    FixupProveedor(previousValue);
                    OnNavigationPropertyChanged("Proveedor");
                }
            }
        }
        private Proveedor _proveedor;
    
        [DataMember]
        public Proyecto Proyecto
        {
            get { return _proyecto; }
            set
            {
                if (!ReferenceEquals(_proyecto, value))
                {
                    var previousValue = _proyecto;
                    _proyecto = value;
                    FixupProyecto(previousValue);
                    OnNavigationPropertyChanged("Proyecto");
                }
            }
        }
        private Proyecto _proyecto;
    
        [DataMember]
        public NumeroUnicoInventario NumeroUnicoInventario
        {
            get { return _numeroUnicoInventario; }
            set
            {
                if (!ReferenceEquals(_numeroUnicoInventario, value))
                {
                    var previousValue = _numeroUnicoInventario;
                    _numeroUnicoInventario = value;
                    FixupNumeroUnicoInventario(previousValue);
                    OnNavigationPropertyChanged("NumeroUnicoInventario");
                }
            }
        }
        private NumeroUnicoInventario _numeroUnicoInventario;
    
        [DataMember]
        public TrackableCollection<NumeroUnicoMovimiento> NumeroUnicoMovimiento
        {
            get
            {
                if (_numeroUnicoMovimiento == null)
                {
                    _numeroUnicoMovimiento = new TrackableCollection<NumeroUnicoMovimiento>();
                    _numeroUnicoMovimiento.CollectionChanged += FixupNumeroUnicoMovimiento;
                }
                return _numeroUnicoMovimiento;
            }
            set
            {
                if (!ReferenceEquals(_numeroUnicoMovimiento, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_numeroUnicoMovimiento != null)
                    {
                        _numeroUnicoMovimiento.CollectionChanged -= FixupNumeroUnicoMovimiento;
                    }
                    _numeroUnicoMovimiento = value;
                    if (_numeroUnicoMovimiento != null)
                    {
                        _numeroUnicoMovimiento.CollectionChanged += FixupNumeroUnicoMovimiento;
                    }
                    OnNavigationPropertyChanged("NumeroUnicoMovimiento");
                }
            }
        }
        private TrackableCollection<NumeroUnicoMovimiento> _numeroUnicoMovimiento;
    
        [DataMember]
        public TrackableCollection<NumeroUnicoSegmento> NumeroUnicoSegmento
        {
            get
            {
                if (_numeroUnicoSegmento == null)
                {
                    _numeroUnicoSegmento = new TrackableCollection<NumeroUnicoSegmento>();
                    _numeroUnicoSegmento.CollectionChanged += FixupNumeroUnicoSegmento;
                }
                return _numeroUnicoSegmento;
            }
            set
            {
                if (!ReferenceEquals(_numeroUnicoSegmento, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_numeroUnicoSegmento != null)
                    {
                        _numeroUnicoSegmento.CollectionChanged -= FixupNumeroUnicoSegmento;
                    }
                    _numeroUnicoSegmento = value;
                    if (_numeroUnicoSegmento != null)
                    {
                        _numeroUnicoSegmento.CollectionChanged += FixupNumeroUnicoSegmento;
                    }
                    OnNavigationPropertyChanged("NumeroUnicoSegmento");
                }
            }
        }
        private TrackableCollection<NumeroUnicoSegmento> _numeroUnicoSegmento;
    
        [DataMember]
        public TrackableCollection<RecepcionNumeroUnico> RecepcionNumeroUnico
        {
            get
            {
                if (_recepcionNumeroUnico == null)
                {
                    _recepcionNumeroUnico = new TrackableCollection<RecepcionNumeroUnico>();
                    _recepcionNumeroUnico.CollectionChanged += FixupRecepcionNumeroUnico;
                }
                return _recepcionNumeroUnico;
            }
            set
            {
                if (!ReferenceEquals(_recepcionNumeroUnico, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_recepcionNumeroUnico != null)
                    {
                        _recepcionNumeroUnico.CollectionChanged -= FixupRecepcionNumeroUnico;
                    }
                    _recepcionNumeroUnico = value;
                    if (_recepcionNumeroUnico != null)
                    {
                        _recepcionNumeroUnico.CollectionChanged += FixupRecepcionNumeroUnico;
                    }
                    OnNavigationPropertyChanged("RecepcionNumeroUnico");
                }
            }
        }
        private TrackableCollection<RecepcionNumeroUnico> _recepcionNumeroUnico;
    
        [DataMember]
        public TrackableCollection<Despacho> Despacho
        {
            get
            {
                if (_despacho == null)
                {
                    _despacho = new TrackableCollection<Despacho>();
                    _despacho.CollectionChanged += FixupDespacho;
                }
                return _despacho;
            }
            set
            {
                if (!ReferenceEquals(_despacho, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_despacho != null)
                    {
                        _despacho.CollectionChanged -= FixupDespacho;
                    }
                    _despacho = value;
                    if (_despacho != null)
                    {
                        _despacho.CollectionChanged += FixupDespacho;
                    }
                    OnNavigationPropertyChanged("Despacho");
                }
            }
        }
        private TrackableCollection<Despacho> _despacho;
    
        [DataMember]
        public TipoCorte TipoCorte
        {
            get { return _tipoCorte; }
            set
            {
                if (!ReferenceEquals(_tipoCorte, value))
                {
                    var previousValue = _tipoCorte;
                    _tipoCorte = value;
                    FixupTipoCorte(previousValue);
                    OnNavigationPropertyChanged("TipoCorte");
                }
            }
        }
        private TipoCorte _tipoCorte;
    
        [DataMember]
        public TipoCorte TipoCorte1
        {
            get { return _tipoCorte1; }
            set
            {
                if (!ReferenceEquals(_tipoCorte1, value))
                {
                    var previousValue = _tipoCorte1;
                    _tipoCorte1 = value;
                    FixupTipoCorte1(previousValue);
                    OnNavigationPropertyChanged("TipoCorte1");
                }
            }
        }
        private TipoCorte _tipoCorte1;
    
        [DataMember]
        public TrackableCollection<PinturaNumeroUnico> PinturaNumeroUnico
        {
            get
            {
                if (_pinturaNumeroUnico == null)
                {
                    _pinturaNumeroUnico = new TrackableCollection<PinturaNumeroUnico>();
                    _pinturaNumeroUnico.CollectionChanged += FixupPinturaNumeroUnico;
                }
                return _pinturaNumeroUnico;
            }
            set
            {
                if (!ReferenceEquals(_pinturaNumeroUnico, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_pinturaNumeroUnico != null)
                    {
                        _pinturaNumeroUnico.CollectionChanged -= FixupPinturaNumeroUnico;
                    }
                    _pinturaNumeroUnico = value;
                    if (_pinturaNumeroUnico != null)
                    {
                        _pinturaNumeroUnico.CollectionChanged += FixupPinturaNumeroUnico;
                    }
                    OnNavigationPropertyChanged("PinturaNumeroUnico");
                }
            }
        }
        private TrackableCollection<PinturaNumeroUnico> _pinturaNumeroUnico;
    
        [DataMember]
        public TrackableCollection<RequisicionNumeroUnicoDetalle> RequisicionNumeroUnicoDetalle
        {
            get
            {
                if (_requisicionNumeroUnicoDetalle == null)
                {
                    _requisicionNumeroUnicoDetalle = new TrackableCollection<RequisicionNumeroUnicoDetalle>();
                    _requisicionNumeroUnicoDetalle.CollectionChanged += FixupRequisicionNumeroUnicoDetalle;
                }
                return _requisicionNumeroUnicoDetalle;
            }
            set
            {
                if (!ReferenceEquals(_requisicionNumeroUnicoDetalle, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_requisicionNumeroUnicoDetalle != null)
                    {
                        _requisicionNumeroUnicoDetalle.CollectionChanged -= FixupRequisicionNumeroUnicoDetalle;
                    }
                    _requisicionNumeroUnicoDetalle = value;
                    if (_requisicionNumeroUnicoDetalle != null)
                    {
                        _requisicionNumeroUnicoDetalle.CollectionChanged += FixupRequisicionNumeroUnicoDetalle;
                    }
                    OnNavigationPropertyChanged("RequisicionNumeroUnicoDetalle");
                }
            }
        }
        private TrackableCollection<RequisicionNumeroUnicoDetalle> _requisicionNumeroUnicoDetalle;
    
        [DataMember]
        public TrackableCollection<NumeroUnicoCorte> NumeroUnicoCorte
        {
            get
            {
                if (_numeroUnicoCorte == null)
                {
                    _numeroUnicoCorte = new TrackableCollection<NumeroUnicoCorte>();
                    _numeroUnicoCorte.CollectionChanged += FixupNumeroUnicoCorte;
                }
                return _numeroUnicoCorte;
            }
            set
            {
                if (!ReferenceEquals(_numeroUnicoCorte, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_numeroUnicoCorte != null)
                    {
                        _numeroUnicoCorte.CollectionChanged -= FixupNumeroUnicoCorte;
                    }
                    _numeroUnicoCorte = value;
                    if (_numeroUnicoCorte != null)
                    {
                        _numeroUnicoCorte.CollectionChanged += FixupNumeroUnicoCorte;
                    }
                    OnNavigationPropertyChanged("NumeroUnicoCorte");
                }
            }
        }
        private TrackableCollection<NumeroUnicoCorte> _numeroUnicoCorte;
    
        [DataMember]
        public TrackableCollection<OrdenTrabajoMaterial> MaterialesCongelados
        {
            get
            {
                if (_materialesCongelados == null)
                {
                    _materialesCongelados = new TrackableCollection<OrdenTrabajoMaterial>();
                    _materialesCongelados.CollectionChanged += FixupMaterialesCongelados;
                }
                return _materialesCongelados;
            }
            set
            {
                if (!ReferenceEquals(_materialesCongelados, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_materialesCongelados != null)
                    {
                        _materialesCongelados.CollectionChanged -= FixupMaterialesCongelados;
                    }
                    _materialesCongelados = value;
                    if (_materialesCongelados != null)
                    {
                        _materialesCongelados.CollectionChanged += FixupMaterialesCongelados;
                    }
                    OnNavigationPropertyChanged("MaterialesCongelados");
                }
            }
        }
        private TrackableCollection<OrdenTrabajoMaterial> _materialesCongelados;
    
        [DataMember]
        public TrackableCollection<OrdenTrabajoMaterial> MaterialesDespachados
        {
            get
            {
                if (_materialesDespachados == null)
                {
                    _materialesDespachados = new TrackableCollection<OrdenTrabajoMaterial>();
                    _materialesDespachados.CollectionChanged += FixupMaterialesDespachados;
                }
                return _materialesDespachados;
            }
            set
            {
                if (!ReferenceEquals(_materialesDespachados, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_materialesDespachados != null)
                    {
                        _materialesDespachados.CollectionChanged -= FixupMaterialesDespachados;
                    }
                    _materialesDespachados = value;
                    if (_materialesDespachados != null)
                    {
                        _materialesDespachados.CollectionChanged += FixupMaterialesDespachados;
                    }
                    OnNavigationPropertyChanged("MaterialesDespachados");
                }
            }
        }
        private TrackableCollection<OrdenTrabajoMaterial> _materialesDespachados;
    
        [DataMember]
        public TrackableCollection<OrdenTrabajoMaterial> MaterialesSugeridos
        {
            get
            {
                if (_materialesSugeridos == null)
                {
                    _materialesSugeridos = new TrackableCollection<OrdenTrabajoMaterial>();
                    _materialesSugeridos.CollectionChanged += FixupMaterialesSugeridos;
                }
                return _materialesSugeridos;
            }
            set
            {
                if (!ReferenceEquals(_materialesSugeridos, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_materialesSugeridos != null)
                    {
                        _materialesSugeridos.CollectionChanged -= FixupMaterialesSugeridos;
                    }
                    _materialesSugeridos = value;
                    if (_materialesSugeridos != null)
                    {
                        _materialesSugeridos.CollectionChanged += FixupMaterialesSugeridos;
                    }
                    OnNavigationPropertyChanged("MaterialesSugeridos");
                }
            }
        }
        private TrackableCollection<OrdenTrabajoMaterial> _materialesSugeridos;
    
        [DataMember]
        public TrackableCollection<OrdenTrabajoMaterial> OrdenTrabajoMaterial
        {
            get
            {
                if (_ordenTrabajoMaterial == null)
                {
                    _ordenTrabajoMaterial = new TrackableCollection<OrdenTrabajoMaterial>();
                    _ordenTrabajoMaterial.CollectionChanged += FixupOrdenTrabajoMaterial;
                }
                return _ordenTrabajoMaterial;
            }
            set
            {
                if (!ReferenceEquals(_ordenTrabajoMaterial, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_ordenTrabajoMaterial != null)
                    {
                        _ordenTrabajoMaterial.CollectionChanged -= FixupOrdenTrabajoMaterial;
                    }
                    _ordenTrabajoMaterial = value;
                    if (_ordenTrabajoMaterial != null)
                    {
                        _ordenTrabajoMaterial.CollectionChanged += FixupOrdenTrabajoMaterial;
                    }
                    OnNavigationPropertyChanged("OrdenTrabajoMaterial");
                }
            }
        }
        private TrackableCollection<OrdenTrabajoMaterial> _ordenTrabajoMaterial;
    
        [DataMember]
        public TrackableCollection<CongeladoParcial> CongeladoParcial
        {
            get
            {
                if (_congeladoParcial == null)
                {
                    _congeladoParcial = new TrackableCollection<CongeladoParcial>();
                    _congeladoParcial.CollectionChanged += FixupCongeladoParcial;
                }
                return _congeladoParcial;
            }
            set
            {
                if (!ReferenceEquals(_congeladoParcial, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_congeladoParcial != null)
                    {
                        _congeladoParcial.CollectionChanged -= FixupCongeladoParcial;
                    }
                    _congeladoParcial = value;
                    if (_congeladoParcial != null)
                    {
                        _congeladoParcial.CollectionChanged += FixupCongeladoParcial;
                    }
                    OnNavigationPropertyChanged("CongeladoParcial");
                }
            }
        }
        private TrackableCollection<CongeladoParcial> _congeladoParcial;
    
        [DataMember]
        public TrackableCollection<JuntaCampoArmado> JuntaCampoArmado
        {
            get
            {
                if (_juntaCampoArmado == null)
                {
                    _juntaCampoArmado = new TrackableCollection<JuntaCampoArmado>();
                    _juntaCampoArmado.CollectionChanged += FixupJuntaCampoArmado;
                }
                return _juntaCampoArmado;
            }
            set
            {
                if (!ReferenceEquals(_juntaCampoArmado, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_juntaCampoArmado != null)
                    {
                        _juntaCampoArmado.CollectionChanged -= FixupJuntaCampoArmado;
                    }
                    _juntaCampoArmado = value;
                    if (_juntaCampoArmado != null)
                    {
                        _juntaCampoArmado.CollectionChanged += FixupJuntaCampoArmado;
                    }
                    OnNavigationPropertyChanged("JuntaCampoArmado");
                }
            }
        }
        private TrackableCollection<JuntaCampoArmado> _juntaCampoArmado;
    
        [DataMember]
        public TrackableCollection<JuntaCampoArmado> JuntaCampoArmado1
        {
            get
            {
                if (_juntaCampoArmado1 == null)
                {
                    _juntaCampoArmado1 = new TrackableCollection<JuntaCampoArmado>();
                    _juntaCampoArmado1.CollectionChanged += FixupJuntaCampoArmado1;
                }
                return _juntaCampoArmado1;
            }
            set
            {
                if (!ReferenceEquals(_juntaCampoArmado1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_juntaCampoArmado1 != null)
                    {
                        _juntaCampoArmado1.CollectionChanged -= FixupJuntaCampoArmado1;
                    }
                    _juntaCampoArmado1 = value;
                    if (_juntaCampoArmado1 != null)
                    {
                        _juntaCampoArmado1.CollectionChanged += FixupJuntaCampoArmado1;
                    }
                    OnNavigationPropertyChanged("JuntaCampoArmado1");
                }
            }
        }
        private TrackableCollection<JuntaCampoArmado> _juntaCampoArmado1;
    
        [DataMember]
        public ItemCode ItemCode
        {
            get { return _itemCode; }
            set
            {
                if (!ReferenceEquals(_itemCode, value))
                {
                    var previousValue = _itemCode;
                    _itemCode = value;
                    FixupItemCode(previousValue);
                    OnNavigationPropertyChanged("ItemCode");
                }
            }
        }
        private ItemCode _itemCode;
    
        [DataMember]
        public TrackableCollection<JuntaArmado> JuntaArmado
        {
            get
            {
                if (_juntaArmado == null)
                {
                    _juntaArmado = new TrackableCollection<JuntaArmado>();
                    _juntaArmado.CollectionChanged += FixupJuntaArmado;
                }
                return _juntaArmado;
            }
            set
            {
                if (!ReferenceEquals(_juntaArmado, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_juntaArmado != null)
                    {
                        _juntaArmado.CollectionChanged -= FixupJuntaArmado;
                    }
                    _juntaArmado = value;
                    if (_juntaArmado != null)
                    {
                        _juntaArmado.CollectionChanged += FixupJuntaArmado;
                    }
                    OnNavigationPropertyChanged("JuntaArmado");
                }
            }
        }
        private TrackableCollection<JuntaArmado> _juntaArmado;
    
        [DataMember]
        public TrackableCollection<JuntaArmado> JuntaArmado1
        {
            get
            {
                if (_juntaArmado1 == null)
                {
                    _juntaArmado1 = new TrackableCollection<JuntaArmado>();
                    _juntaArmado1.CollectionChanged += FixupJuntaArmado1;
                }
                return _juntaArmado1;
            }
            set
            {
                if (!ReferenceEquals(_juntaArmado1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_juntaArmado1 != null)
                    {
                        _juntaArmado1.CollectionChanged -= FixupJuntaArmado1;
                    }
                    _juntaArmado1 = value;
                    if (_juntaArmado1 != null)
                    {
                        _juntaArmado1.CollectionChanged += FixupJuntaArmado1;
                    }
                    OnNavigationPropertyChanged("JuntaArmado1");
                }
            }
        }
        private TrackableCollection<JuntaArmado> _juntaArmado1;
    
        [DataMember]
        public TrackableCollection<JuntaArmado> JuntaArmado2
        {
            get
            {
                if (_juntaArmado2 == null)
                {
                    _juntaArmado2 = new TrackableCollection<JuntaArmado>();
                    _juntaArmado2.CollectionChanged += FixupJuntaArmado2;
                }
                return _juntaArmado2;
            }
            set
            {
                if (!ReferenceEquals(_juntaArmado2, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_juntaArmado2 != null)
                    {
                        _juntaArmado2.CollectionChanged -= FixupJuntaArmado2;
                    }
                    _juntaArmado2 = value;
                    if (_juntaArmado2 != null)
                    {
                        _juntaArmado2.CollectionChanged += FixupJuntaArmado2;
                    }
                    OnNavigationPropertyChanged("JuntaArmado2");
                }
            }
        }
        private TrackableCollection<JuntaArmado> _juntaArmado2;
    
        [DataMember]
        public TrackableCollection<JuntaArmado> JuntaArmado3
        {
            get
            {
                if (_juntaArmado3 == null)
                {
                    _juntaArmado3 = new TrackableCollection<JuntaArmado>();
                    _juntaArmado3.CollectionChanged += FixupJuntaArmado3;
                }
                return _juntaArmado3;
            }
            set
            {
                if (!ReferenceEquals(_juntaArmado3, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_juntaArmado3 != null)
                    {
                        _juntaArmado3.CollectionChanged -= FixupJuntaArmado3;
                    }
                    _juntaArmado3 = value;
                    if (_juntaArmado3 != null)
                    {
                        _juntaArmado3.CollectionChanged += FixupJuntaArmado3;
                    }
                    OnNavigationPropertyChanged("JuntaArmado3");
                }
            }
        }
        private TrackableCollection<JuntaArmado> _juntaArmado3;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
    	public void OnDeserializedMethod(StreamingContext context)
    	{
    		IsDeserializing = false;
    		ChangeTracker.ChangeTrackingEnabled = true;
    			if (_numeroUnicoMovimiento != null)
    		{
    			_numeroUnicoMovimiento.CollectionChanged -= FixupNumeroUnicoMovimiento;
    			_numeroUnicoMovimiento.CollectionChanged += FixupNumeroUnicoMovimiento;
    			}
    			if (_numeroUnicoSegmento != null)
    		{
    			_numeroUnicoSegmento.CollectionChanged -= FixupNumeroUnicoSegmento;
    			_numeroUnicoSegmento.CollectionChanged += FixupNumeroUnicoSegmento;
    			}
    			if (_recepcionNumeroUnico != null)
    		{
    			_recepcionNumeroUnico.CollectionChanged -= FixupRecepcionNumeroUnico;
    			_recepcionNumeroUnico.CollectionChanged += FixupRecepcionNumeroUnico;
    			}
    			if (_despacho != null)
    		{
    			_despacho.CollectionChanged -= FixupDespacho;
    			_despacho.CollectionChanged += FixupDespacho;
    			}
    			if (_pinturaNumeroUnico != null)
    		{
    			_pinturaNumeroUnico.CollectionChanged -= FixupPinturaNumeroUnico;
    			_pinturaNumeroUnico.CollectionChanged += FixupPinturaNumeroUnico;
    			}
    			if (_requisicionNumeroUnicoDetalle != null)
    		{
    			_requisicionNumeroUnicoDetalle.CollectionChanged -= FixupRequisicionNumeroUnicoDetalle;
    			_requisicionNumeroUnicoDetalle.CollectionChanged += FixupRequisicionNumeroUnicoDetalle;
    			}
    			if (_numeroUnicoCorte != null)
    		{
    			_numeroUnicoCorte.CollectionChanged -= FixupNumeroUnicoCorte;
    			_numeroUnicoCorte.CollectionChanged += FixupNumeroUnicoCorte;
    			}
    			if (_materialesCongelados != null)
    		{
    			_materialesCongelados.CollectionChanged -= FixupMaterialesCongelados;
    			_materialesCongelados.CollectionChanged += FixupMaterialesCongelados;
    			}
    			if (_materialesDespachados != null)
    		{
    			_materialesDespachados.CollectionChanged -= FixupMaterialesDespachados;
    			_materialesDespachados.CollectionChanged += FixupMaterialesDespachados;
    			}
    			if (_materialesSugeridos != null)
    		{
    			_materialesSugeridos.CollectionChanged -= FixupMaterialesSugeridos;
    			_materialesSugeridos.CollectionChanged += FixupMaterialesSugeridos;
    			}
    			if (_ordenTrabajoMaterial != null)
    		{
    			_ordenTrabajoMaterial.CollectionChanged -= FixupOrdenTrabajoMaterial;
    			_ordenTrabajoMaterial.CollectionChanged += FixupOrdenTrabajoMaterial;
    			}
    			if (_congeladoParcial != null)
    		{
    			_congeladoParcial.CollectionChanged -= FixupCongeladoParcial;
    			_congeladoParcial.CollectionChanged += FixupCongeladoParcial;
    			}
    			if (_juntaCampoArmado != null)
    		{
    			_juntaCampoArmado.CollectionChanged -= FixupJuntaCampoArmado;
    			_juntaCampoArmado.CollectionChanged += FixupJuntaCampoArmado;
    			}
    			if (_juntaCampoArmado1 != null)
    		{
    			_juntaCampoArmado1.CollectionChanged -= FixupJuntaCampoArmado1;
    			_juntaCampoArmado1.CollectionChanged += FixupJuntaCampoArmado1;
    			}
    			if (_juntaArmado != null)
    		{
    			_juntaArmado.CollectionChanged -= FixupJuntaArmado;
    			_juntaArmado.CollectionChanged += FixupJuntaArmado;
    			}
    			if (_juntaArmado1 != null)
    		{
    			_juntaArmado1.CollectionChanged -= FixupJuntaArmado1;
    			_juntaArmado1.CollectionChanged += FixupJuntaArmado1;
    			}
    			if (_juntaArmado2 != null)
    		{
    			_juntaArmado2.CollectionChanged -= FixupJuntaArmado2;
    			_juntaArmado2.CollectionChanged += FixupJuntaArmado2;
    			}
    			if (_juntaArmado3 != null)
    		{
    			_juntaArmado3.CollectionChanged -= FixupJuntaArmado3;
    			_juntaArmado3.CollectionChanged += FixupJuntaArmado3;
    			}
    		}
    
    
        protected virtual void ClearNavigationProperties()
        {
            Colada = null;
            Fabricante = null;
            Proveedor = null;
            Proyecto = null;
            NumeroUnicoInventario = null;
            NumeroUnicoMovimiento.Clear();
            NumeroUnicoSegmento.Clear();
            RecepcionNumeroUnico.Clear();
            Despacho.Clear();
            TipoCorte = null;
            TipoCorte1 = null;
            PinturaNumeroUnico.Clear();
            RequisicionNumeroUnicoDetalle.Clear();
            NumeroUnicoCorte.Clear();
            MaterialesCongelados.Clear();
            MaterialesDespachados.Clear();
            MaterialesSugeridos.Clear();
            OrdenTrabajoMaterial.Clear();
            CongeladoParcial.Clear();
            JuntaCampoArmado.Clear();
            JuntaCampoArmado1.Clear();
            ItemCode = null;
            JuntaArmado.Clear();
            JuntaArmado1.Clear();
            JuntaArmado2.Clear();
            JuntaArmado3.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupColada(Colada previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.NumeroUnico.Contains(this))
            {
                previousValue.NumeroUnico.Remove(this);
            }
    
            if (Colada != null)
            {
                if (!Colada.NumeroUnico.Contains(this))
                {
                    Colada.NumeroUnico.Add(this);
                }
    
                ColadaID = Colada.ColadaID;
            }
            else if (!skipKeys)
            {
                ColadaID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Colada")
                    && (ChangeTracker.OriginalValues["Colada"] == Colada))
                {
                    ChangeTracker.OriginalValues.Remove("Colada");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Colada", previousValue);
                }
                if (Colada != null && !Colada.ChangeTracker.ChangeTrackingEnabled)
                {
                    Colada.StartTracking();
                }
            }
        }
    
        private void FixupFabricante(Fabricante previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.NumeroUnico.Contains(this))
            {
                previousValue.NumeroUnico.Remove(this);
            }
    
            if (Fabricante != null)
            {
                if (!Fabricante.NumeroUnico.Contains(this))
                {
                    Fabricante.NumeroUnico.Add(this);
                }
    
                FabricanteID = Fabricante.FabricanteID;
            }
            else if (!skipKeys)
            {
                FabricanteID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Fabricante")
                    && (ChangeTracker.OriginalValues["Fabricante"] == Fabricante))
                {
                    ChangeTracker.OriginalValues.Remove("Fabricante");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Fabricante", previousValue);
                }
                if (Fabricante != null && !Fabricante.ChangeTracker.ChangeTrackingEnabled)
                {
                    Fabricante.StartTracking();
                }
            }
        }
    
        private void FixupProveedor(Proveedor previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.NumeroUnico.Contains(this))
            {
                previousValue.NumeroUnico.Remove(this);
            }
    
            if (Proveedor != null)
            {
                if (!Proveedor.NumeroUnico.Contains(this))
                {
                    Proveedor.NumeroUnico.Add(this);
                }
    
                ProveedorID = Proveedor.ProveedorID;
            }
            else if (!skipKeys)
            {
                ProveedorID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Proveedor")
                    && (ChangeTracker.OriginalValues["Proveedor"] == Proveedor))
                {
                    ChangeTracker.OriginalValues.Remove("Proveedor");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Proveedor", previousValue);
                }
                if (Proveedor != null && !Proveedor.ChangeTracker.ChangeTrackingEnabled)
                {
                    Proveedor.StartTracking();
                }
            }
        }
    
        private void FixupProyecto(Proyecto previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.NumeroUnico.Contains(this))
            {
                previousValue.NumeroUnico.Remove(this);
            }
    
            if (Proyecto != null)
            {
                if (!Proyecto.NumeroUnico.Contains(this))
                {
                    Proyecto.NumeroUnico.Add(this);
                }
    
                ProyectoID = Proyecto.ProyectoID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Proyecto")
                    && (ChangeTracker.OriginalValues["Proyecto"] == Proyecto))
                {
                    ChangeTracker.OriginalValues.Remove("Proyecto");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Proyecto", previousValue);
                }
                if (Proyecto != null && !Proyecto.ChangeTracker.ChangeTrackingEnabled)
                {
                    Proyecto.StartTracking();
                }
            }
        }
    
        private void FixupNumeroUnicoInventario(NumeroUnicoInventario previousValue)
        {
            // This is the principal end in an association that performs cascade deletes.
            // Update the event listener to refer to the new dependent.
            if (previousValue != null)
            {
                ChangeTracker.ObjectStateChanging -= previousValue.HandleCascadeDelete;
            }
    
            if (NumeroUnicoInventario != null)
            {
                ChangeTracker.ObjectStateChanging += NumeroUnicoInventario.HandleCascadeDelete;
            }
    
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && ReferenceEquals(previousValue.NumeroUnico, this))
            {
                previousValue.NumeroUnico = null;
            }
    
            if (NumeroUnicoInventario != null)
            {
                NumeroUnicoInventario.NumeroUnico = this;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("NumeroUnicoInventario")
                    && (ChangeTracker.OriginalValues["NumeroUnicoInventario"] == NumeroUnicoInventario))
                {
                    ChangeTracker.OriginalValues.Remove("NumeroUnicoInventario");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("NumeroUnicoInventario", previousValue);
                    // This is the principal end of an identifying association, so the dependent must be deleted when the relationship is removed.
                    // If the current state of the dependent is Added, the relationship can be changed without causing the dependent to be deleted.
                    if (previousValue != null && previousValue.ChangeTracker.State != ObjectState.Added)
                    {
                        previousValue.MarkAsDeleted();
                    }
                }
                if (NumeroUnicoInventario != null && !NumeroUnicoInventario.ChangeTracker.ChangeTrackingEnabled)
                {
                    NumeroUnicoInventario.StartTracking();
                }
            }
        }
    
        private void FixupTipoCorte(TipoCorte previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.NumeroUnico.Contains(this))
            {
                previousValue.NumeroUnico.Remove(this);
            }
    
            if (TipoCorte != null)
            {
                if (!TipoCorte.NumeroUnico.Contains(this))
                {
                    TipoCorte.NumeroUnico.Add(this);
                }
    
                TipoCorte1ID = TipoCorte.TipoCorteID;
            }
            else if (!skipKeys)
            {
                TipoCorte1ID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TipoCorte")
                    && (ChangeTracker.OriginalValues["TipoCorte"] == TipoCorte))
                {
                    ChangeTracker.OriginalValues.Remove("TipoCorte");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TipoCorte", previousValue);
                }
                if (TipoCorte != null && !TipoCorte.ChangeTracker.ChangeTrackingEnabled)
                {
                    TipoCorte.StartTracking();
                }
            }
        }
    
        private void FixupTipoCorte1(TipoCorte previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.NumeroUnico1.Contains(this))
            {
                previousValue.NumeroUnico1.Remove(this);
            }
    
            if (TipoCorte1 != null)
            {
                if (!TipoCorte1.NumeroUnico1.Contains(this))
                {
                    TipoCorte1.NumeroUnico1.Add(this);
                }
    
                TipoCorte2ID = TipoCorte1.TipoCorteID;
            }
            else if (!skipKeys)
            {
                TipoCorte2ID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TipoCorte1")
                    && (ChangeTracker.OriginalValues["TipoCorte1"] == TipoCorte1))
                {
                    ChangeTracker.OriginalValues.Remove("TipoCorte1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TipoCorte1", previousValue);
                }
                if (TipoCorte1 != null && !TipoCorte1.ChangeTracker.ChangeTrackingEnabled)
                {
                    TipoCorte1.StartTracking();
                }
            }
        }
    
        private void FixupItemCode(ItemCode previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.NumeroUnico.Contains(this))
            {
                previousValue.NumeroUnico.Remove(this);
            }
    
            if (ItemCode != null)
            {
                if (!ItemCode.NumeroUnico.Contains(this))
                {
                    ItemCode.NumeroUnico.Add(this);
                }
    
                ItemCodeID = ItemCode.ItemCodeID;
            }
            else if (!skipKeys)
            {
                ItemCodeID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ItemCode")
                    && (ChangeTracker.OriginalValues["ItemCode"] == ItemCode))
                {
                    ChangeTracker.OriginalValues.Remove("ItemCode");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ItemCode", previousValue);
                }
                if (ItemCode != null && !ItemCode.ChangeTracker.ChangeTrackingEnabled)
                {
                    ItemCode.StartTracking();
                }
            }
        }
    
        private void FixupNumeroUnicoMovimiento(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (NumeroUnicoMovimiento item in e.NewItems)
                {
                    item.NumeroUnico = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("NumeroUnicoMovimiento", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (NumeroUnicoMovimiento item in e.OldItems)
                {
                    if (ReferenceEquals(item.NumeroUnico, this))
                    {
                        item.NumeroUnico = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("NumeroUnicoMovimiento", item);
                    }
                }
            }
        }
    
        private void FixupNumeroUnicoSegmento(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (NumeroUnicoSegmento item in e.NewItems)
                {
                    item.NumeroUnico = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("NumeroUnicoSegmento", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (NumeroUnicoSegmento item in e.OldItems)
                {
                    if (ReferenceEquals(item.NumeroUnico, this))
                    {
                        item.NumeroUnico = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("NumeroUnicoSegmento", item);
                    }
                }
            }
        }
    
        private void FixupRecepcionNumeroUnico(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RecepcionNumeroUnico item in e.NewItems)
                {
                    item.NumeroUnico = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RecepcionNumeroUnico", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RecepcionNumeroUnico item in e.OldItems)
                {
                    if (ReferenceEquals(item.NumeroUnico, this))
                    {
                        item.NumeroUnico = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RecepcionNumeroUnico", item);
                    }
                }
            }
        }
    
        private void FixupDespacho(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Despacho item in e.NewItems)
                {
                    item.NumeroUnico = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Despacho", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Despacho item in e.OldItems)
                {
                    if (ReferenceEquals(item.NumeroUnico, this))
                    {
                        item.NumeroUnico = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Despacho", item);
                    }
                }
            }
        }
    
        private void FixupPinturaNumeroUnico(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (PinturaNumeroUnico item in e.NewItems)
                {
                    item.NumeroUnico = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("PinturaNumeroUnico", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PinturaNumeroUnico item in e.OldItems)
                {
                    if (ReferenceEquals(item.NumeroUnico, this))
                    {
                        item.NumeroUnico = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("PinturaNumeroUnico", item);
                    }
                }
            }
        }
    
        private void FixupRequisicionNumeroUnicoDetalle(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RequisicionNumeroUnicoDetalle item in e.NewItems)
                {
                    item.NumeroUnico = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RequisicionNumeroUnicoDetalle", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RequisicionNumeroUnicoDetalle item in e.OldItems)
                {
                    if (ReferenceEquals(item.NumeroUnico, this))
                    {
                        item.NumeroUnico = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RequisicionNumeroUnicoDetalle", item);
                    }
                }
            }
        }
    
        private void FixupNumeroUnicoCorte(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (NumeroUnicoCorte item in e.NewItems)
                {
                    item.NumeroUnico = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("NumeroUnicoCorte", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (NumeroUnicoCorte item in e.OldItems)
                {
                    if (ReferenceEquals(item.NumeroUnico, this))
                    {
                        item.NumeroUnico = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("NumeroUnicoCorte", item);
                    }
                }
            }
        }
    
        private void FixupMaterialesCongelados(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (OrdenTrabajoMaterial item in e.NewItems)
                {
                    item.NumeroUnicoCongelado = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("MaterialesCongelados", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (OrdenTrabajoMaterial item in e.OldItems)
                {
                    if (ReferenceEquals(item.NumeroUnicoCongelado, this))
                    {
                        item.NumeroUnicoCongelado = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("MaterialesCongelados", item);
                    }
                }
            }
        }
    
        private void FixupMaterialesDespachados(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (OrdenTrabajoMaterial item in e.NewItems)
                {
                    item.NumeroUnicoDespachado = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("MaterialesDespachados", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (OrdenTrabajoMaterial item in e.OldItems)
                {
                    if (ReferenceEquals(item.NumeroUnicoDespachado, this))
                    {
                        item.NumeroUnicoDespachado = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("MaterialesDespachados", item);
                    }
                }
            }
        }
    
        private void FixupMaterialesSugeridos(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (OrdenTrabajoMaterial item in e.NewItems)
                {
                    item.NumeroUnicoSugerido = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("MaterialesSugeridos", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (OrdenTrabajoMaterial item in e.OldItems)
                {
                    if (ReferenceEquals(item.NumeroUnicoSugerido, this))
                    {
                        item.NumeroUnicoSugerido = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("MaterialesSugeridos", item);
                    }
                }
            }
        }
    
        private void FixupOrdenTrabajoMaterial(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (OrdenTrabajoMaterial item in e.NewItems)
                {
                    item.NumeroUnico = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("OrdenTrabajoMaterial", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (OrdenTrabajoMaterial item in e.OldItems)
                {
                    if (ReferenceEquals(item.NumeroUnico, this))
                    {
                        item.NumeroUnico = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("OrdenTrabajoMaterial", item);
                    }
                }
            }
        }
    
        private void FixupCongeladoParcial(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CongeladoParcial item in e.NewItems)
                {
                    item.NumeroUnico = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CongeladoParcial", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CongeladoParcial item in e.OldItems)
                {
                    if (ReferenceEquals(item.NumeroUnico, this))
                    {
                        item.NumeroUnico = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CongeladoParcial", item);
                    }
                }
            }
        }
    
        private void FixupJuntaCampoArmado(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (JuntaCampoArmado item in e.NewItems)
                {
                    item.NumeroUnico = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("JuntaCampoArmado", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (JuntaCampoArmado item in e.OldItems)
                {
                    if (ReferenceEquals(item.NumeroUnico, this))
                    {
                        item.NumeroUnico = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("JuntaCampoArmado", item);
                    }
                }
            }
        }
    
        private void FixupJuntaCampoArmado1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (JuntaCampoArmado item in e.NewItems)
                {
                    item.NumeroUnico1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("JuntaCampoArmado1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (JuntaCampoArmado item in e.OldItems)
                {
                    if (ReferenceEquals(item.NumeroUnico1, this))
                    {
                        item.NumeroUnico1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("JuntaCampoArmado1", item);
                    }
                }
            }
        }
    
        private void FixupJuntaArmado(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (JuntaArmado item in e.NewItems)
                {
                    item.NumeroUnico = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("JuntaArmado", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (JuntaArmado item in e.OldItems)
                {
                    if (ReferenceEquals(item.NumeroUnico, this))
                    {
                        item.NumeroUnico = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("JuntaArmado", item);
                    }
                }
            }
        }
    
        private void FixupJuntaArmado1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (JuntaArmado item in e.NewItems)
                {
                    item.NumeroUnico1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("JuntaArmado1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (JuntaArmado item in e.OldItems)
                {
                    if (ReferenceEquals(item.NumeroUnico1, this))
                    {
                        item.NumeroUnico1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("JuntaArmado1", item);
                    }
                }
            }
        }
    
        private void FixupJuntaArmado2(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (JuntaArmado item in e.NewItems)
                {
                    item.NumeroUnico2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("JuntaArmado2", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (JuntaArmado item in e.OldItems)
                {
                    if (ReferenceEquals(item.NumeroUnico2, this))
                    {
                        item.NumeroUnico2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("JuntaArmado2", item);
                    }
                }
            }
        }
    
        private void FixupJuntaArmado3(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (JuntaArmado item in e.NewItems)
                {
                    item.NumeroUnico3 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("JuntaArmado3", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (JuntaArmado item in e.OldItems)
                {
                    if (ReferenceEquals(item.NumeroUnico3, this))
                    {
                        item.NumeroUnico3 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("JuntaArmado3", item);
                    }
                }
            }
        }

        #endregion

    }
}
