//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SAM.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(MaterialSpool))]
    [KnownType(typeof(OrdenTrabajoSpool))]
    [KnownType(typeof(CorteDetalle))]
    [KnownType(typeof(Despacho))]
    [KnownType(typeof(NumeroUnico))]
    [Serializable]
    public partial class OrdenTrabajoMaterial: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int OrdenTrabajoMaterialID
        {
            get { return _ordenTrabajoMaterialID; }
            set
            {
                if (_ordenTrabajoMaterialID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'OrdenTrabajoMaterialID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _ordenTrabajoMaterialID = value;
                    OnPropertyChanged("OrdenTrabajoMaterialID");
                }
            }
        }
        private int _ordenTrabajoMaterialID;
    
        [DataMember]
        public int OrdenTrabajoSpoolID
        {
            get { return _ordenTrabajoSpoolID; }
            set
            {
                if (_ordenTrabajoSpoolID != value)
                {
                    ChangeTracker.RecordOriginalValue("OrdenTrabajoSpoolID", _ordenTrabajoSpoolID);
                    if (!IsDeserializing)
                    {
                        if (OrdenTrabajoSpool != null && OrdenTrabajoSpool.OrdenTrabajoSpoolID != value)
                        {
                            OrdenTrabajoSpool = null;
                        }
                    }
                    _ordenTrabajoSpoolID = value;
                    OnPropertyChanged("OrdenTrabajoSpoolID");
                }
            }
        }
        private int _ordenTrabajoSpoolID;
    
        [DataMember]
        public int MaterialSpoolID
        {
            get { return _materialSpoolID; }
            set
            {
                if (_materialSpoolID != value)
                {
                    ChangeTracker.RecordOriginalValue("MaterialSpoolID", _materialSpoolID);
                    if (!IsDeserializing)
                    {
                        if (MaterialSpool != null && MaterialSpool.MaterialSpoolID != value)
                        {
                            MaterialSpool = null;
                        }
                    }
                    _materialSpoolID = value;
                    OnPropertyChanged("MaterialSpoolID");
                }
            }
        }
        private int _materialSpoolID;
    
        [DataMember]
        public bool TieneInventarioCongelado
        {
            get { return _tieneInventarioCongelado; }
            set
            {
                if (_tieneInventarioCongelado != value)
                {
                    _tieneInventarioCongelado = value;
                    OnPropertyChanged("TieneInventarioCongelado");
                }
            }
        }
        private bool _tieneInventarioCongelado;
    
        [DataMember]
        public string SegmentoCongelado
        {
            get { return _segmentoCongelado; }
            set
            {
                if (_segmentoCongelado != value)
                {
                    _segmentoCongelado = value;
                    OnPropertyChanged("SegmentoCongelado");
                }
            }
        }
        private string _segmentoCongelado;
    
        [DataMember]
        public Nullable<int> CantidadCongelada
        {
            get { return _cantidadCongelada; }
            set
            {
                if (_cantidadCongelada != value)
                {
                    _cantidadCongelada = value;
                    OnPropertyChanged("CantidadCongelada");
                }
            }
        }
        private Nullable<int> _cantidadCongelada;
    
        [DataMember]
        public bool CongeladoEsEquivalente
        {
            get { return _congeladoEsEquivalente; }
            set
            {
                if (_congeladoEsEquivalente != value)
                {
                    _congeladoEsEquivalente = value;
                    OnPropertyChanged("CongeladoEsEquivalente");
                }
            }
        }
        private bool _congeladoEsEquivalente;
    
        [DataMember]
        public string SegmentoSugerido
        {
            get { return _segmentoSugerido; }
            set
            {
                if (_segmentoSugerido != value)
                {
                    _segmentoSugerido = value;
                    OnPropertyChanged("SegmentoSugerido");
                }
            }
        }
        private string _segmentoSugerido;
    
        [DataMember]
        public bool SugeridoEsEquivalente
        {
            get { return _sugeridoEsEquivalente; }
            set
            {
                if (_sugeridoEsEquivalente != value)
                {
                    _sugeridoEsEquivalente = value;
                    OnPropertyChanged("SugeridoEsEquivalente");
                }
            }
        }
        private bool _sugeridoEsEquivalente;
    
        [DataMember]
        public bool TieneDespacho
        {
            get { return _tieneDespacho; }
            set
            {
                if (_tieneDespacho != value)
                {
                    _tieneDespacho = value;
                    OnPropertyChanged("TieneDespacho");
                }
            }
        }
        private bool _tieneDespacho;
    
        [DataMember]
        public bool DespachoEsEquivalente
        {
            get { return _despachoEsEquivalente; }
            set
            {
                if (_despachoEsEquivalente != value)
                {
                    _despachoEsEquivalente = value;
                    OnPropertyChanged("DespachoEsEquivalente");
                }
            }
        }
        private bool _despachoEsEquivalente;
    
        [DataMember]
        public string SegmentoDespachado
        {
            get { return _segmentoDespachado; }
            set
            {
                if (_segmentoDespachado != value)
                {
                    _segmentoDespachado = value;
                    OnPropertyChanged("SegmentoDespachado");
                }
            }
        }
        private string _segmentoDespachado;
    
        [DataMember]
        public Nullable<System.Guid> UsuarioModifica
        {
            get { return _usuarioModifica; }
            set
            {
                if (_usuarioModifica != value)
                {
                    _usuarioModifica = value;
                    OnPropertyChanged("UsuarioModifica");
                }
            }
        }
        private Nullable<System.Guid> _usuarioModifica;
    
        [DataMember]
        public Nullable<System.DateTime> FechaModificacion
        {
            get { return _fechaModificacion; }
            set
            {
                if (_fechaModificacion != value)
                {
                    _fechaModificacion = value;
                    OnPropertyChanged("FechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _fechaModificacion;
    
        [DataMember]
        public byte[] VersionRegistro
        {
            get { return _versionRegistro; }
            set
            {
                if (_versionRegistro != value)
                {
                    ChangeTracker.RecordOriginalValue("VersionRegistro", _versionRegistro);
                    _versionRegistro = value;
                    OnPropertyChanged("VersionRegistro");
                }
            }
        }
        private byte[] _versionRegistro;
    
        [DataMember]
        public Nullable<bool> TieneCorte
        {
            get { return _tieneCorte; }
            set
            {
                if (_tieneCorte != value)
                {
                    _tieneCorte = value;
                    OnPropertyChanged("TieneCorte");
                }
            }
        }
        private Nullable<bool> _tieneCorte;
    
        [DataMember]
        public Nullable<int> DespachoID
        {
            get { return _despachoID; }
            set
            {
                if (_despachoID != value)
                {
                    ChangeTracker.RecordOriginalValue("DespachoID", _despachoID);
                    if (!IsDeserializing)
                    {
                        if (Despacho != null && Despacho.DespachoID != value)
                        {
                            Despacho = null;
                        }
                    }
                    _despachoID = value;
                    OnPropertyChanged("DespachoID");
                }
            }
        }
        private Nullable<int> _despachoID;
    
        [DataMember]
        public Nullable<int> CorteDetalleID
        {
            get { return _corteDetalleID; }
            set
            {
                if (_corteDetalleID != value)
                {
                    ChangeTracker.RecordOriginalValue("CorteDetalleID", _corteDetalleID);
                    if (!IsDeserializing)
                    {
                        if (CorteDetalle != null && CorteDetalle.CorteDetalleID != value)
                        {
                            CorteDetalle = null;
                        }
                    }
                    _corteDetalleID = value;
                    OnPropertyChanged("CorteDetalleID");
                }
            }
        }
        private Nullable<int> _corteDetalleID;
    
        [DataMember]
        public Nullable<int> NumeroUnicoCongeladoID
        {
            get { return _numeroUnicoCongeladoID; }
            set
            {
                if (_numeroUnicoCongeladoID != value)
                {
                    ChangeTracker.RecordOriginalValue("NumeroUnicoCongeladoID", _numeroUnicoCongeladoID);
                    if (!IsDeserializing)
                    {
                        if (NumeroUnicoCongelado != null && NumeroUnicoCongelado.NumeroUnicoID != value)
                        {
                            NumeroUnicoCongelado = null;
                        }
                    }
                    _numeroUnicoCongeladoID = value;
                    OnPropertyChanged("NumeroUnicoCongeladoID");
                }
            }
        }
        private Nullable<int> _numeroUnicoCongeladoID;
    
        [DataMember]
        public Nullable<int> NumeroUnicoSugeridoID
        {
            get { return _numeroUnicoSugeridoID; }
            set
            {
                if (_numeroUnicoSugeridoID != value)
                {
                    ChangeTracker.RecordOriginalValue("NumeroUnicoSugeridoID", _numeroUnicoSugeridoID);
                    if (!IsDeserializing)
                    {
                        if (NumeroUnicoSugerido != null && NumeroUnicoSugerido.NumeroUnicoID != value)
                        {
                            NumeroUnicoSugerido = null;
                        }
                    }
                    _numeroUnicoSugeridoID = value;
                    OnPropertyChanged("NumeroUnicoSugeridoID");
                }
            }
        }
        private Nullable<int> _numeroUnicoSugeridoID;
    
        [DataMember]
        public Nullable<int> NumeroUnicoDespachadoID
        {
            get { return _numeroUnicoDespachadoID; }
            set
            {
                if (_numeroUnicoDespachadoID != value)
                {
                    ChangeTracker.RecordOriginalValue("NumeroUnicoDespachadoID", _numeroUnicoDespachadoID);
                    if (!IsDeserializing)
                    {
                        if (NumeroUnicoDespachado != null && NumeroUnicoDespachado.NumeroUnicoID != value)
                        {
                            NumeroUnicoDespachado = null;
                        }
                    }
                    _numeroUnicoDespachadoID = value;
                    OnPropertyChanged("NumeroUnicoDespachadoID");
                }
            }
        }
        private Nullable<int> _numeroUnicoDespachadoID;
    
        [DataMember]
        public Nullable<int> CantidadDespachada
        {
            get { return _cantidadDespachada; }
            set
            {
                if (_cantidadDespachada != value)
                {
                    _cantidadDespachada = value;
                    OnPropertyChanged("CantidadDespachada");
                }
            }
        }
        private Nullable<int> _cantidadDespachada;
    
        [DataMember]
        public bool FueReingenieria
        {
            get { return _fueReingenieria; }
            set
            {
                if (_fueReingenieria != value)
                {
                    _fueReingenieria = value;
                    OnPropertyChanged("FueReingenieria");
                }
            }
        }
        private bool _fueReingenieria;
    
        [DataMember]
        public bool EsAsignado
        {
            get { return _esAsignado; }
            set
            {
                if (_esAsignado != value)
                {
                    _esAsignado = value;
                    OnPropertyChanged("EsAsignado");
                }
            }
        }
        private bool _esAsignado;
    
        [DataMember]
        public Nullable<int> NumeroUnicoAsignadoID
        {
            get { return _numeroUnicoAsignadoID; }
            set
            {
                if (_numeroUnicoAsignadoID != value)
                {
                    ChangeTracker.RecordOriginalValue("NumeroUnicoAsignadoID", _numeroUnicoAsignadoID);
                    if (!IsDeserializing)
                    {
                        if (NumeroUnico != null && NumeroUnico.NumeroUnicoID != value)
                        {
                            NumeroUnico = null;
                        }
                    }
                    _numeroUnicoAsignadoID = value;
                    OnPropertyChanged("NumeroUnicoAsignadoID");
                }
            }
        }
        private Nullable<int> _numeroUnicoAsignadoID;
    
        [DataMember]
        public string SegmentoAsignado
        {
            get { return _segmentoAsignado; }
            set
            {
                if (_segmentoAsignado != value)
                {
                    _segmentoAsignado = value;
                    OnPropertyChanged("SegmentoAsignado");
                }
            }
        }
        private string _segmentoAsignado;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public MaterialSpool MaterialSpool
        {
            get { return _materialSpool; }
            set
            {
                if (!ReferenceEquals(_materialSpool, value))
                {
                    var previousValue = _materialSpool;
                    _materialSpool = value;
                    FixupMaterialSpool(previousValue);
                    OnNavigationPropertyChanged("MaterialSpool");
                }
            }
        }
        private MaterialSpool _materialSpool;
    
        [DataMember]
        public OrdenTrabajoSpool OrdenTrabajoSpool
        {
            get { return _ordenTrabajoSpool; }
            set
            {
                if (!ReferenceEquals(_ordenTrabajoSpool, value))
                {
                    var previousValue = _ordenTrabajoSpool;
                    _ordenTrabajoSpool = value;
                    FixupOrdenTrabajoSpool(previousValue);
                    OnNavigationPropertyChanged("OrdenTrabajoSpool");
                }
            }
        }
        private OrdenTrabajoSpool _ordenTrabajoSpool;
    
        [DataMember]
        public CorteDetalle CorteDetalle
        {
            get { return _corteDetalle; }
            set
            {
                if (!ReferenceEquals(_corteDetalle, value))
                {
                    var previousValue = _corteDetalle;
                    _corteDetalle = value;
                    FixupCorteDetalle(previousValue);
                    OnNavigationPropertyChanged("CorteDetalle");
                }
            }
        }
        private CorteDetalle _corteDetalle;
    
        [DataMember]
        public Despacho Despacho
        {
            get { return _despacho; }
            set
            {
                if (!ReferenceEquals(_despacho, value))
                {
                    var previousValue = _despacho;
                    _despacho = value;
                    FixupDespacho(previousValue);
                    OnNavigationPropertyChanged("Despacho");
                }
            }
        }
        private Despacho _despacho;
    
        [DataMember]
        public NumeroUnico NumeroUnicoCongelado
        {
            get { return _numeroUnicoCongelado; }
            set
            {
                if (!ReferenceEquals(_numeroUnicoCongelado, value))
                {
                    var previousValue = _numeroUnicoCongelado;
                    _numeroUnicoCongelado = value;
                    FixupNumeroUnicoCongelado(previousValue);
                    OnNavigationPropertyChanged("NumeroUnicoCongelado");
                }
            }
        }
        private NumeroUnico _numeroUnicoCongelado;
    
        [DataMember]
        public NumeroUnico NumeroUnicoDespachado
        {
            get { return _numeroUnicoDespachado; }
            set
            {
                if (!ReferenceEquals(_numeroUnicoDespachado, value))
                {
                    var previousValue = _numeroUnicoDespachado;
                    _numeroUnicoDespachado = value;
                    FixupNumeroUnicoDespachado(previousValue);
                    OnNavigationPropertyChanged("NumeroUnicoDespachado");
                }
            }
        }
        private NumeroUnico _numeroUnicoDespachado;
    
        [DataMember]
        public NumeroUnico NumeroUnicoSugerido
        {
            get { return _numeroUnicoSugerido; }
            set
            {
                if (!ReferenceEquals(_numeroUnicoSugerido, value))
                {
                    var previousValue = _numeroUnicoSugerido;
                    _numeroUnicoSugerido = value;
                    FixupNumeroUnicoSugerido(previousValue);
                    OnNavigationPropertyChanged("NumeroUnicoSugerido");
                }
            }
        }
        private NumeroUnico _numeroUnicoSugerido;
    
        [DataMember]
        public NumeroUnico NumeroUnico
        {
            get { return _numeroUnico; }
            set
            {
                if (!ReferenceEquals(_numeroUnico, value))
                {
                    var previousValue = _numeroUnico;
                    _numeroUnico = value;
                    FixupNumeroUnico(previousValue);
                    OnNavigationPropertyChanged("NumeroUnico");
                }
            }
        }
        private NumeroUnico _numeroUnico;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
    	public void OnDeserializedMethod(StreamingContext context)
    	{
    		IsDeserializing = false;
    		ChangeTracker.ChangeTrackingEnabled = true;
    		}
    
    
        protected virtual void ClearNavigationProperties()
        {
            MaterialSpool = null;
            OrdenTrabajoSpool = null;
            CorteDetalle = null;
            Despacho = null;
            NumeroUnicoCongelado = null;
            NumeroUnicoDespachado = null;
            NumeroUnicoSugerido = null;
            NumeroUnico = null;
        }

        #endregion

        #region Association Fixup
    
        private void FixupMaterialSpool(MaterialSpool previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.OrdenTrabajoMaterial.Contains(this))
            {
                previousValue.OrdenTrabajoMaterial.Remove(this);
            }
    
            if (MaterialSpool != null)
            {
                if (!MaterialSpool.OrdenTrabajoMaterial.Contains(this))
                {
                    MaterialSpool.OrdenTrabajoMaterial.Add(this);
                }
    
                MaterialSpoolID = MaterialSpool.MaterialSpoolID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("MaterialSpool")
                    && (ChangeTracker.OriginalValues["MaterialSpool"] == MaterialSpool))
                {
                    ChangeTracker.OriginalValues.Remove("MaterialSpool");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("MaterialSpool", previousValue);
                }
                if (MaterialSpool != null && !MaterialSpool.ChangeTracker.ChangeTrackingEnabled)
                {
                    MaterialSpool.StartTracking();
                }
            }
        }
    
        private void FixupOrdenTrabajoSpool(OrdenTrabajoSpool previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.OrdenTrabajoMaterial.Contains(this))
            {
                previousValue.OrdenTrabajoMaterial.Remove(this);
            }
    
            if (OrdenTrabajoSpool != null)
            {
                if (!OrdenTrabajoSpool.OrdenTrabajoMaterial.Contains(this))
                {
                    OrdenTrabajoSpool.OrdenTrabajoMaterial.Add(this);
                }
    
                OrdenTrabajoSpoolID = OrdenTrabajoSpool.OrdenTrabajoSpoolID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("OrdenTrabajoSpool")
                    && (ChangeTracker.OriginalValues["OrdenTrabajoSpool"] == OrdenTrabajoSpool))
                {
                    ChangeTracker.OriginalValues.Remove("OrdenTrabajoSpool");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("OrdenTrabajoSpool", previousValue);
                }
                if (OrdenTrabajoSpool != null && !OrdenTrabajoSpool.ChangeTracker.ChangeTrackingEnabled)
                {
                    OrdenTrabajoSpool.StartTracking();
                }
            }
        }
    
        private void FixupCorteDetalle(CorteDetalle previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.OrdenTrabajoMaterial.Contains(this))
            {
                previousValue.OrdenTrabajoMaterial.Remove(this);
            }
    
            if (CorteDetalle != null)
            {
                if (!CorteDetalle.OrdenTrabajoMaterial.Contains(this))
                {
                    CorteDetalle.OrdenTrabajoMaterial.Add(this);
                }
    
                CorteDetalleID = CorteDetalle.CorteDetalleID;
            }
            else if (!skipKeys)
            {
                CorteDetalleID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("CorteDetalle")
                    && (ChangeTracker.OriginalValues["CorteDetalle"] == CorteDetalle))
                {
                    ChangeTracker.OriginalValues.Remove("CorteDetalle");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("CorteDetalle", previousValue);
                }
                if (CorteDetalle != null && !CorteDetalle.ChangeTracker.ChangeTrackingEnabled)
                {
                    CorteDetalle.StartTracking();
                }
            }
        }
    
        private void FixupDespacho(Despacho previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.OrdenTrabajoMaterial.Contains(this))
            {
                previousValue.OrdenTrabajoMaterial.Remove(this);
            }
    
            if (Despacho != null)
            {
                if (!Despacho.OrdenTrabajoMaterial.Contains(this))
                {
                    Despacho.OrdenTrabajoMaterial.Add(this);
                }
    
                DespachoID = Despacho.DespachoID;
            }
            else if (!skipKeys)
            {
                DespachoID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Despacho")
                    && (ChangeTracker.OriginalValues["Despacho"] == Despacho))
                {
                    ChangeTracker.OriginalValues.Remove("Despacho");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Despacho", previousValue);
                }
                if (Despacho != null && !Despacho.ChangeTracker.ChangeTrackingEnabled)
                {
                    Despacho.StartTracking();
                }
            }
        }
    
        private void FixupNumeroUnicoCongelado(NumeroUnico previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.MaterialesCongelados.Contains(this))
            {
                previousValue.MaterialesCongelados.Remove(this);
            }
    
            if (NumeroUnicoCongelado != null)
            {
                if (!NumeroUnicoCongelado.MaterialesCongelados.Contains(this))
                {
                    NumeroUnicoCongelado.MaterialesCongelados.Add(this);
                }
    
                NumeroUnicoCongeladoID = NumeroUnicoCongelado.NumeroUnicoID;
            }
            else if (!skipKeys)
            {
                NumeroUnicoCongeladoID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("NumeroUnicoCongelado")
                    && (ChangeTracker.OriginalValues["NumeroUnicoCongelado"] == NumeroUnicoCongelado))
                {
                    ChangeTracker.OriginalValues.Remove("NumeroUnicoCongelado");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("NumeroUnicoCongelado", previousValue);
                }
                if (NumeroUnicoCongelado != null && !NumeroUnicoCongelado.ChangeTracker.ChangeTrackingEnabled)
                {
                    NumeroUnicoCongelado.StartTracking();
                }
            }
        }
    
        private void FixupNumeroUnicoDespachado(NumeroUnico previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.MaterialesDespachados.Contains(this))
            {
                previousValue.MaterialesDespachados.Remove(this);
            }
    
            if (NumeroUnicoDespachado != null)
            {
                if (!NumeroUnicoDespachado.MaterialesDespachados.Contains(this))
                {
                    NumeroUnicoDespachado.MaterialesDespachados.Add(this);
                }
    
                NumeroUnicoDespachadoID = NumeroUnicoDespachado.NumeroUnicoID;
            }
            else if (!skipKeys)
            {
                NumeroUnicoDespachadoID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("NumeroUnicoDespachado")
                    && (ChangeTracker.OriginalValues["NumeroUnicoDespachado"] == NumeroUnicoDespachado))
                {
                    ChangeTracker.OriginalValues.Remove("NumeroUnicoDespachado");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("NumeroUnicoDespachado", previousValue);
                }
                if (NumeroUnicoDespachado != null && !NumeroUnicoDespachado.ChangeTracker.ChangeTrackingEnabled)
                {
                    NumeroUnicoDespachado.StartTracking();
                }
            }
        }
    
        private void FixupNumeroUnicoSugerido(NumeroUnico previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.MaterialesSugeridos.Contains(this))
            {
                previousValue.MaterialesSugeridos.Remove(this);
            }
    
            if (NumeroUnicoSugerido != null)
            {
                if (!NumeroUnicoSugerido.MaterialesSugeridos.Contains(this))
                {
                    NumeroUnicoSugerido.MaterialesSugeridos.Add(this);
                }
    
                NumeroUnicoSugeridoID = NumeroUnicoSugerido.NumeroUnicoID;
            }
            else if (!skipKeys)
            {
                NumeroUnicoSugeridoID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("NumeroUnicoSugerido")
                    && (ChangeTracker.OriginalValues["NumeroUnicoSugerido"] == NumeroUnicoSugerido))
                {
                    ChangeTracker.OriginalValues.Remove("NumeroUnicoSugerido");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("NumeroUnicoSugerido", previousValue);
                }
                if (NumeroUnicoSugerido != null && !NumeroUnicoSugerido.ChangeTracker.ChangeTrackingEnabled)
                {
                    NumeroUnicoSugerido.StartTracking();
                }
            }
        }
    
        private void FixupNumeroUnico(NumeroUnico previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.OrdenTrabajoMaterial.Contains(this))
            {
                previousValue.OrdenTrabajoMaterial.Remove(this);
            }
    
            if (NumeroUnico != null)
            {
                if (!NumeroUnico.OrdenTrabajoMaterial.Contains(this))
                {
                    NumeroUnico.OrdenTrabajoMaterial.Add(this);
                }
    
                NumeroUnicoAsignadoID = NumeroUnico.NumeroUnicoID;
            }
            else if (!skipKeys)
            {
                NumeroUnicoAsignadoID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("NumeroUnico")
                    && (ChangeTracker.OriginalValues["NumeroUnico"] == NumeroUnico))
                {
                    ChangeTracker.OriginalValues.Remove("NumeroUnico");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("NumeroUnico", previousValue);
                }
                if (NumeroUnico != null && !NumeroUnico.ChangeTracker.ChangeTrackingEnabled)
                {
                    NumeroUnico.StartTracking();
                }
            }
        }

        #endregion

    }
}
