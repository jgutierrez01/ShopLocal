//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SAM.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(ConceptoEstimacion))]
    [KnownType(typeof(Estimacion))]
    [KnownType(typeof(JuntaWorkstatus))]
    [Serializable]
    public partial class EstimacionJunta: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int EstimacionJuntaID
        {
            get { return _estimacionJuntaID; }
            set
            {
                if (_estimacionJuntaID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'EstimacionJuntaID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _estimacionJuntaID = value;
                    OnPropertyChanged("EstimacionJuntaID");
                }
            }
        }
        private int _estimacionJuntaID;
    
        [DataMember]
        public int EstimacionID
        {
            get { return _estimacionID; }
            set
            {
                if (_estimacionID != value)
                {
                    ChangeTracker.RecordOriginalValue("EstimacionID", _estimacionID);
                    if (!IsDeserializing)
                    {
                        if (Estimacion != null && Estimacion.EstimacionID != value)
                        {
                            Estimacion = null;
                        }
                    }
                    _estimacionID = value;
                    OnPropertyChanged("EstimacionID");
                }
            }
        }
        private int _estimacionID;
    
        [DataMember]
        public int ConceptoEstimacionID
        {
            get { return _conceptoEstimacionID; }
            set
            {
                if (_conceptoEstimacionID != value)
                {
                    ChangeTracker.RecordOriginalValue("ConceptoEstimacionID", _conceptoEstimacionID);
                    if (!IsDeserializing)
                    {
                        if (ConceptoEstimacion != null && ConceptoEstimacion.ConceptoEstimacionID != value)
                        {
                            ConceptoEstimacion = null;
                        }
                    }
                    _conceptoEstimacionID = value;
                    OnPropertyChanged("ConceptoEstimacionID");
                }
            }
        }
        private int _conceptoEstimacionID;
    
        [DataMember]
        public int JuntaWorkstatusID
        {
            get { return _juntaWorkstatusID; }
            set
            {
                if (_juntaWorkstatusID != value)
                {
                    ChangeTracker.RecordOriginalValue("JuntaWorkstatusID", _juntaWorkstatusID);
                    if (!IsDeserializing)
                    {
                        if (JuntaWorkstatus != null && JuntaWorkstatus.JuntaWorkstatusID != value)
                        {
                            JuntaWorkstatus = null;
                        }
                    }
                    _juntaWorkstatusID = value;
                    OnPropertyChanged("JuntaWorkstatusID");
                }
            }
        }
        private int _juntaWorkstatusID;
    
        [DataMember]
        public Nullable<decimal> Valor
        {
            get { return _valor; }
            set
            {
                if (_valor != value)
                {
                    _valor = value;
                    OnPropertyChanged("Valor");
                }
            }
        }
        private Nullable<decimal> _valor;
    
        [DataMember]
        public Nullable<System.Guid> UsuarioModifica
        {
            get { return _usuarioModifica; }
            set
            {
                if (_usuarioModifica != value)
                {
                    _usuarioModifica = value;
                    OnPropertyChanged("UsuarioModifica");
                }
            }
        }
        private Nullable<System.Guid> _usuarioModifica;
    
        [DataMember]
        public Nullable<System.DateTime> FechaModificacion
        {
            get { return _fechaModificacion; }
            set
            {
                if (_fechaModificacion != value)
                {
                    _fechaModificacion = value;
                    OnPropertyChanged("FechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _fechaModificacion;
    
        [DataMember]
        public byte[] VersionRegistro
        {
            get { return _versionRegistro; }
            set
            {
                if (_versionRegistro != value)
                {
                    ChangeTracker.RecordOriginalValue("VersionRegistro", _versionRegistro);
                    _versionRegistro = value;
                    OnPropertyChanged("VersionRegistro");
                }
            }
        }
        private byte[] _versionRegistro;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public ConceptoEstimacion ConceptoEstimacion
        {
            get { return _conceptoEstimacion; }
            set
            {
                if (!ReferenceEquals(_conceptoEstimacion, value))
                {
                    var previousValue = _conceptoEstimacion;
                    _conceptoEstimacion = value;
                    FixupConceptoEstimacion(previousValue);
                    OnNavigationPropertyChanged("ConceptoEstimacion");
                }
            }
        }
        private ConceptoEstimacion _conceptoEstimacion;
    
        [DataMember]
        public Estimacion Estimacion
        {
            get { return _estimacion; }
            set
            {
                if (!ReferenceEquals(_estimacion, value))
                {
                    var previousValue = _estimacion;
                    _estimacion = value;
                    FixupEstimacion(previousValue);
                    OnNavigationPropertyChanged("Estimacion");
                }
            }
        }
        private Estimacion _estimacion;
    
        [DataMember]
        public JuntaWorkstatus JuntaWorkstatus
        {
            get { return _juntaWorkstatus; }
            set
            {
                if (!ReferenceEquals(_juntaWorkstatus, value))
                {
                    var previousValue = _juntaWorkstatus;
                    _juntaWorkstatus = value;
                    FixupJuntaWorkstatus(previousValue);
                    OnNavigationPropertyChanged("JuntaWorkstatus");
                }
            }
        }
        private JuntaWorkstatus _juntaWorkstatus;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
    	public void OnDeserializedMethod(StreamingContext context)
    	{
    		IsDeserializing = false;
    		ChangeTracker.ChangeTrackingEnabled = true;
    		}
    
    
        protected virtual void ClearNavigationProperties()
        {
            ConceptoEstimacion = null;
            Estimacion = null;
            JuntaWorkstatus = null;
        }

        #endregion

        #region Association Fixup
    
        private void FixupConceptoEstimacion(ConceptoEstimacion previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.EstimacionJunta.Contains(this))
            {
                previousValue.EstimacionJunta.Remove(this);
            }
    
            if (ConceptoEstimacion != null)
            {
                if (!ConceptoEstimacion.EstimacionJunta.Contains(this))
                {
                    ConceptoEstimacion.EstimacionJunta.Add(this);
                }
    
                ConceptoEstimacionID = ConceptoEstimacion.ConceptoEstimacionID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ConceptoEstimacion")
                    && (ChangeTracker.OriginalValues["ConceptoEstimacion"] == ConceptoEstimacion))
                {
                    ChangeTracker.OriginalValues.Remove("ConceptoEstimacion");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ConceptoEstimacion", previousValue);
                }
                if (ConceptoEstimacion != null && !ConceptoEstimacion.ChangeTracker.ChangeTrackingEnabled)
                {
                    ConceptoEstimacion.StartTracking();
                }
            }
        }
    
        private void FixupEstimacion(Estimacion previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.EstimacionJunta.Contains(this))
            {
                previousValue.EstimacionJunta.Remove(this);
            }
    
            if (Estimacion != null)
            {
                if (!Estimacion.EstimacionJunta.Contains(this))
                {
                    Estimacion.EstimacionJunta.Add(this);
                }
    
                EstimacionID = Estimacion.EstimacionID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Estimacion")
                    && (ChangeTracker.OriginalValues["Estimacion"] == Estimacion))
                {
                    ChangeTracker.OriginalValues.Remove("Estimacion");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Estimacion", previousValue);
                }
                if (Estimacion != null && !Estimacion.ChangeTracker.ChangeTrackingEnabled)
                {
                    Estimacion.StartTracking();
                }
            }
        }
    
        private void FixupJuntaWorkstatus(JuntaWorkstatus previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.EstimacionJunta.Contains(this))
            {
                previousValue.EstimacionJunta.Remove(this);
            }
    
            if (JuntaWorkstatus != null)
            {
                if (!JuntaWorkstatus.EstimacionJunta.Contains(this))
                {
                    JuntaWorkstatus.EstimacionJunta.Add(this);
                }
    
                JuntaWorkstatusID = JuntaWorkstatus.JuntaWorkstatusID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("JuntaWorkstatus")
                    && (ChangeTracker.OriginalValues["JuntaWorkstatus"] == JuntaWorkstatus))
                {
                    ChangeTracker.OriginalValues.Remove("JuntaWorkstatus");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("JuntaWorkstatus", previousValue);
                }
                if (JuntaWorkstatus != null && !JuntaWorkstatus.ChangeTracker.ChangeTrackingEnabled)
                {
                    JuntaWorkstatus.StartTracking();
                }
            }
        }

        #endregion

    }
}
