//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SAM.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Acero))]
    [KnownType(typeof(Fabricante))]
    [KnownType(typeof(Proyecto))]
    [KnownType(typeof(NumeroUnico))]
    [Serializable]
    public partial class Colada: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int ColadaID
        {
            get { return _coladaID; }
            set
            {
                if (_coladaID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ColadaID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _coladaID = value;
                    OnPropertyChanged("ColadaID");
                }
            }
        }
        private int _coladaID;
    
        [DataMember]
        public Nullable<int> FabricanteID
        {
            get { return _fabricanteID; }
            set
            {
                if (_fabricanteID != value)
                {
                    ChangeTracker.RecordOriginalValue("FabricanteID", _fabricanteID);
                    if (!IsDeserializing)
                    {
                        if (Fabricante != null && Fabricante.FabricanteID != value)
                        {
                            Fabricante = null;
                        }
                    }
                    _fabricanteID = value;
                    OnPropertyChanged("FabricanteID");
                }
            }
        }
        private Nullable<int> _fabricanteID;
    
        [DataMember]
        public int AceroID
        {
            get { return _aceroID; }
            set
            {
                if (_aceroID != value)
                {
                    ChangeTracker.RecordOriginalValue("AceroID", _aceroID);
                    if (!IsDeserializing)
                    {
                        if (Acero != null && Acero.AceroID != value)
                        {
                            Acero = null;
                        }
                    }
                    _aceroID = value;
                    OnPropertyChanged("AceroID");
                }
            }
        }
        private int _aceroID;
    
        [DataMember]
        public int ProyectoID
        {
            get { return _proyectoID; }
            set
            {
                if (_proyectoID != value)
                {
                    ChangeTracker.RecordOriginalValue("ProyectoID", _proyectoID);
                    if (!IsDeserializing)
                    {
                        if (Proyecto != null && Proyecto.ProyectoID != value)
                        {
                            Proyecto = null;
                        }
                    }
                    _proyectoID = value;
                    OnPropertyChanged("ProyectoID");
                }
            }
        }
        private int _proyectoID;
    
        [DataMember]
        public string NumeroColada
        {
            get { return _numeroColada; }
            set
            {
                if (_numeroColada != value)
                {
                    _numeroColada = value;
                    OnPropertyChanged("NumeroColada");
                }
            }
        }
        private string _numeroColada;
    
        [DataMember]
        public string NumeroCertificado
        {
            get { return _numeroCertificado; }
            set
            {
                if (_numeroCertificado != value)
                {
                    _numeroCertificado = value;
                    OnPropertyChanged("NumeroCertificado");
                }
            }
        }
        private string _numeroCertificado;
    
        [DataMember]
        public bool HoldCalidad
        {
            get { return _holdCalidad; }
            set
            {
                if (_holdCalidad != value)
                {
                    _holdCalidad = value;
                    OnPropertyChanged("HoldCalidad");
                }
            }
        }
        private bool _holdCalidad;
    
        [DataMember]
        public Nullable<System.Guid> UsuarioModifica
        {
            get { return _usuarioModifica; }
            set
            {
                if (_usuarioModifica != value)
                {
                    _usuarioModifica = value;
                    OnPropertyChanged("UsuarioModifica");
                }
            }
        }
        private Nullable<System.Guid> _usuarioModifica;
    
        [DataMember]
        public Nullable<System.DateTime> FechaModificacion
        {
            get { return _fechaModificacion; }
            set
            {
                if (_fechaModificacion != value)
                {
                    _fechaModificacion = value;
                    OnPropertyChanged("FechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _fechaModificacion;
    
        [DataMember]
        public byte[] VersionRegistro
        {
            get { return _versionRegistro; }
            set
            {
                if (_versionRegistro != value)
                {
                    ChangeTracker.RecordOriginalValue("VersionRegistro", _versionRegistro);
                    _versionRegistro = value;
                    OnPropertyChanged("VersionRegistro");
                }
            }
        }
        private byte[] _versionRegistro;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public Acero Acero
        {
            get { return _acero; }
            set
            {
                if (!ReferenceEquals(_acero, value))
                {
                    var previousValue = _acero;
                    _acero = value;
                    FixupAcero(previousValue);
                    OnNavigationPropertyChanged("Acero");
                }
            }
        }
        private Acero _acero;
    
        [DataMember]
        public Fabricante Fabricante
        {
            get { return _fabricante; }
            set
            {
                if (!ReferenceEquals(_fabricante, value))
                {
                    var previousValue = _fabricante;
                    _fabricante = value;
                    FixupFabricante(previousValue);
                    OnNavigationPropertyChanged("Fabricante");
                }
            }
        }
        private Fabricante _fabricante;
    
        [DataMember]
        public Proyecto Proyecto
        {
            get { return _proyecto; }
            set
            {
                if (!ReferenceEquals(_proyecto, value))
                {
                    var previousValue = _proyecto;
                    _proyecto = value;
                    FixupProyecto(previousValue);
                    OnNavigationPropertyChanged("Proyecto");
                }
            }
        }
        private Proyecto _proyecto;
    
        [DataMember]
        public TrackableCollection<NumeroUnico> NumeroUnico
        {
            get
            {
                if (_numeroUnico == null)
                {
                    _numeroUnico = new TrackableCollection<NumeroUnico>();
                    _numeroUnico.CollectionChanged += FixupNumeroUnico;
                }
                return _numeroUnico;
            }
            set
            {
                if (!ReferenceEquals(_numeroUnico, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_numeroUnico != null)
                    {
                        _numeroUnico.CollectionChanged -= FixupNumeroUnico;
                    }
                    _numeroUnico = value;
                    if (_numeroUnico != null)
                    {
                        _numeroUnico.CollectionChanged += FixupNumeroUnico;
                    }
                    OnNavigationPropertyChanged("NumeroUnico");
                }
            }
        }
        private TrackableCollection<NumeroUnico> _numeroUnico;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
    	public void OnDeserializedMethod(StreamingContext context)
    	{
    		IsDeserializing = false;
    		ChangeTracker.ChangeTrackingEnabled = true;
    			if (_numeroUnico != null)
    		{
    			_numeroUnico.CollectionChanged -= FixupNumeroUnico;
    			_numeroUnico.CollectionChanged += FixupNumeroUnico;
    			}
    		}
    
    
        protected virtual void ClearNavigationProperties()
        {
            Acero = null;
            Fabricante = null;
            Proyecto = null;
            NumeroUnico.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupAcero(Acero previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Colada.Contains(this))
            {
                previousValue.Colada.Remove(this);
            }
    
            if (Acero != null)
            {
                if (!Acero.Colada.Contains(this))
                {
                    Acero.Colada.Add(this);
                }
    
                AceroID = Acero.AceroID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Acero")
                    && (ChangeTracker.OriginalValues["Acero"] == Acero))
                {
                    ChangeTracker.OriginalValues.Remove("Acero");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Acero", previousValue);
                }
                if (Acero != null && !Acero.ChangeTracker.ChangeTrackingEnabled)
                {
                    Acero.StartTracking();
                }
            }
        }
    
        private void FixupFabricante(Fabricante previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Colada.Contains(this))
            {
                previousValue.Colada.Remove(this);
            }
    
            if (Fabricante != null)
            {
                if (!Fabricante.Colada.Contains(this))
                {
                    Fabricante.Colada.Add(this);
                }
    
                FabricanteID = Fabricante.FabricanteID;
            }
            else if (!skipKeys)
            {
                FabricanteID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Fabricante")
                    && (ChangeTracker.OriginalValues["Fabricante"] == Fabricante))
                {
                    ChangeTracker.OriginalValues.Remove("Fabricante");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Fabricante", previousValue);
                }
                if (Fabricante != null && !Fabricante.ChangeTracker.ChangeTrackingEnabled)
                {
                    Fabricante.StartTracking();
                }
            }
        }
    
        private void FixupProyecto(Proyecto previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Colada.Contains(this))
            {
                previousValue.Colada.Remove(this);
            }
    
            if (Proyecto != null)
            {
                if (!Proyecto.Colada.Contains(this))
                {
                    Proyecto.Colada.Add(this);
                }
    
                ProyectoID = Proyecto.ProyectoID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Proyecto")
                    && (ChangeTracker.OriginalValues["Proyecto"] == Proyecto))
                {
                    ChangeTracker.OriginalValues.Remove("Proyecto");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Proyecto", previousValue);
                }
                if (Proyecto != null && !Proyecto.ChangeTracker.ChangeTrackingEnabled)
                {
                    Proyecto.StartTracking();
                }
            }
        }
    
        private void FixupNumeroUnico(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (NumeroUnico item in e.NewItems)
                {
                    item.Colada = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("NumeroUnico", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (NumeroUnico item in e.OldItems)
                {
                    if (ReferenceEquals(item.Colada, this))
                    {
                        item.Colada = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("NumeroUnico", item);
                    }
                }
            }
        }

        #endregion

    }
}
