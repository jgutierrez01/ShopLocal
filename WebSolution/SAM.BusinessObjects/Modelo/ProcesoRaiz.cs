//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SAM.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Wps))]
    [KnownType(typeof(JuntaSoldadura))]
    [KnownType(typeof(CostoProcesoRaiz))]
    [KnownType(typeof(JuntaCampoSoldadura))]
    [Serializable]
    public partial class ProcesoRaiz: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int ProcesoRaizID
        {
            get { return _procesoRaizID; }
            set
            {
                if (_procesoRaizID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ProcesoRaizID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _procesoRaizID = value;
                    OnPropertyChanged("ProcesoRaizID");
                }
            }
        }
        private int _procesoRaizID;
    
        [DataMember]
        public string Codigo
        {
            get { return _codigo; }
            set
            {
                if (_codigo != value)
                {
                    _codigo = value;
                    OnPropertyChanged("Codigo");
                }
            }
        }
        private string _codigo;
    
        [DataMember]
        public string Nombre
        {
            get { return _nombre; }
            set
            {
                if (_nombre != value)
                {
                    _nombre = value;
                    OnPropertyChanged("Nombre");
                }
            }
        }
        private string _nombre;
    
        [DataMember]
        public string Descripcion
        {
            get { return _descripcion; }
            set
            {
                if (_descripcion != value)
                {
                    _descripcion = value;
                    OnPropertyChanged("Descripcion");
                }
            }
        }
        private string _descripcion;
    
        [DataMember]
        public Nullable<System.Guid> UsuarioModifica
        {
            get { return _usuarioModifica; }
            set
            {
                if (_usuarioModifica != value)
                {
                    _usuarioModifica = value;
                    OnPropertyChanged("UsuarioModifica");
                }
            }
        }
        private Nullable<System.Guid> _usuarioModifica;
    
        [DataMember]
        public Nullable<System.DateTime> FechaModificacion
        {
            get { return _fechaModificacion; }
            set
            {
                if (_fechaModificacion != value)
                {
                    _fechaModificacion = value;
                    OnPropertyChanged("FechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _fechaModificacion;
    
        [DataMember]
        public byte[] VersionRegistro
        {
            get { return _versionRegistro; }
            set
            {
                if (_versionRegistro != value)
                {
                    ChangeTracker.RecordOriginalValue("VersionRegistro", _versionRegistro);
                    _versionRegistro = value;
                    OnPropertyChanged("VersionRegistro");
                }
            }
        }
        private byte[] _versionRegistro;
    
        [DataMember]
        public string NombreIngles
        {
            get { return _nombreIngles; }
            set
            {
                if (_nombreIngles != value)
                {
                    _nombreIngles = value;
                    OnPropertyChanged("NombreIngles");
                }
            }
        }
        private string _nombreIngles;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<Wps> Wps
        {
            get
            {
                if (_wps == null)
                {
                    _wps = new TrackableCollection<Wps>();
                    _wps.CollectionChanged += FixupWps;
                }
                return _wps;
            }
            set
            {
                if (!ReferenceEquals(_wps, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_wps != null)
                    {
                        _wps.CollectionChanged -= FixupWps;
                    }
                    _wps = value;
                    if (_wps != null)
                    {
                        _wps.CollectionChanged += FixupWps;
                    }
                    OnNavigationPropertyChanged("Wps");
                }
            }
        }
        private TrackableCollection<Wps> _wps;
    
        [DataMember]
        public TrackableCollection<JuntaSoldadura> JuntaSoldadura
        {
            get
            {
                if (_juntaSoldadura == null)
                {
                    _juntaSoldadura = new TrackableCollection<JuntaSoldadura>();
                    _juntaSoldadura.CollectionChanged += FixupJuntaSoldadura;
                }
                return _juntaSoldadura;
            }
            set
            {
                if (!ReferenceEquals(_juntaSoldadura, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_juntaSoldadura != null)
                    {
                        _juntaSoldadura.CollectionChanged -= FixupJuntaSoldadura;
                    }
                    _juntaSoldadura = value;
                    if (_juntaSoldadura != null)
                    {
                        _juntaSoldadura.CollectionChanged += FixupJuntaSoldadura;
                    }
                    OnNavigationPropertyChanged("JuntaSoldadura");
                }
            }
        }
        private TrackableCollection<JuntaSoldadura> _juntaSoldadura;
    
        [DataMember]
        public TrackableCollection<CostoProcesoRaiz> CostoProcesoRaiz
        {
            get
            {
                if (_costoProcesoRaiz == null)
                {
                    _costoProcesoRaiz = new TrackableCollection<CostoProcesoRaiz>();
                    _costoProcesoRaiz.CollectionChanged += FixupCostoProcesoRaiz;
                }
                return _costoProcesoRaiz;
            }
            set
            {
                if (!ReferenceEquals(_costoProcesoRaiz, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_costoProcesoRaiz != null)
                    {
                        _costoProcesoRaiz.CollectionChanged -= FixupCostoProcesoRaiz;
                    }
                    _costoProcesoRaiz = value;
                    if (_costoProcesoRaiz != null)
                    {
                        _costoProcesoRaiz.CollectionChanged += FixupCostoProcesoRaiz;
                    }
                    OnNavigationPropertyChanged("CostoProcesoRaiz");
                }
            }
        }
        private TrackableCollection<CostoProcesoRaiz> _costoProcesoRaiz;
    
        [DataMember]
        public TrackableCollection<JuntaCampoSoldadura> JuntaCampoSoldadura
        {
            get
            {
                if (_juntaCampoSoldadura == null)
                {
                    _juntaCampoSoldadura = new TrackableCollection<JuntaCampoSoldadura>();
                    _juntaCampoSoldadura.CollectionChanged += FixupJuntaCampoSoldadura;
                }
                return _juntaCampoSoldadura;
            }
            set
            {
                if (!ReferenceEquals(_juntaCampoSoldadura, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_juntaCampoSoldadura != null)
                    {
                        _juntaCampoSoldadura.CollectionChanged -= FixupJuntaCampoSoldadura;
                    }
                    _juntaCampoSoldadura = value;
                    if (_juntaCampoSoldadura != null)
                    {
                        _juntaCampoSoldadura.CollectionChanged += FixupJuntaCampoSoldadura;
                    }
                    OnNavigationPropertyChanged("JuntaCampoSoldadura");
                }
            }
        }
        private TrackableCollection<JuntaCampoSoldadura> _juntaCampoSoldadura;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
    	public void OnDeserializedMethod(StreamingContext context)
    	{
    		IsDeserializing = false;
    		ChangeTracker.ChangeTrackingEnabled = true;
    			if (_wps != null)
    		{
    			_wps.CollectionChanged -= FixupWps;
    			_wps.CollectionChanged += FixupWps;
    			}
    			if (_juntaSoldadura != null)
    		{
    			_juntaSoldadura.CollectionChanged -= FixupJuntaSoldadura;
    			_juntaSoldadura.CollectionChanged += FixupJuntaSoldadura;
    			}
    			if (_costoProcesoRaiz != null)
    		{
    			_costoProcesoRaiz.CollectionChanged -= FixupCostoProcesoRaiz;
    			_costoProcesoRaiz.CollectionChanged += FixupCostoProcesoRaiz;
    			}
    			if (_juntaCampoSoldadura != null)
    		{
    			_juntaCampoSoldadura.CollectionChanged -= FixupJuntaCampoSoldadura;
    			_juntaCampoSoldadura.CollectionChanged += FixupJuntaCampoSoldadura;
    			}
    		}
    
    
        protected virtual void ClearNavigationProperties()
        {
            Wps.Clear();
            JuntaSoldadura.Clear();
            CostoProcesoRaiz.Clear();
            JuntaCampoSoldadura.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupWps(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Wps item in e.NewItems)
                {
                    item.ProcesoRaiz = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Wps", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Wps item in e.OldItems)
                {
                    if (ReferenceEquals(item.ProcesoRaiz, this))
                    {
                        item.ProcesoRaiz = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Wps", item);
                    }
                }
            }
        }
    
        private void FixupJuntaSoldadura(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (JuntaSoldadura item in e.NewItems)
                {
                    item.ProcesoRaiz = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("JuntaSoldadura", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (JuntaSoldadura item in e.OldItems)
                {
                    if (ReferenceEquals(item.ProcesoRaiz, this))
                    {
                        item.ProcesoRaiz = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("JuntaSoldadura", item);
                    }
                }
            }
        }
    
        private void FixupCostoProcesoRaiz(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CostoProcesoRaiz item in e.NewItems)
                {
                    item.ProcesoRaiz = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CostoProcesoRaiz", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CostoProcesoRaiz item in e.OldItems)
                {
                    if (ReferenceEquals(item.ProcesoRaiz, this))
                    {
                        item.ProcesoRaiz = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CostoProcesoRaiz", item);
                    }
                }
            }
        }
    
        private void FixupJuntaCampoSoldadura(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (JuntaCampoSoldadura item in e.NewItems)
                {
                    item.ProcesoRaiz = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("JuntaCampoSoldadura", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (JuntaCampoSoldadura item in e.OldItems)
                {
                    if (ReferenceEquals(item.ProcesoRaiz, this))
                    {
                        item.ProcesoRaiz = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("JuntaCampoSoldadura", item);
                    }
                }
            }
        }

        #endregion

    }
}
