//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SAM.Entities
{
    
    [Serializable]
    public partial class EstimacionJuntaCompuesto : INotifyComplexPropertyChanging, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int JuntaWorkstatusID
        {
            get { return _juntaWorkstatusID; }
            set
            {
                if (_juntaWorkstatusID != value)
                {
                    OnComplexPropertyChanging();
                    _juntaWorkstatusID = value;
                    OnPropertyChanged("JuntaWorkstatusID");
                }
            }
        }
        private int _juntaWorkstatusID;
    
        [DataMember]
        public int OrdenTrabajoSpoolID
        {
            get { return _ordenTrabajoSpoolID; }
            set
            {
                if (_ordenTrabajoSpoolID != value)
                {
                    OnComplexPropertyChanging();
                    _ordenTrabajoSpoolID = value;
                    OnPropertyChanged("OrdenTrabajoSpoolID");
                }
            }
        }
        private int _ordenTrabajoSpoolID;
    
        [DataMember]
        public int JuntaSpoolID
        {
            get { return _juntaSpoolID; }
            set
            {
                if (_juntaSpoolID != value)
                {
                    OnComplexPropertyChanging();
                    _juntaSpoolID = value;
                    OnPropertyChanged("JuntaSpoolID");
                }
            }
        }
        private int _juntaSpoolID;
    
        [DataMember]
        public string EtiquetaJunta
        {
            get { return _etiquetaJunta; }
            set
            {
                if (_etiquetaJunta != value)
                {
                    OnComplexPropertyChanging();
                    _etiquetaJunta = value;
                    OnPropertyChanged("EtiquetaJunta");
                }
            }
        }
        private string _etiquetaJunta;
    
        [DataMember]
        public bool ArmadoAprobado
        {
            get { return _armadoAprobado; }
            set
            {
                if (_armadoAprobado != value)
                {
                    OnComplexPropertyChanging();
                    _armadoAprobado = value;
                    OnPropertyChanged("ArmadoAprobado");
                }
            }
        }
        private bool _armadoAprobado;
    
        [DataMember]
        public bool SoldaduraAprobada
        {
            get { return _soldaduraAprobada; }
            set
            {
                if (_soldaduraAprobada != value)
                {
                    OnComplexPropertyChanging();
                    _soldaduraAprobada = value;
                    OnPropertyChanged("SoldaduraAprobada");
                }
            }
        }
        private bool _soldaduraAprobada;
    
        [DataMember]
        public bool InspeccionVisualAprobada
        {
            get { return _inspeccionVisualAprobada; }
            set
            {
                if (_inspeccionVisualAprobada != value)
                {
                    OnComplexPropertyChanging();
                    _inspeccionVisualAprobada = value;
                    OnPropertyChanged("InspeccionVisualAprobada");
                }
            }
        }
        private bool _inspeccionVisualAprobada;
    
        [DataMember]
        public decimal Diametro
        {
            get { return _diametro; }
            set
            {
                if (_diametro != value)
                {
                    OnComplexPropertyChanging();
                    _diametro = value;
                    OnPropertyChanged("Diametro");
                }
            }
        }
        private decimal _diametro;
    
        [DataMember]
        public int FamiliaAceroMaterial1ID
        {
            get { return _familiaAceroMaterial1ID; }
            set
            {
                if (_familiaAceroMaterial1ID != value)
                {
                    OnComplexPropertyChanging();
                    _familiaAceroMaterial1ID = value;
                    OnPropertyChanged("FamiliaAceroMaterial1ID");
                }
            }
        }
        private int _familiaAceroMaterial1ID;
    
        [DataMember]
        public Nullable<int> FamiliaAceroMaterial2ID
        {
            get { return _familiaAceroMaterial2ID; }
            set
            {
                if (_familiaAceroMaterial2ID != value)
                {
                    OnComplexPropertyChanging();
                    _familiaAceroMaterial2ID = value;
                    OnPropertyChanged("FamiliaAceroMaterial2ID");
                }
            }
        }
        private Nullable<int> _familiaAceroMaterial2ID;
    
        [DataMember]
        public int TipoJuntaID
        {
            get { return _tipoJuntaID; }
            set
            {
                if (_tipoJuntaID != value)
                {
                    OnComplexPropertyChanging();
                    _tipoJuntaID = value;
                    OnPropertyChanged("TipoJuntaID");
                }
            }
        }
        private int _tipoJuntaID;
    
        [DataMember]
        public string NumeroControl
        {
            get { return _numeroControl; }
            set
            {
                if (_numeroControl != value)
                {
                    OnComplexPropertyChanging();
                    _numeroControl = value;
                    OnPropertyChanged("NumeroControl");
                }
            }
        }
        private string _numeroControl;
    
        [DataMember]
        public Nullable<int> EstimacionJuntaID
        {
            get { return _estimacionJuntaID; }
            set
            {
                if (_estimacionJuntaID != value)
                {
                    OnComplexPropertyChanging();
                    _estimacionJuntaID = value;
                    OnPropertyChanged("EstimacionJuntaID");
                }
            }
        }
        private Nullable<int> _estimacionJuntaID;
    
        [DataMember]
        public Nullable<int> ConceptoEstimacionID
        {
            get { return _conceptoEstimacionID; }
            set
            {
                if (_conceptoEstimacionID != value)
                {
                    OnComplexPropertyChanging();
                    _conceptoEstimacionID = value;
                    OnPropertyChanged("ConceptoEstimacionID");
                }
            }
        }
        private Nullable<int> _conceptoEstimacionID;
    
        [DataMember]
        public string NumeroEstimacion
        {
            get { return _numeroEstimacion; }
            set
            {
                if (_numeroEstimacion != value)
                {
                    OnComplexPropertyChanging();
                    _numeroEstimacion = value;
                    OnPropertyChanged("NumeroEstimacion");
                }
            }
        }
        private string _numeroEstimacion;
    
        [DataMember]
        public Nullable<int> JuntaReportePndID
        {
            get { return _juntaReportePndID; }
            set
            {
                if (_juntaReportePndID != value)
                {
                    OnComplexPropertyChanging();
                    _juntaReportePndID = value;
                    OnPropertyChanged("JuntaReportePndID");
                }
            }
        }
        private Nullable<int> _juntaReportePndID;
    
        [DataMember]
        public Nullable<int> TipoPruebaPndID
        {
            get { return _tipoPruebaPndID; }
            set
            {
                if (_tipoPruebaPndID != value)
                {
                    OnComplexPropertyChanging();
                    _tipoPruebaPndID = value;
                    OnPropertyChanged("TipoPruebaPndID");
                }
            }
        }
        private Nullable<int> _tipoPruebaPndID;
    
        [DataMember]
        public Nullable<bool> AprobadoPnd
        {
            get { return _aprobadoPnd; }
            set
            {
                if (_aprobadoPnd != value)
                {
                    OnComplexPropertyChanging();
                    _aprobadoPnd = value;
                    OnPropertyChanged("AprobadoPnd");
                }
            }
        }
        private Nullable<bool> _aprobadoPnd;
    
        [DataMember]
        public Nullable<int> JuntaReporteTtID
        {
            get { return _juntaReporteTtID; }
            set
            {
                if (_juntaReporteTtID != value)
                {
                    OnComplexPropertyChanging();
                    _juntaReporteTtID = value;
                    OnPropertyChanged("JuntaReporteTtID");
                }
            }
        }
        private Nullable<int> _juntaReporteTtID;
    
        [DataMember]
        public Nullable<int> TipoPruebaTtID
        {
            get { return _tipoPruebaTtID; }
            set
            {
                if (_tipoPruebaTtID != value)
                {
                    OnComplexPropertyChanging();
                    _tipoPruebaTtID = value;
                    OnPropertyChanged("TipoPruebaTtID");
                }
            }
        }
        private Nullable<int> _tipoPruebaTtID;
    
        [DataMember]
        public Nullable<bool> AprobadoTt
        {
            get { return _aprobadoTt; }
            set
            {
                if (_aprobadoTt != value)
                {
                    OnComplexPropertyChanging();
                    _aprobadoTt = value;
                    OnPropertyChanged("AprobadoTt");
                }
            }
        }
        private Nullable<bool> _aprobadoTt;
    
        [DataMember]
        public Nullable<int> EstimacionID
        {
            get { return _estimacionID; }
            set
            {
                if (_estimacionID != value)
                {
                    OnComplexPropertyChanging();
                    _estimacionID = value;
                    OnPropertyChanged("EstimacionID");
                }
            }
        }
        private Nullable<int> _estimacionID;
    
        [DataMember]
        public Nullable<int> ReporteDimensionalDetalleID
        {
            get { return _reporteDimensionalDetalleID; }
            set
            {
                if (_reporteDimensionalDetalleID != value)
                {
                    OnComplexPropertyChanging();
                    _reporteDimensionalDetalleID = value;
                    OnPropertyChanged("ReporteDimensionalDetalleID");
                }
            }
        }
        private Nullable<int> _reporteDimensionalDetalleID;
    
        [DataMember]
        public Nullable<int> ReporteDimensionalID
        {
            get { return _reporteDimensionalID; }
            set
            {
                if (_reporteDimensionalID != value)
                {
                    OnComplexPropertyChanging();
                    _reporteDimensionalID = value;
                    OnPropertyChanged("ReporteDimensionalID");
                }
            }
        }
        private Nullable<int> _reporteDimensionalID;
    
        [DataMember]
        public Nullable<bool> AprobadoReporteDimensional
        {
            get { return _aprobadoReporteDimensional; }
            set
            {
                if (_aprobadoReporteDimensional != value)
                {
                    OnComplexPropertyChanging();
                    _aprobadoReporteDimensional = value;
                    OnPropertyChanged("AprobadoReporteDimensional");
                }
            }
        }
        private Nullable<bool> _aprobadoReporteDimensional;
    
        [DataMember]
        public string NombreSpool
        {
            get { return _nombreSpool; }
            set
            {
                if (_nombreSpool != value)
                {
                    OnComplexPropertyChanging();
                    _nombreSpool = value;
                    OnPropertyChanged("NombreSpool");
                }
            }
        }
        private string _nombreSpool;

        #endregion

        #region ChangeTracking
    
        private void OnComplexPropertyChanging()
        {
            if (_complexPropertyChanging != null)
            {
                _complexPropertyChanging(this, new EventArgs());
            }
        }
    
        event EventHandler INotifyComplexPropertyChanging.ComplexPropertyChanging { add { _complexPropertyChanging += value; } remove { _complexPropertyChanging -= value; } }
        private event EventHandler _complexPropertyChanging;
    
        private void OnPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged { add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
        public static void RecordComplexOriginalValues(String parentPropertyName, EstimacionJuntaCompuesto complexObject, ObjectChangeTracker changeTracker)
        {
            if (String.IsNullOrEmpty(parentPropertyName))
            {
                throw new ArgumentException("String parameter cannot be null or empty.", "parentPropertyName");
            }
    
            if (changeTracker == null)
            {
                throw new ArgumentNullException("changeTracker");
            }
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.JuntaWorkstatusID", parentPropertyName), complexObject == null ? null : (object)complexObject.JuntaWorkstatusID);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.OrdenTrabajoSpoolID", parentPropertyName), complexObject == null ? null : (object)complexObject.OrdenTrabajoSpoolID);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.JuntaSpoolID", parentPropertyName), complexObject == null ? null : (object)complexObject.JuntaSpoolID);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.EtiquetaJunta", parentPropertyName), complexObject == null ? null : (object)complexObject.EtiquetaJunta);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.ArmadoAprobado", parentPropertyName), complexObject == null ? null : (object)complexObject.ArmadoAprobado);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.SoldaduraAprobada", parentPropertyName), complexObject == null ? null : (object)complexObject.SoldaduraAprobada);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.InspeccionVisualAprobada", parentPropertyName), complexObject == null ? null : (object)complexObject.InspeccionVisualAprobada);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.Diametro", parentPropertyName), complexObject == null ? null : (object)complexObject.Diametro);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.FamiliaAceroMaterial1ID", parentPropertyName), complexObject == null ? null : (object)complexObject.FamiliaAceroMaterial1ID);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.FamiliaAceroMaterial2ID", parentPropertyName), complexObject == null ? null : (object)complexObject.FamiliaAceroMaterial2ID);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.TipoJuntaID", parentPropertyName), complexObject == null ? null : (object)complexObject.TipoJuntaID);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.NumeroControl", parentPropertyName), complexObject == null ? null : (object)complexObject.NumeroControl);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.EstimacionJuntaID", parentPropertyName), complexObject == null ? null : (object)complexObject.EstimacionJuntaID);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.ConceptoEstimacionID", parentPropertyName), complexObject == null ? null : (object)complexObject.ConceptoEstimacionID);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.NumeroEstimacion", parentPropertyName), complexObject == null ? null : (object)complexObject.NumeroEstimacion);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.JuntaReportePndID", parentPropertyName), complexObject == null ? null : (object)complexObject.JuntaReportePndID);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.TipoPruebaPndID", parentPropertyName), complexObject == null ? null : (object)complexObject.TipoPruebaPndID);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.AprobadoPnd", parentPropertyName), complexObject == null ? null : (object)complexObject.AprobadoPnd);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.JuntaReporteTtID", parentPropertyName), complexObject == null ? null : (object)complexObject.JuntaReporteTtID);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.TipoPruebaTtID", parentPropertyName), complexObject == null ? null : (object)complexObject.TipoPruebaTtID);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.AprobadoTt", parentPropertyName), complexObject == null ? null : (object)complexObject.AprobadoTt);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.EstimacionID", parentPropertyName), complexObject == null ? null : (object)complexObject.EstimacionID);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.ReporteDimensionalDetalleID", parentPropertyName), complexObject == null ? null : (object)complexObject.ReporteDimensionalDetalleID);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.ReporteDimensionalID", parentPropertyName), complexObject == null ? null : (object)complexObject.ReporteDimensionalID);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.AprobadoReporteDimensional", parentPropertyName), complexObject == null ? null : (object)complexObject.AprobadoReporteDimensional);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.NombreSpool", parentPropertyName), complexObject == null ? null : (object)complexObject.NombreSpool);
        }

        #endregion

    }
}
