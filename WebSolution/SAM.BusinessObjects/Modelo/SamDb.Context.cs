//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SAM.BusinessObjects.Modelo
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class SamContext : DbContext
    {
        public SamContext()
            : base("name=SamContext")
        {
            this.Configuration.LazyLoadingEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Acero> Acero { get; set; }
        public DbSet<Cliente> Cliente { get; set; }
        public DbSet<Colada> Colada { get; set; }
        public DbSet<Contacto> Contacto { get; set; }
        public DbSet<CorteSpool> CorteSpool { get; set; }
        public DbSet<Defecto> Defecto { get; set; }
        public DbSet<FabArea> FabArea { get; set; }
        public DbSet<Fabricante> Fabricante { get; set; }
        public DbSet<FabricanteProyecto> FabricanteProyecto { get; set; }
        public DbSet<FamiliaAcero> FamiliaAcero { get; set; }
        public DbSet<FamiliaMaterial> FamiliaMaterial { get; set; }
        public DbSet<Maquina> Maquina { get; set; }
        public DbSet<NumeroUnico> NumeroUnico { get; set; }
        public DbSet<NumeroUnicoInventario> NumeroUnicoInventario { get; set; }
        public DbSet<NumeroUnicoMovimiento> NumeroUnicoMovimiento { get; set; }
        public DbSet<NumeroUnicoSegmento> NumeroUnicoSegmento { get; set; }
        public DbSet<Patio> Patio { get; set; }
        public DbSet<Perfil> Perfil { get; set; }
        public DbSet<PerfilPermiso> PerfilPermiso { get; set; }
        public DbSet<Permiso> Permiso { get; set; }
        public DbSet<ProcesoRaiz> ProcesoRaiz { get; set; }
        public DbSet<ProcesoRelleno> ProcesoRelleno { get; set; }
        public DbSet<Proveedor> Proveedor { get; set; }
        public DbSet<ProveedorProyecto> ProveedorProyecto { get; set; }
        public DbSet<Proyecto> Proyecto { get; set; }
        public DbSet<ProyectoConfiguracion> ProyectoConfiguracion { get; set; }
        public DbSet<ProyectoNomenclaturaSpool> ProyectoNomenclaturaSpool { get; set; }
        public DbSet<Recepcion> Recepcion { get; set; }
        public DbSet<RecepcionNumeroUnico> RecepcionNumeroUnico { get; set; }
        public DbSet<Soldador> Soldador { get; set; }
        public DbSet<Spool> Spool { get; set; }
        public DbSet<Taller> Taller { get; set; }
        public DbSet<TipoCorte> TipoCorte { get; set; }
        public DbSet<TipoJunta> TipoJunta { get; set; }
        public DbSet<Transportista> Transportista { get; set; }
        public DbSet<TransportistaProyecto> TransportistaProyecto { get; set; }
        public DbSet<Tubero> Tubero { get; set; }
        public DbSet<UsuarioProyecto> UsuarioProyecto { get; set; }
        public DbSet<Wpq> Wpq { get; set; }
        public DbSet<Wps> Wps { get; set; }
        public DbSet<WpsProyecto> WpsProyecto { get; set; }
        public DbSet<MaterialSpool> MaterialSpool { get; set; }
        public DbSet<Usuario> Usuario { get; set; }
        public DbSet<Color> Color { get; set; }
        public DbSet<ContactoCliente> ContactoCliente { get; set; }
        public DbSet<Pagina> Pagina { get; set; }
        public DbSet<Cedula> Cedula { get; set; }
        public DbSet<Corte> Corte { get; set; }
        public DbSet<CorteDetalle> CorteDetalle { get; set; }
        public DbSet<Despacho> Despacho { get; set; }
        public DbSet<Diametro> Diametro { get; set; }
        public DbSet<Espesor> Espesor { get; set; }
        public DbSet<KgTeorico> KgTeorico { get; set; }
        public DbSet<OrdenTrabajo> OrdenTrabajo { get; set; }
        public DbSet<OrdenTrabajoJunta> OrdenTrabajoJunta { get; set; }
        public DbSet<OrdenTrabajoMaterial> OrdenTrabajoMaterial { get; set; }
        public DbSet<OrdenTrabajoSpool> OrdenTrabajoSpool { get; set; }
        public DbSet<Peq> Peq { get; set; }
        public DbSet<ProyectoConsecutivo> ProyectoConsecutivo { get; set; }
        public DbSet<EstatusOrden> EstatusOrden { get; set; }
        public DbSet<Modulo> Modulo { get; set; }
        public DbSet<TipoMaterial> TipoMaterial { get; set; }
        public DbSet<TipoMovimiento> TipoMovimiento { get; set; }
        public DbSet<TipoPrueba> TipoPrueba { get; set; }
        public DbSet<Consumible> Consumible { get; set; }
        public DbSet<EmbarqueSpool> EmbarqueSpool { get; set; }
        public DbSet<InspeccionVisual> InspeccionVisual { get; set; }
        public DbSet<JuntaInspeccionVisual> JuntaInspeccionVisual { get; set; }
        public DbSet<JuntaReportePnd> JuntaReportePnd { get; set; }
        public DbSet<JuntaReportePndCuadrante> JuntaReportePndCuadrante { get; set; }
        public DbSet<JuntaReportePndSector> JuntaReportePndSector { get; set; }
        public DbSet<JuntaReporteTt> JuntaReporteTt { get; set; }
        public DbSet<JuntaRequisicion> JuntaRequisicion { get; set; }
        public DbSet<JuntaSoldadura> JuntaSoldadura { get; set; }
        public DbSet<JuntaWorkstatus> JuntaWorkstatus { get; set; }
        public DbSet<PinturaSpool> PinturaSpool { get; set; }
        public DbSet<ReporteDimensional> ReporteDimensional { get; set; }
        public DbSet<ReporteDimensionalDetalle> ReporteDimensionalDetalle { get; set; }
        public DbSet<ReportePnd> ReportePnd { get; set; }
        public DbSet<ReporteTt> ReporteTt { get; set; }
        public DbSet<Requisicion> Requisicion { get; set; }
        public DbSet<RequisicionPintura> RequisicionPintura { get; set; }
        public DbSet<RequisicionPinturaDetalle> RequisicionPinturaDetalle { get; set; }
        public DbSet<SpoolHold> SpoolHold { get; set; }
        public DbSet<SpoolHoldHistorial> SpoolHoldHistorial { get; set; }
        public DbSet<TecnicaSoldador> TecnicaSoldador { get; set; }
        public DbSet<TipoRechazo> TipoRechazo { get; set; }
        public DbSet<TipoReporteDimensional> TipoReporteDimensional { get; set; }
        public DbSet<WorkstatusSpool> WorkstatusSpool { get; set; }
        public DbSet<ConceptoEstimacion> ConceptoEstimacion { get; set; }
        public DbSet<Estimacion> Estimacion { get; set; }
        public DbSet<EstimacionJunta> EstimacionJunta { get; set; }
        public DbSet<EstimacionSpool> EstimacionSpool { get; set; }
        public DbSet<InspeccionDimensionalPatio> InspeccionDimensionalPatio { get; set; }
        public DbSet<InspeccionVisualPatio> InspeccionVisualPatio { get; set; }
        public DbSet<InspeccionVisualPatioDefecto> InspeccionVisualPatioDefecto { get; set; }
        public DbSet<JuntaInspeccionVisualDefecto> JuntaInspeccionVisualDefecto { get; set; }
        public DbSet<UltimoProceso> UltimoProceso { get; set; }
        public DbSet<PinturaNumeroUnico> PinturaNumeroUnico { get; set; }
        public DbSet<RequisicionNumeroUnico> RequisicionNumeroUnico { get; set; }
        public DbSet<RequisicionNumeroUnicoDetalle> RequisicionNumeroUnicoDetalle { get; set; }
        public DbSet<NumeroUnicoCorte> NumeroUnicoCorte { get; set; }
        public DbSet<UbicacionFisica> UbicacionFisica { get; set; }
        public DbSet<CostoArmado> CostoArmado { get; set; }
        public DbSet<CostoProcesoRaiz> CostoProcesoRaiz { get; set; }
        public DbSet<CostoProcesoRelleno> CostoProcesoRelleno { get; set; }
        public DbSet<DestajoSoldador> DestajoSoldador { get; set; }
        public DbSet<DestajoSoldadorDetalle> DestajoSoldadorDetalle { get; set; }
        public DbSet<DestajoTubero> DestajoTubero { get; set; }
        public DbSet<DestajoTuberoDetalle> DestajoTuberoDetalle { get; set; }
        public DbSet<PeriodoDestajo> PeriodoDestajo { get; set; }
        public DbSet<CampoSeguimientoJunta> CampoSeguimientoJunta { get; set; }
        public DbSet<CampoSeguimientoSpool> CampoSeguimientoSpool { get; set; }
        public DbSet<DetallePersonalizacionSeguimientoJunta> DetallePersonalizacionSeguimientoJunta { get; set; }
        public DbSet<DetallePersonalizacionSeguimientoSpool> DetallePersonalizacionSeguimientoSpool { get; set; }
        public DbSet<ModuloSeguimientoJunta> ModuloSeguimientoJunta { get; set; }
        public DbSet<ModuloSeguimientoSpool> ModuloSeguimientoSpool { get; set; }
        public DbSet<PersonalizacionSeguimientoSpool> PersonalizacionSeguimientoSpool { get; set; }
        public DbSet<ProyectoReporte> ProyectoReporte { get; set; }
        public DbSet<TipoReporteProyecto> TipoReporteProyecto { get; set; }
        public DbSet<PersonalizacionSeguimientoJunta> PersonalizacionSeguimientoJunta { get; set; }
        public DbSet<CategoriaPendiente> CategoriaPendiente { get; set; }
        public DbSet<TipoPendiente> TipoPendiente { get; set; }
        public DbSet<PendienteDetalle> PendienteDetalle { get; set; }
        public DbSet<Pendiente> Pendiente { get; set; }
        public DbSet<ProyectoPendiente> ProyectoPendiente { get; set; }
        public DbSet<ProyectoDossier> ProyectoDossier { get; set; }
        public DbSet<PeriodoPrograma> PeriodoPrograma { get; set; }
        public DbSet<ProyectoPrograma> ProyectoPrograma { get; set; }
        public DbSet<CorteSpoolHistorico> CorteSpoolHistorico { get; set; }
        public DbSet<JuntaSpoolHistorico> JuntaSpoolHistorico { get; set; }
        public DbSet<MaterialSpoolHistorico> MaterialSpoolHistorico { get; set; }
        public DbSet<SpoolHistorico> SpoolHistorico { get; set; }
        public DbSet<CorteSpoolPendiente> CorteSpoolPendiente { get; set; }
        public DbSet<JuntaSpoolPendiente> JuntaSpoolPendiente { get; set; }
        public DbSet<MaterialSpoolPendiente> MaterialSpoolPendiente { get; set; }
        public DbSet<SpoolPendiente> SpoolPendiente { get; set; }
        public DbSet<CongeladoParcial> CongeladoParcial { get; set; }
        public DbSet<InspeccionVisualCampo> InspeccionVisualCampo { get; set; }
        public DbSet<JuntaCampo> JuntaCampo { get; set; }
        public DbSet<JuntaCampoArmado> JuntaCampoArmado { get; set; }
        public DbSet<JuntaCampoInspeccionVisual> JuntaCampoInspeccionVisual { get; set; }
        public DbSet<JuntaCampoInspeccionVisualDefecto> JuntaCampoInspeccionVisualDefecto { get; set; }
        public DbSet<JuntaCampoReportePND> JuntaCampoReportePND { get; set; }
        public DbSet<JuntaCampoReportePNDCuadrante> JuntaCampoReportePNDCuadrante { get; set; }
        public DbSet<JuntaCampoReportePNDSector> JuntaCampoReportePNDSector { get; set; }
        public DbSet<JuntaCampoReporteTT> JuntaCampoReporteTT { get; set; }
        public DbSet<JuntaCampoRequisicion> JuntaCampoRequisicion { get; set; }
        public DbSet<JuntaCampoSoldadura> JuntaCampoSoldadura { get; set; }
        public DbSet<JuntaCampoSoldaduraDetalle> JuntaCampoSoldaduraDetalle { get; set; }
        public DbSet<ReporteCampoPND> ReporteCampoPND { get; set; }
        public DbSet<ReporteCampoTT> ReporteCampoTT { get; set; }
        public DbSet<RequisicionCampo> RequisicionCampo { get; set; }
        public DbSet<DTSSummaryLog> DTSSummaryLog { get; set; }
        public DbSet<HistoricoWorkstatus> HistoricoWorkstatus { get; set; }
        public DbSet<ProyectoCamposRecepcion> ProyectoCamposRecepcion { get; set; }
        public DbSet<BastonSpoolJunta> BastonSpoolJunta { get; set; }
        public DbSet<Estacion> Estacion { get; set; }
        public DbSet<BastonSpool> BastonSpool { get; set; }
        public DbSet<ItemCode> ItemCode { get; set; }
        public DbSet<ItemCodeEquivalente> ItemCodeEquivalente { get; set; }
        public DbSet<JuntaArmado> JuntaArmado { get; set; }
        public DbSet<JuntaSoldaduraDetalle> JuntaSoldaduraDetalle { get; set; }
        public DbSet<Embarque> Embarque { get; set; }
        public DbSet<RequisicionSpool> RequisicionSpool { get; set; }
        public DbSet<SpoolRequisicion> SpoolRequisicion { get; set; }
        public DbSet<ReporteSpoolPnd> ReporteSpoolPnd { get; set; }
        public DbSet<SpoolReportePnd> SpoolReportePnd { get; set; }
        public DbSet<TipoPruebaSpool> TipoPruebaSpool { get; set; }
        public DbSet<JuntaSpool> JuntaSpool { get; set; }
        public DbSet<Cuadrante> Cuadrante { get; set; }
        public DbSet<CorteSpoolDeleted> CorteSpoolDeleted { get; set; }
        public DbSet<MaterialSpoolDeleted> MaterialSpoolDeleted { get; set; }
        public DbSet<SpoolsDeleted> SpoolsDeleted { get; set; }
        public DbSet<JuntaSpoolDeleted> JuntaSpoolDeleted { get; set; }
    
        public virtual ObjectResult<Nullable<bool>> ActualizaUsername(Nullable<System.Guid> userID, string userName)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(System.Guid));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("ActualizaUsername", userIDParameter, userNameParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> BorraRecepcion(Nullable<int> recepcionID)
        {
            var recepcionIDParameter = recepcionID.HasValue ?
                new ObjectParameter("RecepcionID", recepcionID) :
                new ObjectParameter("RecepcionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("BorraRecepcion", recepcionIDParameter);
        }
    
        public virtual ObjectResult<Spool> ObtenerSpoolsPorIds(string spoolIDs)
        {
            var spoolIDsParameter = spoolIDs != null ?
                new ObjectParameter("SpoolIDs", spoolIDs) :
                new ObjectParameter("SpoolIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spool>("ObtenerSpoolsPorIds", spoolIDsParameter);
        }
    
        public virtual ObjectResult<Spool> ObtenerSpoolsPorIds(string spoolIDs, MergeOption mergeOption)
        {
            var spoolIDsParameter = spoolIDs != null ?
                new ObjectParameter("SpoolIDs", spoolIDs) :
                new ObjectParameter("SpoolIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spool>("ObtenerSpoolsPorIds", mergeOption, spoolIDsParameter);
        }
    
        public virtual ObjectResult<GrupoGenerico> ObtenerGrupoDeJuntasPorSpoolIds(string spoolIDs)
        {
            var spoolIDsParameter = spoolIDs != null ?
                new ObjectParameter("SpoolIDs", spoolIDs) :
                new ObjectParameter("SpoolIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GrupoGenerico>("ObtenerGrupoDeJuntasPorSpoolIds", spoolIDsParameter);
        }
    
        public virtual ObjectResult<NumeroUnicoCompuesto> ObtenerNumerosUnicosCompuesto(Nullable<int> proyectoID, string numeroColada, string codigoItemCode, string codigoNumeroUnicoInicial, string codigoNumeroUnicoFinal)
        {
            var proyectoIDParameter = proyectoID.HasValue ?
                new ObjectParameter("ProyectoID", proyectoID) :
                new ObjectParameter("ProyectoID", typeof(int));
    
            var numeroColadaParameter = numeroColada != null ?
                new ObjectParameter("NumeroColada", numeroColada) :
                new ObjectParameter("NumeroColada", typeof(string));
    
            var codigoItemCodeParameter = codigoItemCode != null ?
                new ObjectParameter("CodigoItemCode", codigoItemCode) :
                new ObjectParameter("CodigoItemCode", typeof(string));
    
            var codigoNumeroUnicoInicialParameter = codigoNumeroUnicoInicial != null ?
                new ObjectParameter("CodigoNumeroUnicoInicial", codigoNumeroUnicoInicial) :
                new ObjectParameter("CodigoNumeroUnicoInicial", typeof(string));
    
            var codigoNumeroUnicoFinalParameter = codigoNumeroUnicoFinal != null ?
                new ObjectParameter("CodigoNumeroUnicoFinal", codigoNumeroUnicoFinal) :
                new ObjectParameter("CodigoNumeroUnicoFinal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NumeroUnicoCompuesto>("ObtenerNumerosUnicosCompuesto", proyectoIDParameter, numeroColadaParameter, codigoItemCodeParameter, codigoNumeroUnicoInicialParameter, codigoNumeroUnicoFinalParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> CalculaHojaParaReporte(Nullable<int> tipoReporte, Nullable<int> proyectoID, string numeroReporte, string iDs)
        {
            var tipoReporteParameter = tipoReporte.HasValue ?
                new ObjectParameter("TipoReporte", tipoReporte) :
                new ObjectParameter("TipoReporte", typeof(int));
    
            var proyectoIDParameter = proyectoID.HasValue ?
                new ObjectParameter("ProyectoID", proyectoID) :
                new ObjectParameter("ProyectoID", typeof(int));
    
            var numeroReporteParameter = numeroReporte != null ?
                new ObjectParameter("NumeroReporte", numeroReporte) :
                new ObjectParameter("NumeroReporte", typeof(string));
    
            var iDsParameter = iDs != null ?
                new ObjectParameter("IDs", iDs) :
                new ObjectParameter("IDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("CalculaHojaParaReporte", tipoReporteParameter, proyectoIDParameter, numeroReporteParameter, iDsParameter);
        }
    
        public virtual ObjectResult<EstimacionJuntaCompuesto> ObtenerEstimacionJuntas(Nullable<int> proyectoID)
        {
            var proyectoIDParameter = proyectoID.HasValue ?
                new ObjectParameter("ProyectoID", proyectoID) :
                new ObjectParameter("ProyectoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EstimacionJuntaCompuesto>("ObtenerEstimacionJuntas", proyectoIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GeneraPeriodoDestajo(string semana, Nullable<int> anio, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<int> cantidadDiasFestivos, string tuberos, string soldadores, Nullable<System.Guid> usuarioModifica)
        {
            var semanaParameter = semana != null ?
                new ObjectParameter("Semana", semana) :
                new ObjectParameter("Semana", typeof(string));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("Anio", anio) :
                new ObjectParameter("Anio", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var cantidadDiasFestivosParameter = cantidadDiasFestivos.HasValue ?
                new ObjectParameter("CantidadDiasFestivos", cantidadDiasFestivos) :
                new ObjectParameter("CantidadDiasFestivos", typeof(int));
    
            var tuberosParameter = tuberos != null ?
                new ObjectParameter("Tuberos", tuberos) :
                new ObjectParameter("Tuberos", typeof(string));
    
            var soldadoresParameter = soldadores != null ?
                new ObjectParameter("Soldadores", soldadores) :
                new ObjectParameter("Soldadores", typeof(string));
    
            var usuarioModificaParameter = usuarioModifica.HasValue ?
                new ObjectParameter("UsuarioModifica", usuarioModifica) :
                new ObjectParameter("UsuarioModifica", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GeneraPeriodoDestajo", semanaParameter, anioParameter, fechaInicioParameter, fechaFinParameter, cantidadDiasFestivosParameter, tuberosParameter, soldadoresParameter, usuarioModificaParameter);
        }
    
        public virtual ObjectResult<EstimacionSpoolCompuesto> ObtenerEstimacionSpools(Nullable<int> proyectoID)
        {
            var proyectoIDParameter = proyectoID.HasValue ?
                new ObjectParameter("ProyectoID", proyectoID) :
                new ObjectParameter("ProyectoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EstimacionSpoolCompuesto>("ObtenerEstimacionSpools", proyectoIDParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> BorraPeriodoDestajo(Nullable<int> periodoDestajoID)
        {
            var periodoDestajoIDParameter = periodoDestajoID.HasValue ?
                new ObjectParameter("PeriodoDestajoID", periodoDestajoID) :
                new ObjectParameter("PeriodoDestajoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("BorraPeriodoDestajo", periodoDestajoIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> RegeneraDestajoSoldador(Nullable<int> periodoDestajoID, Nullable<int> cantidadDiasFestivos, string soldadores, Nullable<System.Guid> usuarioModifica)
        {
            var periodoDestajoIDParameter = periodoDestajoID.HasValue ?
                new ObjectParameter("PeriodoDestajoID", periodoDestajoID) :
                new ObjectParameter("PeriodoDestajoID", typeof(int));
    
            var cantidadDiasFestivosParameter = cantidadDiasFestivos.HasValue ?
                new ObjectParameter("CantidadDiasFestivos", cantidadDiasFestivos) :
                new ObjectParameter("CantidadDiasFestivos", typeof(int));
    
            var soldadoresParameter = soldadores != null ?
                new ObjectParameter("Soldadores", soldadores) :
                new ObjectParameter("Soldadores", typeof(string));
    
            var usuarioModificaParameter = usuarioModifica.HasValue ?
                new ObjectParameter("UsuarioModifica", usuarioModifica) :
                new ObjectParameter("UsuarioModifica", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RegeneraDestajoSoldador", periodoDestajoIDParameter, cantidadDiasFestivosParameter, soldadoresParameter, usuarioModificaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> RegeneraDestajoTubero(Nullable<int> oldDestajoTuberoID, Nullable<int> periodoDestajoID, Nullable<int> cantidadDiasFestivos, string tuberos, Nullable<System.Guid> usuarioModifica)
        {
            var oldDestajoTuberoIDParameter = oldDestajoTuberoID.HasValue ?
                new ObjectParameter("OldDestajoTuberoID", oldDestajoTuberoID) :
                new ObjectParameter("OldDestajoTuberoID", typeof(int));
    
            var periodoDestajoIDParameter = periodoDestajoID.HasValue ?
                new ObjectParameter("PeriodoDestajoID", periodoDestajoID) :
                new ObjectParameter("PeriodoDestajoID", typeof(int));
    
            var cantidadDiasFestivosParameter = cantidadDiasFestivos.HasValue ?
                new ObjectParameter("CantidadDiasFestivos", cantidadDiasFestivos) :
                new ObjectParameter("CantidadDiasFestivos", typeof(int));
    
            var tuberosParameter = tuberos != null ?
                new ObjectParameter("Tuberos", tuberos) :
                new ObjectParameter("Tuberos", typeof(string));
    
            var usuarioModificaParameter = usuarioModifica.HasValue ?
                new ObjectParameter("UsuarioModifica", usuarioModifica) :
                new ObjectParameter("UsuarioModifica", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RegeneraDestajoTubero", oldDestajoTuberoIDParameter, periodoDestajoIDParameter, cantidadDiasFestivosParameter, tuberosParameter, usuarioModificaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GeneraSpoolHistorico(Nullable<int> spoolID)
        {
            var spoolIDParameter = spoolID.HasValue ?
                new ObjectParameter("SpoolID", spoolID) :
                new ObjectParameter("SpoolID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GeneraSpoolHistorico", spoolIDParameter);
        }
    }
}
