//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SAM.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Cliente))]
    [KnownType(typeof(Colada))]
    [KnownType(typeof(Contacto))]
    [KnownType(typeof(FabricanteProyecto))]
    [KnownType(typeof(NumeroUnico))]
    [KnownType(typeof(NumeroUnicoInventario))]
    [KnownType(typeof(NumeroUnicoMovimiento))]
    [KnownType(typeof(NumeroUnicoSegmento))]
    [KnownType(typeof(Patio))]
    [KnownType(typeof(ProveedorProyecto))]
    [KnownType(typeof(ProyectoConfiguracion))]
    [KnownType(typeof(ProyectoNomenclaturaSpool))]
    [KnownType(typeof(Recepcion))]
    [KnownType(typeof(Spool))]
    [KnownType(typeof(TransportistaProyecto))]
    [KnownType(typeof(UsuarioProyecto))]
    [KnownType(typeof(WpsProyecto))]
    [KnownType(typeof(Color))]
    [KnownType(typeof(Corte))]
    [KnownType(typeof(Despacho))]
    [KnownType(typeof(OrdenTrabajo))]
    [KnownType(typeof(ProyectoConsecutivo))]
    [KnownType(typeof(InspeccionVisual))]
    [KnownType(typeof(ReporteDimensional))]
    [KnownType(typeof(ReportePnd))]
    [KnownType(typeof(ReporteTt))]
    [KnownType(typeof(Requisicion))]
    [KnownType(typeof(RequisicionPintura))]
    [KnownType(typeof(Estimacion))]
    [KnownType(typeof(PinturaSpool))]
    [KnownType(typeof(PinturaNumeroUnico))]
    [KnownType(typeof(RequisicionNumeroUnico))]
    [KnownType(typeof(NumeroUnicoCorte))]
    [KnownType(typeof(CostoArmado))]
    [KnownType(typeof(CostoProcesoRaiz))]
    [KnownType(typeof(CostoProcesoRelleno))]
    [KnownType(typeof(DestajoSoldadorDetalle))]
    [KnownType(typeof(DestajoTuberoDetalle))]
    [KnownType(typeof(ProyectoReporte))]
    [KnownType(typeof(Pendiente))]
    [KnownType(typeof(ProyectoPendiente))]
    [KnownType(typeof(ProyectoDossier))]
    [KnownType(typeof(Peq))]
    [KnownType(typeof(ProyectoPrograma))]
    [KnownType(typeof(SpoolPendiente))]
    [KnownType(typeof(InspeccionVisualCampo))]
    [KnownType(typeof(ReporteCampoPND))]
    [KnownType(typeof(ReporteCampoTT))]
    [KnownType(typeof(RequisicionCampo))]
    [KnownType(typeof(ProyectoCamposRecepcion))]
    [KnownType(typeof(ItemCode))]
    [KnownType(typeof(Embarque))]
    [KnownType(typeof(RequisicionSpool))]
    [KnownType(typeof(ReporteSpoolPnd))]
    [Serializable]
    public partial class Proyecto: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int ProyectoID
        {
            get { return _proyectoID; }
            set
            {
                if (_proyectoID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ProyectoID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _proyectoID = value;
                    OnPropertyChanged("ProyectoID");
                }
            }
        }
        private int _proyectoID;
    
        [DataMember]
        public int PatioID
        {
            get { return _patioID; }
            set
            {
                if (_patioID != value)
                {
                    ChangeTracker.RecordOriginalValue("PatioID", _patioID);
                    if (!IsDeserializing)
                    {
                        if (Patio != null && Patio.PatioID != value)
                        {
                            Patio = null;
                        }
                    }
                    _patioID = value;
                    OnPropertyChanged("PatioID");
                }
            }
        }
        private int _patioID;
    
        [DataMember]
        public int ClienteID
        {
            get { return _clienteID; }
            set
            {
                if (_clienteID != value)
                {
                    ChangeTracker.RecordOriginalValue("ClienteID", _clienteID);
                    if (!IsDeserializing)
                    {
                        if (Cliente != null && Cliente.ClienteID != value)
                        {
                            Cliente = null;
                        }
                    }
                    _clienteID = value;
                    OnPropertyChanged("ClienteID");
                }
            }
        }
        private int _clienteID;
    
        [DataMember]
        public int ContactoID
        {
            get { return _contactoID; }
            set
            {
                if (_contactoID != value)
                {
                    ChangeTracker.RecordOriginalValue("ContactoID", _contactoID);
                    if (!IsDeserializing)
                    {
                        if (Contacto != null && Contacto.ContactoID != value)
                        {
                            Contacto = null;
                        }
                    }
                    _contactoID = value;
                    OnPropertyChanged("ContactoID");
                }
            }
        }
        private int _contactoID;
    
        [DataMember]
        public string Nombre
        {
            get { return _nombre; }
            set
            {
                if (_nombre != value)
                {
                    _nombre = value;
                    OnPropertyChanged("Nombre");
                }
            }
        }
        private string _nombre;
    
        [DataMember]
        public string Descripcion
        {
            get { return _descripcion; }
            set
            {
                if (_descripcion != value)
                {
                    _descripcion = value;
                    OnPropertyChanged("Descripcion");
                }
            }
        }
        private string _descripcion;
    
        [DataMember]
        public Nullable<System.DateTime> FechaInicio
        {
            get { return _fechaInicio; }
            set
            {
                if (_fechaInicio != value)
                {
                    _fechaInicio = value;
                    OnPropertyChanged("FechaInicio");
                }
            }
        }
        private Nullable<System.DateTime> _fechaInicio;
    
        [DataMember]
        public Nullable<System.Guid> UsuarioModifica
        {
            get { return _usuarioModifica; }
            set
            {
                if (_usuarioModifica != value)
                {
                    _usuarioModifica = value;
                    OnPropertyChanged("UsuarioModifica");
                }
            }
        }
        private Nullable<System.Guid> _usuarioModifica;
    
        [DataMember]
        public Nullable<System.DateTime> FechaModificacion
        {
            get { return _fechaModificacion; }
            set
            {
                if (_fechaModificacion != value)
                {
                    _fechaModificacion = value;
                    OnPropertyChanged("FechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _fechaModificacion;
    
        [DataMember]
        public byte[] VersionRegistro
        {
            get { return _versionRegistro; }
            set
            {
                if (_versionRegistro != value)
                {
                    ChangeTracker.RecordOriginalValue("VersionRegistro", _versionRegistro);
                    _versionRegistro = value;
                    OnPropertyChanged("VersionRegistro");
                }
            }
        }
        private byte[] _versionRegistro;
    
        [DataMember]
        public int ColorID
        {
            get { return _colorID; }
            set
            {
                if (_colorID != value)
                {
                    ChangeTracker.RecordOriginalValue("ColorID", _colorID);
                    if (!IsDeserializing)
                    {
                        if (Color != null && Color.ColorID != value)
                        {
                            Color = null;
                        }
                    }
                    _colorID = value;
                    OnPropertyChanged("ColorID");
                }
            }
        }
        private int _colorID;
    
        [DataMember]
        public bool Activo
        {
            get { return _activo; }
            set
            {
                if (_activo != value)
                {
                    _activo = value;
                    OnPropertyChanged("Activo");
                }
            }
        }
        private bool _activo;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public Cliente Cliente
        {
            get { return _cliente; }
            set
            {
                if (!ReferenceEquals(_cliente, value))
                {
                    var previousValue = _cliente;
                    _cliente = value;
                    FixupCliente(previousValue);
                    OnNavigationPropertyChanged("Cliente");
                }
            }
        }
        private Cliente _cliente;
    
        [DataMember]
        public TrackableCollection<Colada> Colada
        {
            get
            {
                if (_colada == null)
                {
                    _colada = new TrackableCollection<Colada>();
                    _colada.CollectionChanged += FixupColada;
                }
                return _colada;
            }
            set
            {
                if (!ReferenceEquals(_colada, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_colada != null)
                    {
                        _colada.CollectionChanged -= FixupColada;
                    }
                    _colada = value;
                    if (_colada != null)
                    {
                        _colada.CollectionChanged += FixupColada;
                    }
                    OnNavigationPropertyChanged("Colada");
                }
            }
        }
        private TrackableCollection<Colada> _colada;
    
        [DataMember]
        public Contacto Contacto
        {
            get { return _contacto; }
            set
            {
                if (!ReferenceEquals(_contacto, value))
                {
                    var previousValue = _contacto;
                    _contacto = value;
                    FixupContacto(previousValue);
                    OnNavigationPropertyChanged("Contacto");
                }
            }
        }
        private Contacto _contacto;
    
        [DataMember]
        public TrackableCollection<FabricanteProyecto> FabricanteProyecto
        {
            get
            {
                if (_fabricanteProyecto == null)
                {
                    _fabricanteProyecto = new TrackableCollection<FabricanteProyecto>();
                    _fabricanteProyecto.CollectionChanged += FixupFabricanteProyecto;
                }
                return _fabricanteProyecto;
            }
            set
            {
                if (!ReferenceEquals(_fabricanteProyecto, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_fabricanteProyecto != null)
                    {
                        _fabricanteProyecto.CollectionChanged -= FixupFabricanteProyecto;
                    }
                    _fabricanteProyecto = value;
                    if (_fabricanteProyecto != null)
                    {
                        _fabricanteProyecto.CollectionChanged += FixupFabricanteProyecto;
                    }
                    OnNavigationPropertyChanged("FabricanteProyecto");
                }
            }
        }
        private TrackableCollection<FabricanteProyecto> _fabricanteProyecto;
    
        [DataMember]
        public TrackableCollection<NumeroUnico> NumeroUnico
        {
            get
            {
                if (_numeroUnico == null)
                {
                    _numeroUnico = new TrackableCollection<NumeroUnico>();
                    _numeroUnico.CollectionChanged += FixupNumeroUnico;
                }
                return _numeroUnico;
            }
            set
            {
                if (!ReferenceEquals(_numeroUnico, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_numeroUnico != null)
                    {
                        _numeroUnico.CollectionChanged -= FixupNumeroUnico;
                    }
                    _numeroUnico = value;
                    if (_numeroUnico != null)
                    {
                        _numeroUnico.CollectionChanged += FixupNumeroUnico;
                    }
                    OnNavigationPropertyChanged("NumeroUnico");
                }
            }
        }
        private TrackableCollection<NumeroUnico> _numeroUnico;
    
        [DataMember]
        public TrackableCollection<NumeroUnicoInventario> NumeroUnicoInventario
        {
            get
            {
                if (_numeroUnicoInventario == null)
                {
                    _numeroUnicoInventario = new TrackableCollection<NumeroUnicoInventario>();
                    _numeroUnicoInventario.CollectionChanged += FixupNumeroUnicoInventario;
                }
                return _numeroUnicoInventario;
            }
            set
            {
                if (!ReferenceEquals(_numeroUnicoInventario, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_numeroUnicoInventario != null)
                    {
                        _numeroUnicoInventario.CollectionChanged -= FixupNumeroUnicoInventario;
                    }
                    _numeroUnicoInventario = value;
                    if (_numeroUnicoInventario != null)
                    {
                        _numeroUnicoInventario.CollectionChanged += FixupNumeroUnicoInventario;
                    }
                    OnNavigationPropertyChanged("NumeroUnicoInventario");
                }
            }
        }
        private TrackableCollection<NumeroUnicoInventario> _numeroUnicoInventario;
    
        [DataMember]
        public TrackableCollection<NumeroUnicoMovimiento> NumeroUnicoMovimiento
        {
            get
            {
                if (_numeroUnicoMovimiento == null)
                {
                    _numeroUnicoMovimiento = new TrackableCollection<NumeroUnicoMovimiento>();
                    _numeroUnicoMovimiento.CollectionChanged += FixupNumeroUnicoMovimiento;
                }
                return _numeroUnicoMovimiento;
            }
            set
            {
                if (!ReferenceEquals(_numeroUnicoMovimiento, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_numeroUnicoMovimiento != null)
                    {
                        _numeroUnicoMovimiento.CollectionChanged -= FixupNumeroUnicoMovimiento;
                    }
                    _numeroUnicoMovimiento = value;
                    if (_numeroUnicoMovimiento != null)
                    {
                        _numeroUnicoMovimiento.CollectionChanged += FixupNumeroUnicoMovimiento;
                    }
                    OnNavigationPropertyChanged("NumeroUnicoMovimiento");
                }
            }
        }
        private TrackableCollection<NumeroUnicoMovimiento> _numeroUnicoMovimiento;
    
        [DataMember]
        public TrackableCollection<NumeroUnicoSegmento> NumeroUnicoSegmento
        {
            get
            {
                if (_numeroUnicoSegmento == null)
                {
                    _numeroUnicoSegmento = new TrackableCollection<NumeroUnicoSegmento>();
                    _numeroUnicoSegmento.CollectionChanged += FixupNumeroUnicoSegmento;
                }
                return _numeroUnicoSegmento;
            }
            set
            {
                if (!ReferenceEquals(_numeroUnicoSegmento, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_numeroUnicoSegmento != null)
                    {
                        _numeroUnicoSegmento.CollectionChanged -= FixupNumeroUnicoSegmento;
                    }
                    _numeroUnicoSegmento = value;
                    if (_numeroUnicoSegmento != null)
                    {
                        _numeroUnicoSegmento.CollectionChanged += FixupNumeroUnicoSegmento;
                    }
                    OnNavigationPropertyChanged("NumeroUnicoSegmento");
                }
            }
        }
        private TrackableCollection<NumeroUnicoSegmento> _numeroUnicoSegmento;
    
        [DataMember]
        public Patio Patio
        {
            get { return _patio; }
            set
            {
                if (!ReferenceEquals(_patio, value))
                {
                    var previousValue = _patio;
                    _patio = value;
                    FixupPatio(previousValue);
                    OnNavigationPropertyChanged("Patio");
                }
            }
        }
        private Patio _patio;
    
        [DataMember]
        public TrackableCollection<ProveedorProyecto> ProveedorProyecto
        {
            get
            {
                if (_proveedorProyecto == null)
                {
                    _proveedorProyecto = new TrackableCollection<ProveedorProyecto>();
                    _proveedorProyecto.CollectionChanged += FixupProveedorProyecto;
                }
                return _proveedorProyecto;
            }
            set
            {
                if (!ReferenceEquals(_proveedorProyecto, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_proveedorProyecto != null)
                    {
                        _proveedorProyecto.CollectionChanged -= FixupProveedorProyecto;
                    }
                    _proveedorProyecto = value;
                    if (_proveedorProyecto != null)
                    {
                        _proveedorProyecto.CollectionChanged += FixupProveedorProyecto;
                    }
                    OnNavigationPropertyChanged("ProveedorProyecto");
                }
            }
        }
        private TrackableCollection<ProveedorProyecto> _proveedorProyecto;
    
        [DataMember]
        public ProyectoConfiguracion ProyectoConfiguracion
        {
            get { return _proyectoConfiguracion; }
            set
            {
                if (!ReferenceEquals(_proyectoConfiguracion, value))
                {
                    var previousValue = _proyectoConfiguracion;
                    _proyectoConfiguracion = value;
                    FixupProyectoConfiguracion(previousValue);
                    OnNavigationPropertyChanged("ProyectoConfiguracion");
                }
            }
        }
        private ProyectoConfiguracion _proyectoConfiguracion;
    
        [DataMember]
        public ProyectoNomenclaturaSpool ProyectoNomenclaturaSpool
        {
            get { return _proyectoNomenclaturaSpool; }
            set
            {
                if (!ReferenceEquals(_proyectoNomenclaturaSpool, value))
                {
                    var previousValue = _proyectoNomenclaturaSpool;
                    _proyectoNomenclaturaSpool = value;
                    FixupProyectoNomenclaturaSpool(previousValue);
                    OnNavigationPropertyChanged("ProyectoNomenclaturaSpool");
                }
            }
        }
        private ProyectoNomenclaturaSpool _proyectoNomenclaturaSpool;
    
        [DataMember]
        public TrackableCollection<Recepcion> Recepcion
        {
            get
            {
                if (_recepcion == null)
                {
                    _recepcion = new TrackableCollection<Recepcion>();
                    _recepcion.CollectionChanged += FixupRecepcion;
                }
                return _recepcion;
            }
            set
            {
                if (!ReferenceEquals(_recepcion, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_recepcion != null)
                    {
                        _recepcion.CollectionChanged -= FixupRecepcion;
                    }
                    _recepcion = value;
                    if (_recepcion != null)
                    {
                        _recepcion.CollectionChanged += FixupRecepcion;
                    }
                    OnNavigationPropertyChanged("Recepcion");
                }
            }
        }
        private TrackableCollection<Recepcion> _recepcion;
    
        [DataMember]
        public TrackableCollection<Spool> Spool
        {
            get
            {
                if (_spool == null)
                {
                    _spool = new TrackableCollection<Spool>();
                    _spool.CollectionChanged += FixupSpool;
                }
                return _spool;
            }
            set
            {
                if (!ReferenceEquals(_spool, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_spool != null)
                    {
                        _spool.CollectionChanged -= FixupSpool;
                    }
                    _spool = value;
                    if (_spool != null)
                    {
                        _spool.CollectionChanged += FixupSpool;
                    }
                    OnNavigationPropertyChanged("Spool");
                }
            }
        }
        private TrackableCollection<Spool> _spool;
    
        [DataMember]
        public TrackableCollection<TransportistaProyecto> TransportistaProyecto
        {
            get
            {
                if (_transportistaProyecto == null)
                {
                    _transportistaProyecto = new TrackableCollection<TransportistaProyecto>();
                    _transportistaProyecto.CollectionChanged += FixupTransportistaProyecto;
                }
                return _transportistaProyecto;
            }
            set
            {
                if (!ReferenceEquals(_transportistaProyecto, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_transportistaProyecto != null)
                    {
                        _transportistaProyecto.CollectionChanged -= FixupTransportistaProyecto;
                    }
                    _transportistaProyecto = value;
                    if (_transportistaProyecto != null)
                    {
                        _transportistaProyecto.CollectionChanged += FixupTransportistaProyecto;
                    }
                    OnNavigationPropertyChanged("TransportistaProyecto");
                }
            }
        }
        private TrackableCollection<TransportistaProyecto> _transportistaProyecto;
    
        [DataMember]
        public TrackableCollection<UsuarioProyecto> UsuarioProyecto
        {
            get
            {
                if (_usuarioProyecto == null)
                {
                    _usuarioProyecto = new TrackableCollection<UsuarioProyecto>();
                    _usuarioProyecto.CollectionChanged += FixupUsuarioProyecto;
                }
                return _usuarioProyecto;
            }
            set
            {
                if (!ReferenceEquals(_usuarioProyecto, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_usuarioProyecto != null)
                    {
                        _usuarioProyecto.CollectionChanged -= FixupUsuarioProyecto;
                    }
                    _usuarioProyecto = value;
                    if (_usuarioProyecto != null)
                    {
                        _usuarioProyecto.CollectionChanged += FixupUsuarioProyecto;
                    }
                    OnNavigationPropertyChanged("UsuarioProyecto");
                }
            }
        }
        private TrackableCollection<UsuarioProyecto> _usuarioProyecto;
    
        [DataMember]
        public TrackableCollection<WpsProyecto> WpsProyecto
        {
            get
            {
                if (_wpsProyecto == null)
                {
                    _wpsProyecto = new TrackableCollection<WpsProyecto>();
                    _wpsProyecto.CollectionChanged += FixupWpsProyecto;
                }
                return _wpsProyecto;
            }
            set
            {
                if (!ReferenceEquals(_wpsProyecto, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_wpsProyecto != null)
                    {
                        _wpsProyecto.CollectionChanged -= FixupWpsProyecto;
                    }
                    _wpsProyecto = value;
                    if (_wpsProyecto != null)
                    {
                        _wpsProyecto.CollectionChanged += FixupWpsProyecto;
                    }
                    OnNavigationPropertyChanged("WpsProyecto");
                }
            }
        }
        private TrackableCollection<WpsProyecto> _wpsProyecto;
    
        [DataMember]
        public Color Color
        {
            get { return _color; }
            set
            {
                if (!ReferenceEquals(_color, value))
                {
                    var previousValue = _color;
                    _color = value;
                    FixupColor(previousValue);
                    OnNavigationPropertyChanged("Color");
                }
            }
        }
        private Color _color;
    
        [DataMember]
        public TrackableCollection<Corte> Corte
        {
            get
            {
                if (_corte == null)
                {
                    _corte = new TrackableCollection<Corte>();
                    _corte.CollectionChanged += FixupCorte;
                }
                return _corte;
            }
            set
            {
                if (!ReferenceEquals(_corte, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_corte != null)
                    {
                        _corte.CollectionChanged -= FixupCorte;
                    }
                    _corte = value;
                    if (_corte != null)
                    {
                        _corte.CollectionChanged += FixupCorte;
                    }
                    OnNavigationPropertyChanged("Corte");
                }
            }
        }
        private TrackableCollection<Corte> _corte;
    
        [DataMember]
        public TrackableCollection<Despacho> Despacho
        {
            get
            {
                if (_despacho == null)
                {
                    _despacho = new TrackableCollection<Despacho>();
                    _despacho.CollectionChanged += FixupDespacho;
                }
                return _despacho;
            }
            set
            {
                if (!ReferenceEquals(_despacho, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_despacho != null)
                    {
                        _despacho.CollectionChanged -= FixupDespacho;
                    }
                    _despacho = value;
                    if (_despacho != null)
                    {
                        _despacho.CollectionChanged += FixupDespacho;
                    }
                    OnNavigationPropertyChanged("Despacho");
                }
            }
        }
        private TrackableCollection<Despacho> _despacho;
    
        [DataMember]
        public TrackableCollection<OrdenTrabajo> OrdenTrabajo
        {
            get
            {
                if (_ordenTrabajo == null)
                {
                    _ordenTrabajo = new TrackableCollection<OrdenTrabajo>();
                    _ordenTrabajo.CollectionChanged += FixupOrdenTrabajo;
                }
                return _ordenTrabajo;
            }
            set
            {
                if (!ReferenceEquals(_ordenTrabajo, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_ordenTrabajo != null)
                    {
                        _ordenTrabajo.CollectionChanged -= FixupOrdenTrabajo;
                    }
                    _ordenTrabajo = value;
                    if (_ordenTrabajo != null)
                    {
                        _ordenTrabajo.CollectionChanged += FixupOrdenTrabajo;
                    }
                    OnNavigationPropertyChanged("OrdenTrabajo");
                }
            }
        }
        private TrackableCollection<OrdenTrabajo> _ordenTrabajo;
    
        [DataMember]
        public ProyectoConsecutivo ProyectoConsecutivo
        {
            get { return _proyectoConsecutivo; }
            set
            {
                if (!ReferenceEquals(_proyectoConsecutivo, value))
                {
                    var previousValue = _proyectoConsecutivo;
                    _proyectoConsecutivo = value;
                    FixupProyectoConsecutivo(previousValue);
                    OnNavigationPropertyChanged("ProyectoConsecutivo");
                }
            }
        }
        private ProyectoConsecutivo _proyectoConsecutivo;
    
        [DataMember]
        public TrackableCollection<InspeccionVisual> InspeccionVisual
        {
            get
            {
                if (_inspeccionVisual == null)
                {
                    _inspeccionVisual = new TrackableCollection<InspeccionVisual>();
                    _inspeccionVisual.CollectionChanged += FixupInspeccionVisual;
                }
                return _inspeccionVisual;
            }
            set
            {
                if (!ReferenceEquals(_inspeccionVisual, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_inspeccionVisual != null)
                    {
                        _inspeccionVisual.CollectionChanged -= FixupInspeccionVisual;
                    }
                    _inspeccionVisual = value;
                    if (_inspeccionVisual != null)
                    {
                        _inspeccionVisual.CollectionChanged += FixupInspeccionVisual;
                    }
                    OnNavigationPropertyChanged("InspeccionVisual");
                }
            }
        }
        private TrackableCollection<InspeccionVisual> _inspeccionVisual;
    
        [DataMember]
        public TrackableCollection<ReporteDimensional> ReporteDimensional
        {
            get
            {
                if (_reporteDimensional == null)
                {
                    _reporteDimensional = new TrackableCollection<ReporteDimensional>();
                    _reporteDimensional.CollectionChanged += FixupReporteDimensional;
                }
                return _reporteDimensional;
            }
            set
            {
                if (!ReferenceEquals(_reporteDimensional, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_reporteDimensional != null)
                    {
                        _reporteDimensional.CollectionChanged -= FixupReporteDimensional;
                    }
                    _reporteDimensional = value;
                    if (_reporteDimensional != null)
                    {
                        _reporteDimensional.CollectionChanged += FixupReporteDimensional;
                    }
                    OnNavigationPropertyChanged("ReporteDimensional");
                }
            }
        }
        private TrackableCollection<ReporteDimensional> _reporteDimensional;
    
        [DataMember]
        public TrackableCollection<ReportePnd> ReportePnd
        {
            get
            {
                if (_reportePnd == null)
                {
                    _reportePnd = new TrackableCollection<ReportePnd>();
                    _reportePnd.CollectionChanged += FixupReportePnd;
                }
                return _reportePnd;
            }
            set
            {
                if (!ReferenceEquals(_reportePnd, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_reportePnd != null)
                    {
                        _reportePnd.CollectionChanged -= FixupReportePnd;
                    }
                    _reportePnd = value;
                    if (_reportePnd != null)
                    {
                        _reportePnd.CollectionChanged += FixupReportePnd;
                    }
                    OnNavigationPropertyChanged("ReportePnd");
                }
            }
        }
        private TrackableCollection<ReportePnd> _reportePnd;
    
        [DataMember]
        public TrackableCollection<ReporteTt> ReporteTt
        {
            get
            {
                if (_reporteTt == null)
                {
                    _reporteTt = new TrackableCollection<ReporteTt>();
                    _reporteTt.CollectionChanged += FixupReporteTt;
                }
                return _reporteTt;
            }
            set
            {
                if (!ReferenceEquals(_reporteTt, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_reporteTt != null)
                    {
                        _reporteTt.CollectionChanged -= FixupReporteTt;
                    }
                    _reporteTt = value;
                    if (_reporteTt != null)
                    {
                        _reporteTt.CollectionChanged += FixupReporteTt;
                    }
                    OnNavigationPropertyChanged("ReporteTt");
                }
            }
        }
        private TrackableCollection<ReporteTt> _reporteTt;
    
        [DataMember]
        public TrackableCollection<Requisicion> Requisicion
        {
            get
            {
                if (_requisicion == null)
                {
                    _requisicion = new TrackableCollection<Requisicion>();
                    _requisicion.CollectionChanged += FixupRequisicion;
                }
                return _requisicion;
            }
            set
            {
                if (!ReferenceEquals(_requisicion, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_requisicion != null)
                    {
                        _requisicion.CollectionChanged -= FixupRequisicion;
                    }
                    _requisicion = value;
                    if (_requisicion != null)
                    {
                        _requisicion.CollectionChanged += FixupRequisicion;
                    }
                    OnNavigationPropertyChanged("Requisicion");
                }
            }
        }
        private TrackableCollection<Requisicion> _requisicion;
    
        [DataMember]
        public TrackableCollection<RequisicionPintura> RequisicionPintura
        {
            get
            {
                if (_requisicionPintura == null)
                {
                    _requisicionPintura = new TrackableCollection<RequisicionPintura>();
                    _requisicionPintura.CollectionChanged += FixupRequisicionPintura;
                }
                return _requisicionPintura;
            }
            set
            {
                if (!ReferenceEquals(_requisicionPintura, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_requisicionPintura != null)
                    {
                        _requisicionPintura.CollectionChanged -= FixupRequisicionPintura;
                    }
                    _requisicionPintura = value;
                    if (_requisicionPintura != null)
                    {
                        _requisicionPintura.CollectionChanged += FixupRequisicionPintura;
                    }
                    OnNavigationPropertyChanged("RequisicionPintura");
                }
            }
        }
        private TrackableCollection<RequisicionPintura> _requisicionPintura;
    
        [DataMember]
        public TrackableCollection<Estimacion> Estimacion
        {
            get
            {
                if (_estimacion == null)
                {
                    _estimacion = new TrackableCollection<Estimacion>();
                    _estimacion.CollectionChanged += FixupEstimacion;
                }
                return _estimacion;
            }
            set
            {
                if (!ReferenceEquals(_estimacion, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_estimacion != null)
                    {
                        _estimacion.CollectionChanged -= FixupEstimacion;
                    }
                    _estimacion = value;
                    if (_estimacion != null)
                    {
                        _estimacion.CollectionChanged += FixupEstimacion;
                    }
                    OnNavigationPropertyChanged("Estimacion");
                }
            }
        }
        private TrackableCollection<Estimacion> _estimacion;
    
        [DataMember]
        public TrackableCollection<PinturaSpool> PinturaSpool
        {
            get
            {
                if (_pinturaSpool == null)
                {
                    _pinturaSpool = new TrackableCollection<PinturaSpool>();
                    _pinturaSpool.CollectionChanged += FixupPinturaSpool;
                }
                return _pinturaSpool;
            }
            set
            {
                if (!ReferenceEquals(_pinturaSpool, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_pinturaSpool != null)
                    {
                        _pinturaSpool.CollectionChanged -= FixupPinturaSpool;
                    }
                    _pinturaSpool = value;
                    if (_pinturaSpool != null)
                    {
                        _pinturaSpool.CollectionChanged += FixupPinturaSpool;
                    }
                    OnNavigationPropertyChanged("PinturaSpool");
                }
            }
        }
        private TrackableCollection<PinturaSpool> _pinturaSpool;
    
        [DataMember]
        public TrackableCollection<PinturaNumeroUnico> PinturaNumeroUnico
        {
            get
            {
                if (_pinturaNumeroUnico == null)
                {
                    _pinturaNumeroUnico = new TrackableCollection<PinturaNumeroUnico>();
                    _pinturaNumeroUnico.CollectionChanged += FixupPinturaNumeroUnico;
                }
                return _pinturaNumeroUnico;
            }
            set
            {
                if (!ReferenceEquals(_pinturaNumeroUnico, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_pinturaNumeroUnico != null)
                    {
                        _pinturaNumeroUnico.CollectionChanged -= FixupPinturaNumeroUnico;
                    }
                    _pinturaNumeroUnico = value;
                    if (_pinturaNumeroUnico != null)
                    {
                        _pinturaNumeroUnico.CollectionChanged += FixupPinturaNumeroUnico;
                    }
                    OnNavigationPropertyChanged("PinturaNumeroUnico");
                }
            }
        }
        private TrackableCollection<PinturaNumeroUnico> _pinturaNumeroUnico;
    
        [DataMember]
        public TrackableCollection<RequisicionNumeroUnico> RequisicionNumeroUnico
        {
            get
            {
                if (_requisicionNumeroUnico == null)
                {
                    _requisicionNumeroUnico = new TrackableCollection<RequisicionNumeroUnico>();
                    _requisicionNumeroUnico.CollectionChanged += FixupRequisicionNumeroUnico;
                }
                return _requisicionNumeroUnico;
            }
            set
            {
                if (!ReferenceEquals(_requisicionNumeroUnico, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_requisicionNumeroUnico != null)
                    {
                        _requisicionNumeroUnico.CollectionChanged -= FixupRequisicionNumeroUnico;
                    }
                    _requisicionNumeroUnico = value;
                    if (_requisicionNumeroUnico != null)
                    {
                        _requisicionNumeroUnico.CollectionChanged += FixupRequisicionNumeroUnico;
                    }
                    OnNavigationPropertyChanged("RequisicionNumeroUnico");
                }
            }
        }
        private TrackableCollection<RequisicionNumeroUnico> _requisicionNumeroUnico;
    
        [DataMember]
        public TrackableCollection<NumeroUnicoCorte> NumeroUnicoCorte
        {
            get
            {
                if (_numeroUnicoCorte == null)
                {
                    _numeroUnicoCorte = new TrackableCollection<NumeroUnicoCorte>();
                    _numeroUnicoCorte.CollectionChanged += FixupNumeroUnicoCorte;
                }
                return _numeroUnicoCorte;
            }
            set
            {
                if (!ReferenceEquals(_numeroUnicoCorte, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_numeroUnicoCorte != null)
                    {
                        _numeroUnicoCorte.CollectionChanged -= FixupNumeroUnicoCorte;
                    }
                    _numeroUnicoCorte = value;
                    if (_numeroUnicoCorte != null)
                    {
                        _numeroUnicoCorte.CollectionChanged += FixupNumeroUnicoCorte;
                    }
                    OnNavigationPropertyChanged("NumeroUnicoCorte");
                }
            }
        }
        private TrackableCollection<NumeroUnicoCorte> _numeroUnicoCorte;
    
        [DataMember]
        public TrackableCollection<CostoArmado> CostoArmado
        {
            get
            {
                if (_costoArmado == null)
                {
                    _costoArmado = new TrackableCollection<CostoArmado>();
                    _costoArmado.CollectionChanged += FixupCostoArmado;
                }
                return _costoArmado;
            }
            set
            {
                if (!ReferenceEquals(_costoArmado, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_costoArmado != null)
                    {
                        _costoArmado.CollectionChanged -= FixupCostoArmado;
                    }
                    _costoArmado = value;
                    if (_costoArmado != null)
                    {
                        _costoArmado.CollectionChanged += FixupCostoArmado;
                    }
                    OnNavigationPropertyChanged("CostoArmado");
                }
            }
        }
        private TrackableCollection<CostoArmado> _costoArmado;
    
        [DataMember]
        public TrackableCollection<CostoProcesoRaiz> CostoProcesoRaiz
        {
            get
            {
                if (_costoProcesoRaiz == null)
                {
                    _costoProcesoRaiz = new TrackableCollection<CostoProcesoRaiz>();
                    _costoProcesoRaiz.CollectionChanged += FixupCostoProcesoRaiz;
                }
                return _costoProcesoRaiz;
            }
            set
            {
                if (!ReferenceEquals(_costoProcesoRaiz, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_costoProcesoRaiz != null)
                    {
                        _costoProcesoRaiz.CollectionChanged -= FixupCostoProcesoRaiz;
                    }
                    _costoProcesoRaiz = value;
                    if (_costoProcesoRaiz != null)
                    {
                        _costoProcesoRaiz.CollectionChanged += FixupCostoProcesoRaiz;
                    }
                    OnNavigationPropertyChanged("CostoProcesoRaiz");
                }
            }
        }
        private TrackableCollection<CostoProcesoRaiz> _costoProcesoRaiz;
    
        [DataMember]
        public TrackableCollection<CostoProcesoRelleno> CostoProcesoRelleno
        {
            get
            {
                if (_costoProcesoRelleno == null)
                {
                    _costoProcesoRelleno = new TrackableCollection<CostoProcesoRelleno>();
                    _costoProcesoRelleno.CollectionChanged += FixupCostoProcesoRelleno;
                }
                return _costoProcesoRelleno;
            }
            set
            {
                if (!ReferenceEquals(_costoProcesoRelleno, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_costoProcesoRelleno != null)
                    {
                        _costoProcesoRelleno.CollectionChanged -= FixupCostoProcesoRelleno;
                    }
                    _costoProcesoRelleno = value;
                    if (_costoProcesoRelleno != null)
                    {
                        _costoProcesoRelleno.CollectionChanged += FixupCostoProcesoRelleno;
                    }
                    OnNavigationPropertyChanged("CostoProcesoRelleno");
                }
            }
        }
        private TrackableCollection<CostoProcesoRelleno> _costoProcesoRelleno;
    
        [DataMember]
        public TrackableCollection<DestajoSoldadorDetalle> DestajoSoldadorDetalle
        {
            get
            {
                if (_destajoSoldadorDetalle == null)
                {
                    _destajoSoldadorDetalle = new TrackableCollection<DestajoSoldadorDetalle>();
                    _destajoSoldadorDetalle.CollectionChanged += FixupDestajoSoldadorDetalle;
                }
                return _destajoSoldadorDetalle;
            }
            set
            {
                if (!ReferenceEquals(_destajoSoldadorDetalle, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_destajoSoldadorDetalle != null)
                    {
                        _destajoSoldadorDetalle.CollectionChanged -= FixupDestajoSoldadorDetalle;
                    }
                    _destajoSoldadorDetalle = value;
                    if (_destajoSoldadorDetalle != null)
                    {
                        _destajoSoldadorDetalle.CollectionChanged += FixupDestajoSoldadorDetalle;
                    }
                    OnNavigationPropertyChanged("DestajoSoldadorDetalle");
                }
            }
        }
        private TrackableCollection<DestajoSoldadorDetalle> _destajoSoldadorDetalle;
    
        [DataMember]
        public TrackableCollection<DestajoTuberoDetalle> DestajoTuberoDetalle
        {
            get
            {
                if (_destajoTuberoDetalle == null)
                {
                    _destajoTuberoDetalle = new TrackableCollection<DestajoTuberoDetalle>();
                    _destajoTuberoDetalle.CollectionChanged += FixupDestajoTuberoDetalle;
                }
                return _destajoTuberoDetalle;
            }
            set
            {
                if (!ReferenceEquals(_destajoTuberoDetalle, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_destajoTuberoDetalle != null)
                    {
                        _destajoTuberoDetalle.CollectionChanged -= FixupDestajoTuberoDetalle;
                    }
                    _destajoTuberoDetalle = value;
                    if (_destajoTuberoDetalle != null)
                    {
                        _destajoTuberoDetalle.CollectionChanged += FixupDestajoTuberoDetalle;
                    }
                    OnNavigationPropertyChanged("DestajoTuberoDetalle");
                }
            }
        }
        private TrackableCollection<DestajoTuberoDetalle> _destajoTuberoDetalle;
    
        [DataMember]
        public TrackableCollection<ProyectoReporte> ProyectoReporte
        {
            get
            {
                if (_proyectoReporte == null)
                {
                    _proyectoReporte = new TrackableCollection<ProyectoReporte>();
                    _proyectoReporte.CollectionChanged += FixupProyectoReporte;
                }
                return _proyectoReporte;
            }
            set
            {
                if (!ReferenceEquals(_proyectoReporte, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_proyectoReporte != null)
                    {
                        _proyectoReporte.CollectionChanged -= FixupProyectoReporte;
                    }
                    _proyectoReporte = value;
                    if (_proyectoReporte != null)
                    {
                        _proyectoReporte.CollectionChanged += FixupProyectoReporte;
                    }
                    OnNavigationPropertyChanged("ProyectoReporte");
                }
            }
        }
        private TrackableCollection<ProyectoReporte> _proyectoReporte;
    
        [DataMember]
        public TrackableCollection<Pendiente> Pendiente
        {
            get
            {
                if (_pendiente == null)
                {
                    _pendiente = new TrackableCollection<Pendiente>();
                    _pendiente.CollectionChanged += FixupPendiente;
                }
                return _pendiente;
            }
            set
            {
                if (!ReferenceEquals(_pendiente, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_pendiente != null)
                    {
                        _pendiente.CollectionChanged -= FixupPendiente;
                    }
                    _pendiente = value;
                    if (_pendiente != null)
                    {
                        _pendiente.CollectionChanged += FixupPendiente;
                    }
                    OnNavigationPropertyChanged("Pendiente");
                }
            }
        }
        private TrackableCollection<Pendiente> _pendiente;
    
        [DataMember]
        public TrackableCollection<ProyectoPendiente> ProyectoPendiente
        {
            get
            {
                if (_proyectoPendiente == null)
                {
                    _proyectoPendiente = new TrackableCollection<ProyectoPendiente>();
                    _proyectoPendiente.CollectionChanged += FixupProyectoPendiente;
                }
                return _proyectoPendiente;
            }
            set
            {
                if (!ReferenceEquals(_proyectoPendiente, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_proyectoPendiente != null)
                    {
                        _proyectoPendiente.CollectionChanged -= FixupProyectoPendiente;
                    }
                    _proyectoPendiente = value;
                    if (_proyectoPendiente != null)
                    {
                        _proyectoPendiente.CollectionChanged += FixupProyectoPendiente;
                    }
                    OnNavigationPropertyChanged("ProyectoPendiente");
                }
            }
        }
        private TrackableCollection<ProyectoPendiente> _proyectoPendiente;
    
        [DataMember]
        public ProyectoDossier ProyectoDossier
        {
            get { return _proyectoDossier; }
            set
            {
                if (!ReferenceEquals(_proyectoDossier, value))
                {
                    var previousValue = _proyectoDossier;
                    _proyectoDossier = value;
                    FixupProyectoDossier(previousValue);
                    OnNavigationPropertyChanged("ProyectoDossier");
                }
            }
        }
        private ProyectoDossier _proyectoDossier;
    
        [DataMember]
        public TrackableCollection<Peq> Peq
        {
            get
            {
                if (_peq == null)
                {
                    _peq = new TrackableCollection<Peq>();
                    _peq.CollectionChanged += FixupPeq;
                }
                return _peq;
            }
            set
            {
                if (!ReferenceEquals(_peq, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_peq != null)
                    {
                        _peq.CollectionChanged -= FixupPeq;
                    }
                    _peq = value;
                    if (_peq != null)
                    {
                        _peq.CollectionChanged += FixupPeq;
                    }
                    OnNavigationPropertyChanged("Peq");
                }
            }
        }
        private TrackableCollection<Peq> _peq;
    
        [DataMember]
        public TrackableCollection<ProyectoPrograma> ProyectoPrograma
        {
            get
            {
                if (_proyectoPrograma == null)
                {
                    _proyectoPrograma = new TrackableCollection<ProyectoPrograma>();
                    _proyectoPrograma.CollectionChanged += FixupProyectoPrograma;
                }
                return _proyectoPrograma;
            }
            set
            {
                if (!ReferenceEquals(_proyectoPrograma, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_proyectoPrograma != null)
                    {
                        _proyectoPrograma.CollectionChanged -= FixupProyectoPrograma;
                    }
                    _proyectoPrograma = value;
                    if (_proyectoPrograma != null)
                    {
                        _proyectoPrograma.CollectionChanged += FixupProyectoPrograma;
                    }
                    OnNavigationPropertyChanged("ProyectoPrograma");
                }
            }
        }
        private TrackableCollection<ProyectoPrograma> _proyectoPrograma;
    
        [DataMember]
        public TrackableCollection<SpoolPendiente> SpoolPendiente
        {
            get
            {
                if (_spoolPendiente == null)
                {
                    _spoolPendiente = new TrackableCollection<SpoolPendiente>();
                    _spoolPendiente.CollectionChanged += FixupSpoolPendiente;
                }
                return _spoolPendiente;
            }
            set
            {
                if (!ReferenceEquals(_spoolPendiente, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_spoolPendiente != null)
                    {
                        _spoolPendiente.CollectionChanged -= FixupSpoolPendiente;
                    }
                    _spoolPendiente = value;
                    if (_spoolPendiente != null)
                    {
                        _spoolPendiente.CollectionChanged += FixupSpoolPendiente;
                    }
                    OnNavigationPropertyChanged("SpoolPendiente");
                }
            }
        }
        private TrackableCollection<SpoolPendiente> _spoolPendiente;
    
        [DataMember]
        public TrackableCollection<InspeccionVisualCampo> InspeccionVisualCampo
        {
            get
            {
                if (_inspeccionVisualCampo == null)
                {
                    _inspeccionVisualCampo = new TrackableCollection<InspeccionVisualCampo>();
                    _inspeccionVisualCampo.CollectionChanged += FixupInspeccionVisualCampo;
                }
                return _inspeccionVisualCampo;
            }
            set
            {
                if (!ReferenceEquals(_inspeccionVisualCampo, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_inspeccionVisualCampo != null)
                    {
                        _inspeccionVisualCampo.CollectionChanged -= FixupInspeccionVisualCampo;
                    }
                    _inspeccionVisualCampo = value;
                    if (_inspeccionVisualCampo != null)
                    {
                        _inspeccionVisualCampo.CollectionChanged += FixupInspeccionVisualCampo;
                    }
                    OnNavigationPropertyChanged("InspeccionVisualCampo");
                }
            }
        }
        private TrackableCollection<InspeccionVisualCampo> _inspeccionVisualCampo;
    
        [DataMember]
        public TrackableCollection<ReporteCampoPND> ReporteCampoPND
        {
            get
            {
                if (_reporteCampoPND == null)
                {
                    _reporteCampoPND = new TrackableCollection<ReporteCampoPND>();
                    _reporteCampoPND.CollectionChanged += FixupReporteCampoPND;
                }
                return _reporteCampoPND;
            }
            set
            {
                if (!ReferenceEquals(_reporteCampoPND, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_reporteCampoPND != null)
                    {
                        _reporteCampoPND.CollectionChanged -= FixupReporteCampoPND;
                    }
                    _reporteCampoPND = value;
                    if (_reporteCampoPND != null)
                    {
                        _reporteCampoPND.CollectionChanged += FixupReporteCampoPND;
                    }
                    OnNavigationPropertyChanged("ReporteCampoPND");
                }
            }
        }
        private TrackableCollection<ReporteCampoPND> _reporteCampoPND;
    
        [DataMember]
        public TrackableCollection<ReporteCampoTT> ReporteCampoTT
        {
            get
            {
                if (_reporteCampoTT == null)
                {
                    _reporteCampoTT = new TrackableCollection<ReporteCampoTT>();
                    _reporteCampoTT.CollectionChanged += FixupReporteCampoTT;
                }
                return _reporteCampoTT;
            }
            set
            {
                if (!ReferenceEquals(_reporteCampoTT, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_reporteCampoTT != null)
                    {
                        _reporteCampoTT.CollectionChanged -= FixupReporteCampoTT;
                    }
                    _reporteCampoTT = value;
                    if (_reporteCampoTT != null)
                    {
                        _reporteCampoTT.CollectionChanged += FixupReporteCampoTT;
                    }
                    OnNavigationPropertyChanged("ReporteCampoTT");
                }
            }
        }
        private TrackableCollection<ReporteCampoTT> _reporteCampoTT;
    
        [DataMember]
        public TrackableCollection<RequisicionCampo> RequisicionCampo
        {
            get
            {
                if (_requisicionCampo == null)
                {
                    _requisicionCampo = new TrackableCollection<RequisicionCampo>();
                    _requisicionCampo.CollectionChanged += FixupRequisicionCampo;
                }
                return _requisicionCampo;
            }
            set
            {
                if (!ReferenceEquals(_requisicionCampo, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_requisicionCampo != null)
                    {
                        _requisicionCampo.CollectionChanged -= FixupRequisicionCampo;
                    }
                    _requisicionCampo = value;
                    if (_requisicionCampo != null)
                    {
                        _requisicionCampo.CollectionChanged += FixupRequisicionCampo;
                    }
                    OnNavigationPropertyChanged("RequisicionCampo");
                }
            }
        }
        private TrackableCollection<RequisicionCampo> _requisicionCampo;
    
        [DataMember]
        public ProyectoCamposRecepcion ProyectoCamposRecepcion
        {
            get { return _proyectoCamposRecepcion; }
            set
            {
                if (!ReferenceEquals(_proyectoCamposRecepcion, value))
                {
                    var previousValue = _proyectoCamposRecepcion;
                    _proyectoCamposRecepcion = value;
                    FixupProyectoCamposRecepcion(previousValue);
                    OnNavigationPropertyChanged("ProyectoCamposRecepcion");
                }
            }
        }
        private ProyectoCamposRecepcion _proyectoCamposRecepcion;
    
        [DataMember]
        public TrackableCollection<ItemCode> ItemCode
        {
            get
            {
                if (_itemCode == null)
                {
                    _itemCode = new TrackableCollection<ItemCode>();
                    _itemCode.CollectionChanged += FixupItemCode;
                }
                return _itemCode;
            }
            set
            {
                if (!ReferenceEquals(_itemCode, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_itemCode != null)
                    {
                        _itemCode.CollectionChanged -= FixupItemCode;
                    }
                    _itemCode = value;
                    if (_itemCode != null)
                    {
                        _itemCode.CollectionChanged += FixupItemCode;
                    }
                    OnNavigationPropertyChanged("ItemCode");
                }
            }
        }
        private TrackableCollection<ItemCode> _itemCode;
    
        [DataMember]
        public TrackableCollection<Embarque> Embarque
        {
            get
            {
                if (_embarque == null)
                {
                    _embarque = new TrackableCollection<Embarque>();
                    _embarque.CollectionChanged += FixupEmbarque;
                }
                return _embarque;
            }
            set
            {
                if (!ReferenceEquals(_embarque, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_embarque != null)
                    {
                        _embarque.CollectionChanged -= FixupEmbarque;
                    }
                    _embarque = value;
                    if (_embarque != null)
                    {
                        _embarque.CollectionChanged += FixupEmbarque;
                    }
                    OnNavigationPropertyChanged("Embarque");
                }
            }
        }
        private TrackableCollection<Embarque> _embarque;
    
        [DataMember]
        public TrackableCollection<RequisicionSpool> RequisicionSpool
        {
            get
            {
                if (_requisicionSpool == null)
                {
                    _requisicionSpool = new TrackableCollection<RequisicionSpool>();
                    _requisicionSpool.CollectionChanged += FixupRequisicionSpool;
                }
                return _requisicionSpool;
            }
            set
            {
                if (!ReferenceEquals(_requisicionSpool, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_requisicionSpool != null)
                    {
                        _requisicionSpool.CollectionChanged -= FixupRequisicionSpool;
                    }
                    _requisicionSpool = value;
                    if (_requisicionSpool != null)
                    {
                        _requisicionSpool.CollectionChanged += FixupRequisicionSpool;
                    }
                    OnNavigationPropertyChanged("RequisicionSpool");
                }
            }
        }
        private TrackableCollection<RequisicionSpool> _requisicionSpool;
    
        [DataMember]
        public TrackableCollection<ReporteSpoolPnd> ReporteSpoolPnd
        {
            get
            {
                if (_reporteSpoolPnd == null)
                {
                    _reporteSpoolPnd = new TrackableCollection<ReporteSpoolPnd>();
                    _reporteSpoolPnd.CollectionChanged += FixupReporteSpoolPnd;
                }
                return _reporteSpoolPnd;
            }
            set
            {
                if (!ReferenceEquals(_reporteSpoolPnd, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_reporteSpoolPnd != null)
                    {
                        _reporteSpoolPnd.CollectionChanged -= FixupReporteSpoolPnd;
                    }
                    _reporteSpoolPnd = value;
                    if (_reporteSpoolPnd != null)
                    {
                        _reporteSpoolPnd.CollectionChanged += FixupReporteSpoolPnd;
                    }
                    OnNavigationPropertyChanged("ReporteSpoolPnd");
                }
            }
        }
        private TrackableCollection<ReporteSpoolPnd> _reporteSpoolPnd;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
    	public void OnDeserializedMethod(StreamingContext context)
    	{
    		IsDeserializing = false;
    		ChangeTracker.ChangeTrackingEnabled = true;
    			if (_colada != null)
    		{
    			_colada.CollectionChanged -= FixupColada;
    			_colada.CollectionChanged += FixupColada;
    			}
    			if (_fabricanteProyecto != null)
    		{
    			_fabricanteProyecto.CollectionChanged -= FixupFabricanteProyecto;
    			_fabricanteProyecto.CollectionChanged += FixupFabricanteProyecto;
    			}
    			if (_numeroUnico != null)
    		{
    			_numeroUnico.CollectionChanged -= FixupNumeroUnico;
    			_numeroUnico.CollectionChanged += FixupNumeroUnico;
    			}
    			if (_numeroUnicoInventario != null)
    		{
    			_numeroUnicoInventario.CollectionChanged -= FixupNumeroUnicoInventario;
    			_numeroUnicoInventario.CollectionChanged += FixupNumeroUnicoInventario;
    			}
    			if (_numeroUnicoMovimiento != null)
    		{
    			_numeroUnicoMovimiento.CollectionChanged -= FixupNumeroUnicoMovimiento;
    			_numeroUnicoMovimiento.CollectionChanged += FixupNumeroUnicoMovimiento;
    			}
    			if (_numeroUnicoSegmento != null)
    		{
    			_numeroUnicoSegmento.CollectionChanged -= FixupNumeroUnicoSegmento;
    			_numeroUnicoSegmento.CollectionChanged += FixupNumeroUnicoSegmento;
    			}
    			if (_proveedorProyecto != null)
    		{
    			_proveedorProyecto.CollectionChanged -= FixupProveedorProyecto;
    			_proveedorProyecto.CollectionChanged += FixupProveedorProyecto;
    			}
    			if (_recepcion != null)
    		{
    			_recepcion.CollectionChanged -= FixupRecepcion;
    			_recepcion.CollectionChanged += FixupRecepcion;
    			}
    			if (_spool != null)
    		{
    			_spool.CollectionChanged -= FixupSpool;
    			_spool.CollectionChanged += FixupSpool;
    			}
    			if (_transportistaProyecto != null)
    		{
    			_transportistaProyecto.CollectionChanged -= FixupTransportistaProyecto;
    			_transportistaProyecto.CollectionChanged += FixupTransportistaProyecto;
    			}
    			if (_usuarioProyecto != null)
    		{
    			_usuarioProyecto.CollectionChanged -= FixupUsuarioProyecto;
    			_usuarioProyecto.CollectionChanged += FixupUsuarioProyecto;
    			}
    			if (_wpsProyecto != null)
    		{
    			_wpsProyecto.CollectionChanged -= FixupWpsProyecto;
    			_wpsProyecto.CollectionChanged += FixupWpsProyecto;
    			}
    			if (_corte != null)
    		{
    			_corte.CollectionChanged -= FixupCorte;
    			_corte.CollectionChanged += FixupCorte;
    			}
    			if (_despacho != null)
    		{
    			_despacho.CollectionChanged -= FixupDespacho;
    			_despacho.CollectionChanged += FixupDespacho;
    			}
    			if (_ordenTrabajo != null)
    		{
    			_ordenTrabajo.CollectionChanged -= FixupOrdenTrabajo;
    			_ordenTrabajo.CollectionChanged += FixupOrdenTrabajo;
    			}
    			if (_inspeccionVisual != null)
    		{
    			_inspeccionVisual.CollectionChanged -= FixupInspeccionVisual;
    			_inspeccionVisual.CollectionChanged += FixupInspeccionVisual;
    			}
    			if (_reporteDimensional != null)
    		{
    			_reporteDimensional.CollectionChanged -= FixupReporteDimensional;
    			_reporteDimensional.CollectionChanged += FixupReporteDimensional;
    			}
    			if (_reportePnd != null)
    		{
    			_reportePnd.CollectionChanged -= FixupReportePnd;
    			_reportePnd.CollectionChanged += FixupReportePnd;
    			}
    			if (_reporteTt != null)
    		{
    			_reporteTt.CollectionChanged -= FixupReporteTt;
    			_reporteTt.CollectionChanged += FixupReporteTt;
    			}
    			if (_requisicion != null)
    		{
    			_requisicion.CollectionChanged -= FixupRequisicion;
    			_requisicion.CollectionChanged += FixupRequisicion;
    			}
    			if (_requisicionPintura != null)
    		{
    			_requisicionPintura.CollectionChanged -= FixupRequisicionPintura;
    			_requisicionPintura.CollectionChanged += FixupRequisicionPintura;
    			}
    			if (_estimacion != null)
    		{
    			_estimacion.CollectionChanged -= FixupEstimacion;
    			_estimacion.CollectionChanged += FixupEstimacion;
    			}
    			if (_pinturaSpool != null)
    		{
    			_pinturaSpool.CollectionChanged -= FixupPinturaSpool;
    			_pinturaSpool.CollectionChanged += FixupPinturaSpool;
    			}
    			if (_pinturaNumeroUnico != null)
    		{
    			_pinturaNumeroUnico.CollectionChanged -= FixupPinturaNumeroUnico;
    			_pinturaNumeroUnico.CollectionChanged += FixupPinturaNumeroUnico;
    			}
    			if (_requisicionNumeroUnico != null)
    		{
    			_requisicionNumeroUnico.CollectionChanged -= FixupRequisicionNumeroUnico;
    			_requisicionNumeroUnico.CollectionChanged += FixupRequisicionNumeroUnico;
    			}
    			if (_numeroUnicoCorte != null)
    		{
    			_numeroUnicoCorte.CollectionChanged -= FixupNumeroUnicoCorte;
    			_numeroUnicoCorte.CollectionChanged += FixupNumeroUnicoCorte;
    			}
    			if (_costoArmado != null)
    		{
    			_costoArmado.CollectionChanged -= FixupCostoArmado;
    			_costoArmado.CollectionChanged += FixupCostoArmado;
    			}
    			if (_costoProcesoRaiz != null)
    		{
    			_costoProcesoRaiz.CollectionChanged -= FixupCostoProcesoRaiz;
    			_costoProcesoRaiz.CollectionChanged += FixupCostoProcesoRaiz;
    			}
    			if (_costoProcesoRelleno != null)
    		{
    			_costoProcesoRelleno.CollectionChanged -= FixupCostoProcesoRelleno;
    			_costoProcesoRelleno.CollectionChanged += FixupCostoProcesoRelleno;
    			}
    			if (_destajoSoldadorDetalle != null)
    		{
    			_destajoSoldadorDetalle.CollectionChanged -= FixupDestajoSoldadorDetalle;
    			_destajoSoldadorDetalle.CollectionChanged += FixupDestajoSoldadorDetalle;
    			}
    			if (_destajoTuberoDetalle != null)
    		{
    			_destajoTuberoDetalle.CollectionChanged -= FixupDestajoTuberoDetalle;
    			_destajoTuberoDetalle.CollectionChanged += FixupDestajoTuberoDetalle;
    			}
    			if (_proyectoReporte != null)
    		{
    			_proyectoReporte.CollectionChanged -= FixupProyectoReporte;
    			_proyectoReporte.CollectionChanged += FixupProyectoReporte;
    			}
    			if (_pendiente != null)
    		{
    			_pendiente.CollectionChanged -= FixupPendiente;
    			_pendiente.CollectionChanged += FixupPendiente;
    			}
    			if (_proyectoPendiente != null)
    		{
    			_proyectoPendiente.CollectionChanged -= FixupProyectoPendiente;
    			_proyectoPendiente.CollectionChanged += FixupProyectoPendiente;
    			}
    			if (_peq != null)
    		{
    			_peq.CollectionChanged -= FixupPeq;
    			_peq.CollectionChanged += FixupPeq;
    			}
    			if (_proyectoPrograma != null)
    		{
    			_proyectoPrograma.CollectionChanged -= FixupProyectoPrograma;
    			_proyectoPrograma.CollectionChanged += FixupProyectoPrograma;
    			}
    			if (_spoolPendiente != null)
    		{
    			_spoolPendiente.CollectionChanged -= FixupSpoolPendiente;
    			_spoolPendiente.CollectionChanged += FixupSpoolPendiente;
    			}
    			if (_inspeccionVisualCampo != null)
    		{
    			_inspeccionVisualCampo.CollectionChanged -= FixupInspeccionVisualCampo;
    			_inspeccionVisualCampo.CollectionChanged += FixupInspeccionVisualCampo;
    			}
    			if (_reporteCampoPND != null)
    		{
    			_reporteCampoPND.CollectionChanged -= FixupReporteCampoPND;
    			_reporteCampoPND.CollectionChanged += FixupReporteCampoPND;
    			}
    			if (_reporteCampoTT != null)
    		{
    			_reporteCampoTT.CollectionChanged -= FixupReporteCampoTT;
    			_reporteCampoTT.CollectionChanged += FixupReporteCampoTT;
    			}
    			if (_requisicionCampo != null)
    		{
    			_requisicionCampo.CollectionChanged -= FixupRequisicionCampo;
    			_requisicionCampo.CollectionChanged += FixupRequisicionCampo;
    			}
    			if (_itemCode != null)
    		{
    			_itemCode.CollectionChanged -= FixupItemCode;
    			_itemCode.CollectionChanged += FixupItemCode;
    			}
    			if (_embarque != null)
    		{
    			_embarque.CollectionChanged -= FixupEmbarque;
    			_embarque.CollectionChanged += FixupEmbarque;
    			}
    			if (_requisicionSpool != null)
    		{
    			_requisicionSpool.CollectionChanged -= FixupRequisicionSpool;
    			_requisicionSpool.CollectionChanged += FixupRequisicionSpool;
    			}
    			if (_reporteSpoolPnd != null)
    		{
    			_reporteSpoolPnd.CollectionChanged -= FixupReporteSpoolPnd;
    			_reporteSpoolPnd.CollectionChanged += FixupReporteSpoolPnd;
    			}
    		}
    
    
        protected virtual void ClearNavigationProperties()
        {
            Cliente = null;
            Colada.Clear();
            Contacto = null;
            FabricanteProyecto.Clear();
            NumeroUnico.Clear();
            NumeroUnicoInventario.Clear();
            NumeroUnicoMovimiento.Clear();
            NumeroUnicoSegmento.Clear();
            Patio = null;
            ProveedorProyecto.Clear();
            ProyectoConfiguracion = null;
            ProyectoNomenclaturaSpool = null;
            Recepcion.Clear();
            Spool.Clear();
            TransportistaProyecto.Clear();
            UsuarioProyecto.Clear();
            WpsProyecto.Clear();
            Color = null;
            Corte.Clear();
            Despacho.Clear();
            OrdenTrabajo.Clear();
            ProyectoConsecutivo = null;
            InspeccionVisual.Clear();
            ReporteDimensional.Clear();
            ReportePnd.Clear();
            ReporteTt.Clear();
            Requisicion.Clear();
            RequisicionPintura.Clear();
            Estimacion.Clear();
            PinturaSpool.Clear();
            PinturaNumeroUnico.Clear();
            RequisicionNumeroUnico.Clear();
            NumeroUnicoCorte.Clear();
            CostoArmado.Clear();
            CostoProcesoRaiz.Clear();
            CostoProcesoRelleno.Clear();
            DestajoSoldadorDetalle.Clear();
            DestajoTuberoDetalle.Clear();
            ProyectoReporte.Clear();
            Pendiente.Clear();
            ProyectoPendiente.Clear();
            ProyectoDossier = null;
            Peq.Clear();
            ProyectoPrograma.Clear();
            SpoolPendiente.Clear();
            InspeccionVisualCampo.Clear();
            ReporteCampoPND.Clear();
            ReporteCampoTT.Clear();
            RequisicionCampo.Clear();
            ProyectoCamposRecepcion = null;
            ItemCode.Clear();
            Embarque.Clear();
            RequisicionSpool.Clear();
            ReporteSpoolPnd.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupCliente(Cliente previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Proyecto.Contains(this))
            {
                previousValue.Proyecto.Remove(this);
            }
    
            if (Cliente != null)
            {
                if (!Cliente.Proyecto.Contains(this))
                {
                    Cliente.Proyecto.Add(this);
                }
    
                ClienteID = Cliente.ClienteID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Cliente")
                    && (ChangeTracker.OriginalValues["Cliente"] == Cliente))
                {
                    ChangeTracker.OriginalValues.Remove("Cliente");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Cliente", previousValue);
                }
                if (Cliente != null && !Cliente.ChangeTracker.ChangeTrackingEnabled)
                {
                    Cliente.StartTracking();
                }
            }
        }
    
        private void FixupContacto(Contacto previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Proyecto.Contains(this))
            {
                previousValue.Proyecto.Remove(this);
            }
    
            if (Contacto != null)
            {
                if (!Contacto.Proyecto.Contains(this))
                {
                    Contacto.Proyecto.Add(this);
                }
    
                ContactoID = Contacto.ContactoID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Contacto")
                    && (ChangeTracker.OriginalValues["Contacto"] == Contacto))
                {
                    ChangeTracker.OriginalValues.Remove("Contacto");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Contacto", previousValue);
                }
                if (Contacto != null && !Contacto.ChangeTracker.ChangeTrackingEnabled)
                {
                    Contacto.StartTracking();
                }
            }
        }
    
        private void FixupPatio(Patio previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Proyecto.Contains(this))
            {
                previousValue.Proyecto.Remove(this);
            }
    
            if (Patio != null)
            {
                if (!Patio.Proyecto.Contains(this))
                {
                    Patio.Proyecto.Add(this);
                }
    
                PatioID = Patio.PatioID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Patio")
                    && (ChangeTracker.OriginalValues["Patio"] == Patio))
                {
                    ChangeTracker.OriginalValues.Remove("Patio");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Patio", previousValue);
                }
                if (Patio != null && !Patio.ChangeTracker.ChangeTrackingEnabled)
                {
                    Patio.StartTracking();
                }
            }
        }
    
        private void FixupProyectoConfiguracion(ProyectoConfiguracion previousValue)
        {
            // This is the principal end in an association that performs cascade deletes.
            // Update the event listener to refer to the new dependent.
            if (previousValue != null)
            {
                ChangeTracker.ObjectStateChanging -= previousValue.HandleCascadeDelete;
            }
    
            if (ProyectoConfiguracion != null)
            {
                ChangeTracker.ObjectStateChanging += ProyectoConfiguracion.HandleCascadeDelete;
            }
    
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && ReferenceEquals(previousValue.Proyecto, this))
            {
                previousValue.Proyecto = null;
            }
    
            if (ProyectoConfiguracion != null)
            {
                ProyectoConfiguracion.Proyecto = this;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ProyectoConfiguracion")
                    && (ChangeTracker.OriginalValues["ProyectoConfiguracion"] == ProyectoConfiguracion))
                {
                    ChangeTracker.OriginalValues.Remove("ProyectoConfiguracion");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ProyectoConfiguracion", previousValue);
                    // This is the principal end of an identifying association, so the dependent must be deleted when the relationship is removed.
                    // If the current state of the dependent is Added, the relationship can be changed without causing the dependent to be deleted.
                    if (previousValue != null && previousValue.ChangeTracker.State != ObjectState.Added)
                    {
                        previousValue.MarkAsDeleted();
                    }
                }
                if (ProyectoConfiguracion != null && !ProyectoConfiguracion.ChangeTracker.ChangeTrackingEnabled)
                {
                    ProyectoConfiguracion.StartTracking();
                }
            }
        }
    
        private void FixupProyectoNomenclaturaSpool(ProyectoNomenclaturaSpool previousValue)
        {
            // This is the principal end in an association that performs cascade deletes.
            // Update the event listener to refer to the new dependent.
            if (previousValue != null)
            {
                ChangeTracker.ObjectStateChanging -= previousValue.HandleCascadeDelete;
            }
    
            if (ProyectoNomenclaturaSpool != null)
            {
                ChangeTracker.ObjectStateChanging += ProyectoNomenclaturaSpool.HandleCascadeDelete;
            }
    
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && ReferenceEquals(previousValue.Proyecto, this))
            {
                previousValue.Proyecto = null;
            }
    
            if (ProyectoNomenclaturaSpool != null)
            {
                ProyectoNomenclaturaSpool.Proyecto = this;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ProyectoNomenclaturaSpool")
                    && (ChangeTracker.OriginalValues["ProyectoNomenclaturaSpool"] == ProyectoNomenclaturaSpool))
                {
                    ChangeTracker.OriginalValues.Remove("ProyectoNomenclaturaSpool");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ProyectoNomenclaturaSpool", previousValue);
                    // This is the principal end of an identifying association, so the dependent must be deleted when the relationship is removed.
                    // If the current state of the dependent is Added, the relationship can be changed without causing the dependent to be deleted.
                    if (previousValue != null && previousValue.ChangeTracker.State != ObjectState.Added)
                    {
                        previousValue.MarkAsDeleted();
                    }
                }
                if (ProyectoNomenclaturaSpool != null && !ProyectoNomenclaturaSpool.ChangeTracker.ChangeTrackingEnabled)
                {
                    ProyectoNomenclaturaSpool.StartTracking();
                }
            }
        }
    
        private void FixupColor(Color previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Proyecto.Contains(this))
            {
                previousValue.Proyecto.Remove(this);
            }
    
            if (Color != null)
            {
                if (!Color.Proyecto.Contains(this))
                {
                    Color.Proyecto.Add(this);
                }
    
                ColorID = Color.ColorID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Color")
                    && (ChangeTracker.OriginalValues["Color"] == Color))
                {
                    ChangeTracker.OriginalValues.Remove("Color");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Color", previousValue);
                }
                if (Color != null && !Color.ChangeTracker.ChangeTrackingEnabled)
                {
                    Color.StartTracking();
                }
            }
        }
    
        private void FixupProyectoConsecutivo(ProyectoConsecutivo previousValue)
        {
            // This is the principal end in an association that performs cascade deletes.
            // Update the event listener to refer to the new dependent.
            if (previousValue != null)
            {
                ChangeTracker.ObjectStateChanging -= previousValue.HandleCascadeDelete;
            }
    
            if (ProyectoConsecutivo != null)
            {
                ChangeTracker.ObjectStateChanging += ProyectoConsecutivo.HandleCascadeDelete;
            }
    
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && ReferenceEquals(previousValue.Proyecto, this))
            {
                previousValue.Proyecto = null;
            }
    
            if (ProyectoConsecutivo != null)
            {
                ProyectoConsecutivo.Proyecto = this;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ProyectoConsecutivo")
                    && (ChangeTracker.OriginalValues["ProyectoConsecutivo"] == ProyectoConsecutivo))
                {
                    ChangeTracker.OriginalValues.Remove("ProyectoConsecutivo");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ProyectoConsecutivo", previousValue);
                    // This is the principal end of an identifying association, so the dependent must be deleted when the relationship is removed.
                    // If the current state of the dependent is Added, the relationship can be changed without causing the dependent to be deleted.
                    if (previousValue != null && previousValue.ChangeTracker.State != ObjectState.Added)
                    {
                        previousValue.MarkAsDeleted();
                    }
                }
                if (ProyectoConsecutivo != null && !ProyectoConsecutivo.ChangeTracker.ChangeTrackingEnabled)
                {
                    ProyectoConsecutivo.StartTracking();
                }
            }
        }
    
        private void FixupProyectoDossier(ProyectoDossier previousValue)
        {
            // This is the principal end in an association that performs cascade deletes.
            // Update the event listener to refer to the new dependent.
            if (previousValue != null)
            {
                ChangeTracker.ObjectStateChanging -= previousValue.HandleCascadeDelete;
            }
    
            if (ProyectoDossier != null)
            {
                ChangeTracker.ObjectStateChanging += ProyectoDossier.HandleCascadeDelete;
            }
    
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && ReferenceEquals(previousValue.Proyecto, this))
            {
                previousValue.Proyecto = null;
            }
    
            if (ProyectoDossier != null)
            {
                ProyectoDossier.Proyecto = this;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ProyectoDossier")
                    && (ChangeTracker.OriginalValues["ProyectoDossier"] == ProyectoDossier))
                {
                    ChangeTracker.OriginalValues.Remove("ProyectoDossier");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ProyectoDossier", previousValue);
                    // This is the principal end of an identifying association, so the dependent must be deleted when the relationship is removed.
                    // If the current state of the dependent is Added, the relationship can be changed without causing the dependent to be deleted.
                    if (previousValue != null && previousValue.ChangeTracker.State != ObjectState.Added)
                    {
                        previousValue.MarkAsDeleted();
                    }
                }
                if (ProyectoDossier != null && !ProyectoDossier.ChangeTracker.ChangeTrackingEnabled)
                {
                    ProyectoDossier.StartTracking();
                }
            }
        }
    
        private void FixupProyectoCamposRecepcion(ProyectoCamposRecepcion previousValue)
        {
            // This is the principal end in an association that performs cascade deletes.
            // Update the event listener to refer to the new dependent.
            if (previousValue != null)
            {
                ChangeTracker.ObjectStateChanging -= previousValue.HandleCascadeDelete;
            }
    
            if (ProyectoCamposRecepcion != null)
            {
                ChangeTracker.ObjectStateChanging += ProyectoCamposRecepcion.HandleCascadeDelete;
            }
    
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && ReferenceEquals(previousValue.Proyecto, this))
            {
                previousValue.Proyecto = null;
            }
    
            if (ProyectoCamposRecepcion != null)
            {
                ProyectoCamposRecepcion.Proyecto = this;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ProyectoCamposRecepcion")
                    && (ChangeTracker.OriginalValues["ProyectoCamposRecepcion"] == ProyectoCamposRecepcion))
                {
                    ChangeTracker.OriginalValues.Remove("ProyectoCamposRecepcion");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ProyectoCamposRecepcion", previousValue);
                    // This is the principal end of an identifying association, so the dependent must be deleted when the relationship is removed.
                    // If the current state of the dependent is Added, the relationship can be changed without causing the dependent to be deleted.
                    if (previousValue != null && previousValue.ChangeTracker.State != ObjectState.Added)
                    {
                        previousValue.MarkAsDeleted();
                    }
                }
                if (ProyectoCamposRecepcion != null && !ProyectoCamposRecepcion.ChangeTracker.ChangeTrackingEnabled)
                {
                    ProyectoCamposRecepcion.StartTracking();
                }
            }
        }
    
        private void FixupColada(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Colada item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Colada", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Colada item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Colada", item);
                    }
                }
            }
        }
    
        private void FixupFabricanteProyecto(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FabricanteProyecto item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FabricanteProyecto", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FabricanteProyecto item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FabricanteProyecto", item);
                    }
                }
            }
        }
    
        private void FixupNumeroUnico(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (NumeroUnico item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("NumeroUnico", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (NumeroUnico item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("NumeroUnico", item);
                    }
                }
            }
        }
    
        private void FixupNumeroUnicoInventario(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (NumeroUnicoInventario item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("NumeroUnicoInventario", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (NumeroUnicoInventario item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("NumeroUnicoInventario", item);
                    }
                }
            }
        }
    
        private void FixupNumeroUnicoMovimiento(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (NumeroUnicoMovimiento item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("NumeroUnicoMovimiento", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (NumeroUnicoMovimiento item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("NumeroUnicoMovimiento", item);
                    }
                }
            }
        }
    
        private void FixupNumeroUnicoSegmento(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (NumeroUnicoSegmento item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("NumeroUnicoSegmento", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (NumeroUnicoSegmento item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("NumeroUnicoSegmento", item);
                    }
                }
            }
        }
    
        private void FixupProveedorProyecto(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ProveedorProyecto item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ProveedorProyecto", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ProveedorProyecto item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ProveedorProyecto", item);
                    }
                }
            }
        }
    
        private void FixupRecepcion(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Recepcion item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Recepcion", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Recepcion item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Recepcion", item);
                    }
                }
            }
        }
    
        private void FixupSpool(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Spool item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Spool", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Spool item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Spool", item);
                    }
                }
            }
        }
    
        private void FixupTransportistaProyecto(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (TransportistaProyecto item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("TransportistaProyecto", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TransportistaProyecto item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("TransportistaProyecto", item);
                    }
                }
            }
        }
    
        private void FixupUsuarioProyecto(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (UsuarioProyecto item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("UsuarioProyecto", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (UsuarioProyecto item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("UsuarioProyecto", item);
                    }
                }
            }
        }
    
        private void FixupWpsProyecto(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (WpsProyecto item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("WpsProyecto", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (WpsProyecto item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("WpsProyecto", item);
                    }
                }
            }
        }
    
        private void FixupCorte(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Corte item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Corte", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Corte item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Corte", item);
                    }
                }
            }
        }
    
        private void FixupDespacho(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Despacho item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Despacho", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Despacho item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Despacho", item);
                    }
                }
            }
        }
    
        private void FixupOrdenTrabajo(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (OrdenTrabajo item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("OrdenTrabajo", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (OrdenTrabajo item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("OrdenTrabajo", item);
                    }
                }
            }
        }
    
        private void FixupInspeccionVisual(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (InspeccionVisual item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("InspeccionVisual", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (InspeccionVisual item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("InspeccionVisual", item);
                    }
                }
            }
        }
    
        private void FixupReporteDimensional(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ReporteDimensional item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ReporteDimensional", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ReporteDimensional item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ReporteDimensional", item);
                    }
                }
            }
        }
    
        private void FixupReportePnd(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ReportePnd item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ReportePnd", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ReportePnd item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ReportePnd", item);
                    }
                }
            }
        }
    
        private void FixupReporteTt(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ReporteTt item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ReporteTt", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ReporteTt item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ReporteTt", item);
                    }
                }
            }
        }
    
        private void FixupRequisicion(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Requisicion item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Requisicion", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Requisicion item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Requisicion", item);
                    }
                }
            }
        }
    
        private void FixupRequisicionPintura(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RequisicionPintura item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RequisicionPintura", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RequisicionPintura item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RequisicionPintura", item);
                    }
                }
            }
        }
    
        private void FixupEstimacion(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Estimacion item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Estimacion", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Estimacion item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Estimacion", item);
                    }
                }
            }
        }
    
        private void FixupPinturaSpool(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (PinturaSpool item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("PinturaSpool", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PinturaSpool item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("PinturaSpool", item);
                    }
                }
            }
        }
    
        private void FixupPinturaNumeroUnico(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (PinturaNumeroUnico item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("PinturaNumeroUnico", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PinturaNumeroUnico item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("PinturaNumeroUnico", item);
                    }
                }
            }
        }
    
        private void FixupRequisicionNumeroUnico(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RequisicionNumeroUnico item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RequisicionNumeroUnico", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RequisicionNumeroUnico item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RequisicionNumeroUnico", item);
                    }
                }
            }
        }
    
        private void FixupNumeroUnicoCorte(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (NumeroUnicoCorte item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("NumeroUnicoCorte", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (NumeroUnicoCorte item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("NumeroUnicoCorte", item);
                    }
                }
            }
        }
    
        private void FixupCostoArmado(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CostoArmado item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CostoArmado", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CostoArmado item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CostoArmado", item);
                    }
                }
            }
        }
    
        private void FixupCostoProcesoRaiz(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CostoProcesoRaiz item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CostoProcesoRaiz", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CostoProcesoRaiz item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CostoProcesoRaiz", item);
                    }
                }
            }
        }
    
        private void FixupCostoProcesoRelleno(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CostoProcesoRelleno item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CostoProcesoRelleno", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CostoProcesoRelleno item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CostoProcesoRelleno", item);
                    }
                }
            }
        }
    
        private void FixupDestajoSoldadorDetalle(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (DestajoSoldadorDetalle item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("DestajoSoldadorDetalle", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (DestajoSoldadorDetalle item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("DestajoSoldadorDetalle", item);
                    }
                }
            }
        }
    
        private void FixupDestajoTuberoDetalle(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (DestajoTuberoDetalle item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("DestajoTuberoDetalle", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (DestajoTuberoDetalle item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("DestajoTuberoDetalle", item);
                    }
                }
            }
        }
    
        private void FixupProyectoReporte(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ProyectoReporte item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ProyectoReporte", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ProyectoReporte item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ProyectoReporte", item);
                    }
                }
            }
        }
    
        private void FixupPendiente(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Pendiente item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Pendiente", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Pendiente item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Pendiente", item);
                    }
                }
            }
        }
    
        private void FixupProyectoPendiente(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ProyectoPendiente item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ProyectoPendiente", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ProyectoPendiente item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ProyectoPendiente", item);
                    }
                }
            }
        }
    
        private void FixupPeq(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Peq item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Peq", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Peq item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Peq", item);
                    }
                }
            }
        }
    
        private void FixupProyectoPrograma(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ProyectoPrograma item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ProyectoPrograma", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ProyectoPrograma item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ProyectoPrograma", item);
                    }
                }
            }
        }
    
        private void FixupSpoolPendiente(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SpoolPendiente item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SpoolPendiente", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SpoolPendiente item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SpoolPendiente", item);
                    }
                }
            }
        }
    
        private void FixupInspeccionVisualCampo(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (InspeccionVisualCampo item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("InspeccionVisualCampo", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (InspeccionVisualCampo item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("InspeccionVisualCampo", item);
                    }
                }
            }
        }
    
        private void FixupReporteCampoPND(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ReporteCampoPND item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ReporteCampoPND", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ReporteCampoPND item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ReporteCampoPND", item);
                    }
                }
            }
        }
    
        private void FixupReporteCampoTT(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ReporteCampoTT item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ReporteCampoTT", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ReporteCampoTT item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ReporteCampoTT", item);
                    }
                }
            }
        }
    
        private void FixupRequisicionCampo(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RequisicionCampo item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RequisicionCampo", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RequisicionCampo item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RequisicionCampo", item);
                    }
                }
            }
        }
    
        private void FixupItemCode(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ItemCode item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ItemCode", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ItemCode item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ItemCode", item);
                    }
                }
            }
        }
    
        private void FixupEmbarque(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Embarque item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Embarque", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Embarque item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Embarque", item);
                    }
                }
            }
        }
    
        private void FixupRequisicionSpool(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RequisicionSpool item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RequisicionSpool", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RequisicionSpool item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RequisicionSpool", item);
                    }
                }
            }
        }
    
        private void FixupReporteSpoolPnd(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ReporteSpoolPnd item in e.NewItems)
                {
                    item.Proyecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ReporteSpoolPnd", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ReporteSpoolPnd item in e.OldItems)
                {
                    if (ReferenceEquals(item.Proyecto, this))
                    {
                        item.Proyecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ReporteSpoolPnd", item);
                    }
                }
            }
        }

        #endregion

    }
}
