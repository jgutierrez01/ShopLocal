//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SAM.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Defecto))]
    [KnownType(typeof(JuntaCampoReportePND))]
    [Serializable]
    public partial class JuntaCampoReportePNDCuadrante: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int JuntaCampoReportePNDCuadranteID
        {
            get { return _juntaCampoReportePNDCuadranteID; }
            set
            {
                if (_juntaCampoReportePNDCuadranteID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'JuntaCampoReportePNDCuadranteID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _juntaCampoReportePNDCuadranteID = value;
                    OnPropertyChanged("JuntaCampoReportePNDCuadranteID");
                }
            }
        }
        private int _juntaCampoReportePNDCuadranteID;
    
        [DataMember]
        public int JuntaCampoReportePNDID
        {
            get { return _juntaCampoReportePNDID; }
            set
            {
                if (_juntaCampoReportePNDID != value)
                {
                    ChangeTracker.RecordOriginalValue("JuntaCampoReportePNDID", _juntaCampoReportePNDID);
                    if (!IsDeserializing)
                    {
                        if (JuntaCampoReportePND != null && JuntaCampoReportePND.JuntaCampoReportePNDID != value)
                        {
                            JuntaCampoReportePND = null;
                        }
                    }
                    _juntaCampoReportePNDID = value;
                    OnPropertyChanged("JuntaCampoReportePNDID");
                }
            }
        }
        private int _juntaCampoReportePNDID;
    
        [DataMember]
        public string Cuadrante
        {
            get { return _cuadrante; }
            set
            {
                if (_cuadrante != value)
                {
                    _cuadrante = value;
                    OnPropertyChanged("Cuadrante");
                }
            }
        }
        private string _cuadrante;
    
        [DataMember]
        public string Placa
        {
            get { return _placa; }
            set
            {
                if (_placa != value)
                {
                    _placa = value;
                    OnPropertyChanged("Placa");
                }
            }
        }
        private string _placa;
    
        [DataMember]
        public Nullable<int> DefectoID
        {
            get { return _defectoID; }
            set
            {
                if (_defectoID != value)
                {
                    ChangeTracker.RecordOriginalValue("DefectoID", _defectoID);
                    if (!IsDeserializing)
                    {
                        if (Defecto != null && Defecto.DefectoID != value)
                        {
                            Defecto = null;
                        }
                    }
                    _defectoID = value;
                    OnPropertyChanged("DefectoID");
                }
            }
        }
        private Nullable<int> _defectoID;
    
        [DataMember]
        public Nullable<System.Guid> UsuarioModifica
        {
            get { return _usuarioModifica; }
            set
            {
                if (_usuarioModifica != value)
                {
                    _usuarioModifica = value;
                    OnPropertyChanged("UsuarioModifica");
                }
            }
        }
        private Nullable<System.Guid> _usuarioModifica;
    
        [DataMember]
        public Nullable<System.DateTime> FechaModificacion
        {
            get { return _fechaModificacion; }
            set
            {
                if (_fechaModificacion != value)
                {
                    _fechaModificacion = value;
                    OnPropertyChanged("FechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _fechaModificacion;
    
        [DataMember]
        public byte[] VersionRegistro
        {
            get { return _versionRegistro; }
            set
            {
                if (_versionRegistro != value)
                {
                    ChangeTracker.RecordOriginalValue("VersionRegistro", _versionRegistro);
                    _versionRegistro = value;
                    OnPropertyChanged("VersionRegistro");
                }
            }
        }
        private byte[] _versionRegistro;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public Defecto Defecto
        {
            get { return _defecto; }
            set
            {
                if (!ReferenceEquals(_defecto, value))
                {
                    var previousValue = _defecto;
                    _defecto = value;
                    FixupDefecto(previousValue);
                    OnNavigationPropertyChanged("Defecto");
                }
            }
        }
        private Defecto _defecto;
    
        [DataMember]
        public JuntaCampoReportePND JuntaCampoReportePND
        {
            get { return _juntaCampoReportePND; }
            set
            {
                if (!ReferenceEquals(_juntaCampoReportePND, value))
                {
                    var previousValue = _juntaCampoReportePND;
                    _juntaCampoReportePND = value;
                    FixupJuntaCampoReportePND(previousValue);
                    OnNavigationPropertyChanged("JuntaCampoReportePND");
                }
            }
        }
        private JuntaCampoReportePND _juntaCampoReportePND;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
    	public void OnDeserializedMethod(StreamingContext context)
    	{
    		IsDeserializing = false;
    		ChangeTracker.ChangeTrackingEnabled = true;
    		}
    
    
        protected virtual void ClearNavigationProperties()
        {
            Defecto = null;
            JuntaCampoReportePND = null;
        }

        #endregion

        #region Association Fixup
    
        private void FixupDefecto(Defecto previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JuntaCampoReportePNDCuadrante.Contains(this))
            {
                previousValue.JuntaCampoReportePNDCuadrante.Remove(this);
            }
    
            if (Defecto != null)
            {
                if (!Defecto.JuntaCampoReportePNDCuadrante.Contains(this))
                {
                    Defecto.JuntaCampoReportePNDCuadrante.Add(this);
                }
    
                DefectoID = Defecto.DefectoID;
            }
            else if (!skipKeys)
            {
                DefectoID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Defecto")
                    && (ChangeTracker.OriginalValues["Defecto"] == Defecto))
                {
                    ChangeTracker.OriginalValues.Remove("Defecto");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Defecto", previousValue);
                }
                if (Defecto != null && !Defecto.ChangeTracker.ChangeTrackingEnabled)
                {
                    Defecto.StartTracking();
                }
            }
        }
    
        private void FixupJuntaCampoReportePND(JuntaCampoReportePND previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JuntaCampoReportePNDCuadrante.Contains(this))
            {
                previousValue.JuntaCampoReportePNDCuadrante.Remove(this);
            }
    
            if (JuntaCampoReportePND != null)
            {
                if (!JuntaCampoReportePND.JuntaCampoReportePNDCuadrante.Contains(this))
                {
                    JuntaCampoReportePND.JuntaCampoReportePNDCuadrante.Add(this);
                }
    
                JuntaCampoReportePNDID = JuntaCampoReportePND.JuntaCampoReportePNDID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("JuntaCampoReportePND")
                    && (ChangeTracker.OriginalValues["JuntaCampoReportePND"] == JuntaCampoReportePND))
                {
                    ChangeTracker.OriginalValues.Remove("JuntaCampoReportePND");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("JuntaCampoReportePND", previousValue);
                }
                if (JuntaCampoReportePND != null && !JuntaCampoReportePND.ChangeTracker.ChangeTrackingEnabled)
                {
                    JuntaCampoReportePND.StartTracking();
                }
            }
        }

        #endregion

    }
}
