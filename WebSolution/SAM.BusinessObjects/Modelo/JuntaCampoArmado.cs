//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SAM.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(JuntaCampo))]
    [KnownType(typeof(NumeroUnico))]
    [KnownType(typeof(Spool))]
    [KnownType(typeof(Tubero))]
    [Serializable]
    public partial class JuntaCampoArmado: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int JuntaCampoArmadoID
        {
            get { return _juntaCampoArmadoID; }
            set
            {
                if (_juntaCampoArmadoID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'JuntaCampoArmadoID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _juntaCampoArmadoID = value;
                    OnPropertyChanged("JuntaCampoArmadoID");
                }
            }
        }
        private int _juntaCampoArmadoID;
    
        [DataMember]
        public int JuntaCampoID
        {
            get { return _juntaCampoID; }
            set
            {
                if (_juntaCampoID != value)
                {
                    ChangeTracker.RecordOriginalValue("JuntaCampoID", _juntaCampoID);
                    if (!IsDeserializing)
                    {
                        if (JuntaCampo != null && JuntaCampo.JuntaCampoID != value)
                        {
                            JuntaCampo = null;
                        }
                    }
                    _juntaCampoID = value;
                    OnPropertyChanged("JuntaCampoID");
                }
            }
        }
        private int _juntaCampoID;
    
        [DataMember]
        public int Spool1ID
        {
            get { return _spool1ID; }
            set
            {
                if (_spool1ID != value)
                {
                    ChangeTracker.RecordOriginalValue("Spool1ID", _spool1ID);
                    if (!IsDeserializing)
                    {
                        if (Spool != null && Spool.SpoolID != value)
                        {
                            Spool = null;
                        }
                    }
                    _spool1ID = value;
                    OnPropertyChanged("Spool1ID");
                }
            }
        }
        private int _spool1ID;
    
        [DataMember]
        public string EtiquetaMaterial1
        {
            get { return _etiquetaMaterial1; }
            set
            {
                if (_etiquetaMaterial1 != value)
                {
                    _etiquetaMaterial1 = value;
                    OnPropertyChanged("EtiquetaMaterial1");
                }
            }
        }
        private string _etiquetaMaterial1;
    
        [DataMember]
        public int NumeroUnico1ID
        {
            get { return _numeroUnico1ID; }
            set
            {
                if (_numeroUnico1ID != value)
                {
                    ChangeTracker.RecordOriginalValue("NumeroUnico1ID", _numeroUnico1ID);
                    if (!IsDeserializing)
                    {
                        if (NumeroUnico != null && NumeroUnico.NumeroUnicoID != value)
                        {
                            NumeroUnico = null;
                        }
                    }
                    _numeroUnico1ID = value;
                    OnPropertyChanged("NumeroUnico1ID");
                }
            }
        }
        private int _numeroUnico1ID;
    
        [DataMember]
        public int Spool2ID
        {
            get { return _spool2ID; }
            set
            {
                if (_spool2ID != value)
                {
                    ChangeTracker.RecordOriginalValue("Spool2ID", _spool2ID);
                    if (!IsDeserializing)
                    {
                        if (Spool1 != null && Spool1.SpoolID != value)
                        {
                            Spool1 = null;
                        }
                    }
                    _spool2ID = value;
                    OnPropertyChanged("Spool2ID");
                }
            }
        }
        private int _spool2ID;
    
        [DataMember]
        public string EtiquetaMaterial2
        {
            get { return _etiquetaMaterial2; }
            set
            {
                if (_etiquetaMaterial2 != value)
                {
                    _etiquetaMaterial2 = value;
                    OnPropertyChanged("EtiquetaMaterial2");
                }
            }
        }
        private string _etiquetaMaterial2;
    
        [DataMember]
        public int NumeroUnico2ID
        {
            get { return _numeroUnico2ID; }
            set
            {
                if (_numeroUnico2ID != value)
                {
                    ChangeTracker.RecordOriginalValue("NumeroUnico2ID", _numeroUnico2ID);
                    if (!IsDeserializing)
                    {
                        if (NumeroUnico1 != null && NumeroUnico1.NumeroUnicoID != value)
                        {
                            NumeroUnico1 = null;
                        }
                    }
                    _numeroUnico2ID = value;
                    OnPropertyChanged("NumeroUnico2ID");
                }
            }
        }
        private int _numeroUnico2ID;
    
        [DataMember]
        public int TuberoID
        {
            get { return _tuberoID; }
            set
            {
                if (_tuberoID != value)
                {
                    ChangeTracker.RecordOriginalValue("TuberoID", _tuberoID);
                    if (!IsDeserializing)
                    {
                        if (Tubero != null && Tubero.TuberoID != value)
                        {
                            Tubero = null;
                        }
                    }
                    _tuberoID = value;
                    OnPropertyChanged("TuberoID");
                }
            }
        }
        private int _tuberoID;
    
        [DataMember]
        public System.DateTime FechaArmado
        {
            get { return _fechaArmado; }
            set
            {
                if (_fechaArmado != value)
                {
                    _fechaArmado = value;
                    OnPropertyChanged("FechaArmado");
                }
            }
        }
        private System.DateTime _fechaArmado;
    
        [DataMember]
        public System.DateTime FechaReporte
        {
            get { return _fechaReporte; }
            set
            {
                if (_fechaReporte != value)
                {
                    _fechaReporte = value;
                    OnPropertyChanged("FechaReporte");
                }
            }
        }
        private System.DateTime _fechaReporte;
    
        [DataMember]
        public string Observaciones
        {
            get { return _observaciones; }
            set
            {
                if (_observaciones != value)
                {
                    _observaciones = value;
                    OnPropertyChanged("Observaciones");
                }
            }
        }
        private string _observaciones;
    
        [DataMember]
        public Nullable<System.Guid> UsuarioModifica
        {
            get { return _usuarioModifica; }
            set
            {
                if (_usuarioModifica != value)
                {
                    _usuarioModifica = value;
                    OnPropertyChanged("UsuarioModifica");
                }
            }
        }
        private Nullable<System.Guid> _usuarioModifica;
    
        [DataMember]
        public Nullable<System.DateTime> FechaModificacion
        {
            get { return _fechaModificacion; }
            set
            {
                if (_fechaModificacion != value)
                {
                    _fechaModificacion = value;
                    OnPropertyChanged("FechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _fechaModificacion;
    
        [DataMember]
        public byte[] VersionRegistro
        {
            get { return _versionRegistro; }
            set
            {
                if (_versionRegistro != value)
                {
                    _versionRegistro = value;
                    OnPropertyChanged("VersionRegistro");
                }
            }
        }
        private byte[] _versionRegistro;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<JuntaCampo> JuntasDeCampo
        {
            get
            {
                if (_juntasDeCampo == null)
                {
                    _juntasDeCampo = new TrackableCollection<JuntaCampo>();
                    _juntasDeCampo.CollectionChanged += FixupJuntasDeCampo;
                }
                return _juntasDeCampo;
            }
            set
            {
                if (!ReferenceEquals(_juntasDeCampo, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_juntasDeCampo != null)
                    {
                        _juntasDeCampo.CollectionChanged -= FixupJuntasDeCampo;
                    }
                    _juntasDeCampo = value;
                    if (_juntasDeCampo != null)
                    {
                        _juntasDeCampo.CollectionChanged += FixupJuntasDeCampo;
                    }
                    OnNavigationPropertyChanged("JuntasDeCampo");
                }
            }
        }
        private TrackableCollection<JuntaCampo> _juntasDeCampo;
    
        [DataMember]
        public JuntaCampo JuntaCampo
        {
            get { return _juntaCampo; }
            set
            {
                if (!ReferenceEquals(_juntaCampo, value))
                {
                    var previousValue = _juntaCampo;
                    _juntaCampo = value;
                    FixupJuntaCampo(previousValue);
                    OnNavigationPropertyChanged("JuntaCampo");
                }
            }
        }
        private JuntaCampo _juntaCampo;
    
        [DataMember]
        public NumeroUnico NumeroUnico
        {
            get { return _numeroUnico; }
            set
            {
                if (!ReferenceEquals(_numeroUnico, value))
                {
                    var previousValue = _numeroUnico;
                    _numeroUnico = value;
                    FixupNumeroUnico(previousValue);
                    OnNavigationPropertyChanged("NumeroUnico");
                }
            }
        }
        private NumeroUnico _numeroUnico;
    
        [DataMember]
        public NumeroUnico NumeroUnico1
        {
            get { return _numeroUnico1; }
            set
            {
                if (!ReferenceEquals(_numeroUnico1, value))
                {
                    var previousValue = _numeroUnico1;
                    _numeroUnico1 = value;
                    FixupNumeroUnico1(previousValue);
                    OnNavigationPropertyChanged("NumeroUnico1");
                }
            }
        }
        private NumeroUnico _numeroUnico1;
    
        [DataMember]
        public Spool Spool
        {
            get { return _spool; }
            set
            {
                if (!ReferenceEquals(_spool, value))
                {
                    var previousValue = _spool;
                    _spool = value;
                    FixupSpool(previousValue);
                    OnNavigationPropertyChanged("Spool");
                }
            }
        }
        private Spool _spool;
    
        [DataMember]
        public Spool Spool1
        {
            get { return _spool1; }
            set
            {
                if (!ReferenceEquals(_spool1, value))
                {
                    var previousValue = _spool1;
                    _spool1 = value;
                    FixupSpool1(previousValue);
                    OnNavigationPropertyChanged("Spool1");
                }
            }
        }
        private Spool _spool1;
    
        [DataMember]
        public Tubero Tubero
        {
            get { return _tubero; }
            set
            {
                if (!ReferenceEquals(_tubero, value))
                {
                    var previousValue = _tubero;
                    _tubero = value;
                    FixupTubero(previousValue);
                    OnNavigationPropertyChanged("Tubero");
                }
            }
        }
        private Tubero _tubero;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
    	public void OnDeserializedMethod(StreamingContext context)
    	{
    		IsDeserializing = false;
    		ChangeTracker.ChangeTrackingEnabled = true;
    			if (_juntasDeCampo != null)
    		{
    			_juntasDeCampo.CollectionChanged -= FixupJuntasDeCampo;
    			_juntasDeCampo.CollectionChanged += FixupJuntasDeCampo;
    			}
    		}
    
    
        protected virtual void ClearNavigationProperties()
        {
            JuntasDeCampo.Clear();
            JuntaCampo = null;
            NumeroUnico = null;
            NumeroUnico1 = null;
            Spool = null;
            Spool1 = null;
            Tubero = null;
        }

        #endregion

        #region Association Fixup
    
        private void FixupJuntaCampo(JuntaCampo previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JuntaCampoArmado1.Contains(this))
            {
                previousValue.JuntaCampoArmado1.Remove(this);
            }
    
            if (JuntaCampo != null)
            {
                if (!JuntaCampo.JuntaCampoArmado1.Contains(this))
                {
                    JuntaCampo.JuntaCampoArmado1.Add(this);
                }
    
                JuntaCampoID = JuntaCampo.JuntaCampoID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("JuntaCampo")
                    && (ChangeTracker.OriginalValues["JuntaCampo"] == JuntaCampo))
                {
                    ChangeTracker.OriginalValues.Remove("JuntaCampo");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("JuntaCampo", previousValue);
                }
                if (JuntaCampo != null && !JuntaCampo.ChangeTracker.ChangeTrackingEnabled)
                {
                    JuntaCampo.StartTracking();
                }
            }
        }
    
        private void FixupNumeroUnico(NumeroUnico previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JuntaCampoArmado.Contains(this))
            {
                previousValue.JuntaCampoArmado.Remove(this);
            }
    
            if (NumeroUnico != null)
            {
                if (!NumeroUnico.JuntaCampoArmado.Contains(this))
                {
                    NumeroUnico.JuntaCampoArmado.Add(this);
                }
    
                NumeroUnico1ID = NumeroUnico.NumeroUnicoID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("NumeroUnico")
                    && (ChangeTracker.OriginalValues["NumeroUnico"] == NumeroUnico))
                {
                    ChangeTracker.OriginalValues.Remove("NumeroUnico");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("NumeroUnico", previousValue);
                }
                if (NumeroUnico != null && !NumeroUnico.ChangeTracker.ChangeTrackingEnabled)
                {
                    NumeroUnico.StartTracking();
                }
            }
        }
    
        private void FixupNumeroUnico1(NumeroUnico previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JuntaCampoArmado1.Contains(this))
            {
                previousValue.JuntaCampoArmado1.Remove(this);
            }
    
            if (NumeroUnico1 != null)
            {
                if (!NumeroUnico1.JuntaCampoArmado1.Contains(this))
                {
                    NumeroUnico1.JuntaCampoArmado1.Add(this);
                }
    
                NumeroUnico2ID = NumeroUnico1.NumeroUnicoID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("NumeroUnico1")
                    && (ChangeTracker.OriginalValues["NumeroUnico1"] == NumeroUnico1))
                {
                    ChangeTracker.OriginalValues.Remove("NumeroUnico1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("NumeroUnico1", previousValue);
                }
                if (NumeroUnico1 != null && !NumeroUnico1.ChangeTracker.ChangeTrackingEnabled)
                {
                    NumeroUnico1.StartTracking();
                }
            }
        }
    
        private void FixupSpool(Spool previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JuntaCampoArmado.Contains(this))
            {
                previousValue.JuntaCampoArmado.Remove(this);
            }
    
            if (Spool != null)
            {
                if (!Spool.JuntaCampoArmado.Contains(this))
                {
                    Spool.JuntaCampoArmado.Add(this);
                }
    
                Spool1ID = Spool.SpoolID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Spool")
                    && (ChangeTracker.OriginalValues["Spool"] == Spool))
                {
                    ChangeTracker.OriginalValues.Remove("Spool");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Spool", previousValue);
                }
                if (Spool != null && !Spool.ChangeTracker.ChangeTrackingEnabled)
                {
                    Spool.StartTracking();
                }
            }
        }
    
        private void FixupSpool1(Spool previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JuntaCampoArmado1.Contains(this))
            {
                previousValue.JuntaCampoArmado1.Remove(this);
            }
    
            if (Spool1 != null)
            {
                if (!Spool1.JuntaCampoArmado1.Contains(this))
                {
                    Spool1.JuntaCampoArmado1.Add(this);
                }
    
                Spool2ID = Spool1.SpoolID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Spool1")
                    && (ChangeTracker.OriginalValues["Spool1"] == Spool1))
                {
                    ChangeTracker.OriginalValues.Remove("Spool1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Spool1", previousValue);
                }
                if (Spool1 != null && !Spool1.ChangeTracker.ChangeTrackingEnabled)
                {
                    Spool1.StartTracking();
                }
            }
        }
    
        private void FixupTubero(Tubero previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JuntaCampoArmado.Contains(this))
            {
                previousValue.JuntaCampoArmado.Remove(this);
            }
    
            if (Tubero != null)
            {
                if (!Tubero.JuntaCampoArmado.Contains(this))
                {
                    Tubero.JuntaCampoArmado.Add(this);
                }
    
                TuberoID = Tubero.TuberoID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Tubero")
                    && (ChangeTracker.OriginalValues["Tubero"] == Tubero))
                {
                    ChangeTracker.OriginalValues.Remove("Tubero");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Tubero", previousValue);
                }
                if (Tubero != null && !Tubero.ChangeTracker.ChangeTrackingEnabled)
                {
                    Tubero.StartTracking();
                }
            }
        }
    
        private void FixupJuntasDeCampo(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (JuntaCampo item in e.NewItems)
                {
                    item.JuntaCampoArmado = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("JuntasDeCampo", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (JuntaCampo item in e.OldItems)
                {
                    if (ReferenceEquals(item.JuntaCampoArmado, this))
                    {
                        item.JuntaCampoArmado = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("JuntasDeCampo", item);
                    }
                }
            }
        }

        #endregion

    }
}
