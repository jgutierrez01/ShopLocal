//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SAM.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(CorteSpool))]
    [KnownType(typeof(NumeroUnico))]
    [KnownType(typeof(CorteSpoolPendiente))]
    [Serializable]
    public partial class TipoCorte: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int TipoCorteID
        {
            get { return _tipoCorteID; }
            set
            {
                if (_tipoCorteID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'TipoCorteID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _tipoCorteID = value;
                    OnPropertyChanged("TipoCorteID");
                }
            }
        }
        private int _tipoCorteID;
    
        [DataMember]
        public string Codigo
        {
            get { return _codigo; }
            set
            {
                if (_codigo != value)
                {
                    _codigo = value;
                    OnPropertyChanged("Codigo");
                }
            }
        }
        private string _codigo;
    
        [DataMember]
        public string Nombre
        {
            get { return _nombre; }
            set
            {
                if (_nombre != value)
                {
                    _nombre = value;
                    OnPropertyChanged("Nombre");
                }
            }
        }
        private string _nombre;
    
        [DataMember]
        public string Descripcion
        {
            get { return _descripcion; }
            set
            {
                if (_descripcion != value)
                {
                    _descripcion = value;
                    OnPropertyChanged("Descripcion");
                }
            }
        }
        private string _descripcion;
    
        [DataMember]
        public Nullable<System.Guid> UsuarioModifica
        {
            get { return _usuarioModifica; }
            set
            {
                if (_usuarioModifica != value)
                {
                    _usuarioModifica = value;
                    OnPropertyChanged("UsuarioModifica");
                }
            }
        }
        private Nullable<System.Guid> _usuarioModifica;
    
        [DataMember]
        public Nullable<System.DateTime> FechaModificacion
        {
            get { return _fechaModificacion; }
            set
            {
                if (_fechaModificacion != value)
                {
                    _fechaModificacion = value;
                    OnPropertyChanged("FechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _fechaModificacion;
    
        [DataMember]
        public byte[] VersionRegistro
        {
            get { return _versionRegistro; }
            set
            {
                if (_versionRegistro != value)
                {
                    ChangeTracker.RecordOriginalValue("VersionRegistro", _versionRegistro);
                    _versionRegistro = value;
                    OnPropertyChanged("VersionRegistro");
                }
            }
        }
        private byte[] _versionRegistro;
    
        [DataMember]
        public bool VerificadoPorCalidad
        {
            get { return _verificadoPorCalidad; }
            set
            {
                if (_verificadoPorCalidad != value)
                {
                    _verificadoPorCalidad = value;
                    OnPropertyChanged("VerificadoPorCalidad");
                }
            }
        }
        private bool _verificadoPorCalidad;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<CorteSpool> CorteSpool
        {
            get
            {
                if (_corteSpool == null)
                {
                    _corteSpool = new TrackableCollection<CorteSpool>();
                    _corteSpool.CollectionChanged += FixupCorteSpool;
                }
                return _corteSpool;
            }
            set
            {
                if (!ReferenceEquals(_corteSpool, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_corteSpool != null)
                    {
                        _corteSpool.CollectionChanged -= FixupCorteSpool;
                    }
                    _corteSpool = value;
                    if (_corteSpool != null)
                    {
                        _corteSpool.CollectionChanged += FixupCorteSpool;
                    }
                    OnNavigationPropertyChanged("CorteSpool");
                }
            }
        }
        private TrackableCollection<CorteSpool> _corteSpool;
    
        [DataMember]
        public TrackableCollection<CorteSpool> CorteSpool1
        {
            get
            {
                if (_corteSpool1 == null)
                {
                    _corteSpool1 = new TrackableCollection<CorteSpool>();
                    _corteSpool1.CollectionChanged += FixupCorteSpool1;
                }
                return _corteSpool1;
            }
            set
            {
                if (!ReferenceEquals(_corteSpool1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_corteSpool1 != null)
                    {
                        _corteSpool1.CollectionChanged -= FixupCorteSpool1;
                    }
                    _corteSpool1 = value;
                    if (_corteSpool1 != null)
                    {
                        _corteSpool1.CollectionChanged += FixupCorteSpool1;
                    }
                    OnNavigationPropertyChanged("CorteSpool1");
                }
            }
        }
        private TrackableCollection<CorteSpool> _corteSpool1;
    
        [DataMember]
        public TrackableCollection<NumeroUnico> NumeroUnico
        {
            get
            {
                if (_numeroUnico == null)
                {
                    _numeroUnico = new TrackableCollection<NumeroUnico>();
                    _numeroUnico.CollectionChanged += FixupNumeroUnico;
                }
                return _numeroUnico;
            }
            set
            {
                if (!ReferenceEquals(_numeroUnico, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_numeroUnico != null)
                    {
                        _numeroUnico.CollectionChanged -= FixupNumeroUnico;
                    }
                    _numeroUnico = value;
                    if (_numeroUnico != null)
                    {
                        _numeroUnico.CollectionChanged += FixupNumeroUnico;
                    }
                    OnNavigationPropertyChanged("NumeroUnico");
                }
            }
        }
        private TrackableCollection<NumeroUnico> _numeroUnico;
    
        [DataMember]
        public TrackableCollection<NumeroUnico> NumeroUnico1
        {
            get
            {
                if (_numeroUnico1 == null)
                {
                    _numeroUnico1 = new TrackableCollection<NumeroUnico>();
                    _numeroUnico1.CollectionChanged += FixupNumeroUnico1;
                }
                return _numeroUnico1;
            }
            set
            {
                if (!ReferenceEquals(_numeroUnico1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_numeroUnico1 != null)
                    {
                        _numeroUnico1.CollectionChanged -= FixupNumeroUnico1;
                    }
                    _numeroUnico1 = value;
                    if (_numeroUnico1 != null)
                    {
                        _numeroUnico1.CollectionChanged += FixupNumeroUnico1;
                    }
                    OnNavigationPropertyChanged("NumeroUnico1");
                }
            }
        }
        private TrackableCollection<NumeroUnico> _numeroUnico1;
    
        [DataMember]
        public TrackableCollection<CorteSpoolPendiente> CorteSpoolPendiente
        {
            get
            {
                if (_corteSpoolPendiente == null)
                {
                    _corteSpoolPendiente = new TrackableCollection<CorteSpoolPendiente>();
                    _corteSpoolPendiente.CollectionChanged += FixupCorteSpoolPendiente;
                }
                return _corteSpoolPendiente;
            }
            set
            {
                if (!ReferenceEquals(_corteSpoolPendiente, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_corteSpoolPendiente != null)
                    {
                        _corteSpoolPendiente.CollectionChanged -= FixupCorteSpoolPendiente;
                    }
                    _corteSpoolPendiente = value;
                    if (_corteSpoolPendiente != null)
                    {
                        _corteSpoolPendiente.CollectionChanged += FixupCorteSpoolPendiente;
                    }
                    OnNavigationPropertyChanged("CorteSpoolPendiente");
                }
            }
        }
        private TrackableCollection<CorteSpoolPendiente> _corteSpoolPendiente;
    
        [DataMember]
        public TrackableCollection<CorteSpoolPendiente> CorteSpoolPendiente1
        {
            get
            {
                if (_corteSpoolPendiente1 == null)
                {
                    _corteSpoolPendiente1 = new TrackableCollection<CorteSpoolPendiente>();
                    _corteSpoolPendiente1.CollectionChanged += FixupCorteSpoolPendiente1;
                }
                return _corteSpoolPendiente1;
            }
            set
            {
                if (!ReferenceEquals(_corteSpoolPendiente1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_corteSpoolPendiente1 != null)
                    {
                        _corteSpoolPendiente1.CollectionChanged -= FixupCorteSpoolPendiente1;
                    }
                    _corteSpoolPendiente1 = value;
                    if (_corteSpoolPendiente1 != null)
                    {
                        _corteSpoolPendiente1.CollectionChanged += FixupCorteSpoolPendiente1;
                    }
                    OnNavigationPropertyChanged("CorteSpoolPendiente1");
                }
            }
        }
        private TrackableCollection<CorteSpoolPendiente> _corteSpoolPendiente1;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
    	public void OnDeserializedMethod(StreamingContext context)
    	{
    		IsDeserializing = false;
    		ChangeTracker.ChangeTrackingEnabled = true;
    			if (_corteSpool != null)
    		{
    			_corteSpool.CollectionChanged -= FixupCorteSpool;
    			_corteSpool.CollectionChanged += FixupCorteSpool;
    			}
    			if (_corteSpool1 != null)
    		{
    			_corteSpool1.CollectionChanged -= FixupCorteSpool1;
    			_corteSpool1.CollectionChanged += FixupCorteSpool1;
    			}
    			if (_numeroUnico != null)
    		{
    			_numeroUnico.CollectionChanged -= FixupNumeroUnico;
    			_numeroUnico.CollectionChanged += FixupNumeroUnico;
    			}
    			if (_numeroUnico1 != null)
    		{
    			_numeroUnico1.CollectionChanged -= FixupNumeroUnico1;
    			_numeroUnico1.CollectionChanged += FixupNumeroUnico1;
    			}
    			if (_corteSpoolPendiente != null)
    		{
    			_corteSpoolPendiente.CollectionChanged -= FixupCorteSpoolPendiente;
    			_corteSpoolPendiente.CollectionChanged += FixupCorteSpoolPendiente;
    			}
    			if (_corteSpoolPendiente1 != null)
    		{
    			_corteSpoolPendiente1.CollectionChanged -= FixupCorteSpoolPendiente1;
    			_corteSpoolPendiente1.CollectionChanged += FixupCorteSpoolPendiente1;
    			}
    		}
    
    
        protected virtual void ClearNavigationProperties()
        {
            CorteSpool.Clear();
            CorteSpool1.Clear();
            NumeroUnico.Clear();
            NumeroUnico1.Clear();
            CorteSpoolPendiente.Clear();
            CorteSpoolPendiente1.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupCorteSpool(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CorteSpool item in e.NewItems)
                {
                    item.TipoCorte = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CorteSpool", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CorteSpool item in e.OldItems)
                {
                    if (ReferenceEquals(item.TipoCorte, this))
                    {
                        item.TipoCorte = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CorteSpool", item);
                    }
                }
            }
        }
    
        private void FixupCorteSpool1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CorteSpool item in e.NewItems)
                {
                    item.TipoCorte1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CorteSpool1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CorteSpool item in e.OldItems)
                {
                    if (ReferenceEquals(item.TipoCorte1, this))
                    {
                        item.TipoCorte1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CorteSpool1", item);
                    }
                }
            }
        }
    
        private void FixupNumeroUnico(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (NumeroUnico item in e.NewItems)
                {
                    item.TipoCorte = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("NumeroUnico", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (NumeroUnico item in e.OldItems)
                {
                    if (ReferenceEquals(item.TipoCorte, this))
                    {
                        item.TipoCorte = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("NumeroUnico", item);
                    }
                }
            }
        }
    
        private void FixupNumeroUnico1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (NumeroUnico item in e.NewItems)
                {
                    item.TipoCorte1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("NumeroUnico1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (NumeroUnico item in e.OldItems)
                {
                    if (ReferenceEquals(item.TipoCorte1, this))
                    {
                        item.TipoCorte1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("NumeroUnico1", item);
                    }
                }
            }
        }
    
        private void FixupCorteSpoolPendiente(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CorteSpoolPendiente item in e.NewItems)
                {
                    item.TipoCorte = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CorteSpoolPendiente", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CorteSpoolPendiente item in e.OldItems)
                {
                    if (ReferenceEquals(item.TipoCorte, this))
                    {
                        item.TipoCorte = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CorteSpoolPendiente", item);
                    }
                }
            }
        }
    
        private void FixupCorteSpoolPendiente1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CorteSpoolPendiente item in e.NewItems)
                {
                    item.TipoCorte1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CorteSpoolPendiente1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CorteSpoolPendiente item in e.OldItems)
                {
                    if (ReferenceEquals(item.TipoCorte1, this))
                    {
                        item.TipoCorte1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CorteSpoolPendiente1", item);
                    }
                }
            }
        }

        #endregion

    }
}
