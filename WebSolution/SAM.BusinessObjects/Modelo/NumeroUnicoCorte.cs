//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SAM.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Corte))]
    [KnownType(typeof(NumeroUnico))]
    [KnownType(typeof(NumeroUnicoMovimiento))]
    [KnownType(typeof(OrdenTrabajo))]
    [KnownType(typeof(Proyecto))]
    [KnownType(typeof(UbicacionFisica))]
    [Serializable]
    public partial class NumeroUnicoCorte: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int NumeroUnicoCorteID
        {
            get { return _numeroUnicoCorteID; }
            set
            {
                if (_numeroUnicoCorteID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'NumeroUnicoCorteID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _numeroUnicoCorteID = value;
                    OnPropertyChanged("NumeroUnicoCorteID");
                }
            }
        }
        private int _numeroUnicoCorteID;
    
        [DataMember]
        public int NumeroUnicoID
        {
            get { return _numeroUnicoID; }
            set
            {
                if (_numeroUnicoID != value)
                {
                    ChangeTracker.RecordOriginalValue("NumeroUnicoID", _numeroUnicoID);
                    if (!IsDeserializing)
                    {
                        if (NumeroUnico != null && NumeroUnico.NumeroUnicoID != value)
                        {
                            NumeroUnico = null;
                        }
                    }
                    _numeroUnicoID = value;
                    OnPropertyChanged("NumeroUnicoID");
                }
            }
        }
        private int _numeroUnicoID;
    
        [DataMember]
        public int ProyectoID
        {
            get { return _proyectoID; }
            set
            {
                if (_proyectoID != value)
                {
                    ChangeTracker.RecordOriginalValue("ProyectoID", _proyectoID);
                    if (!IsDeserializing)
                    {
                        if (Proyecto != null && Proyecto.ProyectoID != value)
                        {
                            Proyecto = null;
                        }
                    }
                    _proyectoID = value;
                    OnPropertyChanged("ProyectoID");
                }
            }
        }
        private int _proyectoID;
    
        [DataMember]
        public int SalidaMovimientoID
        {
            get { return _salidaMovimientoID; }
            set
            {
                if (_salidaMovimientoID != value)
                {
                    ChangeTracker.RecordOriginalValue("SalidaMovimientoID", _salidaMovimientoID);
                    if (!IsDeserializing)
                    {
                        if (NumeroUnicoMovimiento != null && NumeroUnicoMovimiento.NumeroUnicoMovimientoID != value)
                        {
                            NumeroUnicoMovimiento = null;
                        }
                    }
                    _salidaMovimientoID = value;
                    OnPropertyChanged("SalidaMovimientoID");
                }
            }
        }
        private int _salidaMovimientoID;
    
        [DataMember]
        public int OrdenTrabajoID
        {
            get { return _ordenTrabajoID; }
            set
            {
                if (_ordenTrabajoID != value)
                {
                    ChangeTracker.RecordOriginalValue("OrdenTrabajoID", _ordenTrabajoID);
                    if (!IsDeserializing)
                    {
                        if (OrdenTrabajo != null && OrdenTrabajo.OrdenTrabajoID != value)
                        {
                            OrdenTrabajo = null;
                        }
                    }
                    _ordenTrabajoID = value;
                    OnPropertyChanged("OrdenTrabajoID");
                }
            }
        }
        private int _ordenTrabajoID;
    
        [DataMember]
        public Nullable<int> UbicacionFisicaID
        {
            get { return _ubicacionFisicaID; }
            set
            {
                if (_ubicacionFisicaID != value)
                {
                    ChangeTracker.RecordOriginalValue("UbicacionFisicaID", _ubicacionFisicaID);
                    if (!IsDeserializing)
                    {
                        if (UbicacionFisica != null && UbicacionFisica.UbicacionFisicaID != value)
                        {
                            UbicacionFisica = null;
                        }
                    }
                    _ubicacionFisicaID = value;
                    OnPropertyChanged("UbicacionFisicaID");
                }
            }
        }
        private Nullable<int> _ubicacionFisicaID;
    
        [DataMember]
        public string Segmento
        {
            get { return _segmento; }
            set
            {
                if (_segmento != value)
                {
                    _segmento = value;
                    OnPropertyChanged("Segmento");
                }
            }
        }
        private string _segmento;
    
        [DataMember]
        public int Longitud
        {
            get { return _longitud; }
            set
            {
                if (_longitud != value)
                {
                    _longitud = value;
                    OnPropertyChanged("Longitud");
                }
            }
        }
        private int _longitud;
    
        [DataMember]
        public System.DateTime FechaTraspaso
        {
            get { return _fechaTraspaso; }
            set
            {
                if (_fechaTraspaso != value)
                {
                    _fechaTraspaso = value;
                    OnPropertyChanged("FechaTraspaso");
                }
            }
        }
        private System.DateTime _fechaTraspaso;
    
        [DataMember]
        public bool TieneCorte
        {
            get { return _tieneCorte; }
            set
            {
                if (_tieneCorte != value)
                {
                    _tieneCorte = value;
                    OnPropertyChanged("TieneCorte");
                }
            }
        }
        private bool _tieneCorte;
    
        [DataMember]
        public Nullable<System.Guid> UsuarioModifica
        {
            get { return _usuarioModifica; }
            set
            {
                if (_usuarioModifica != value)
                {
                    _usuarioModifica = value;
                    OnPropertyChanged("UsuarioModifica");
                }
            }
        }
        private Nullable<System.Guid> _usuarioModifica;
    
        [DataMember]
        public Nullable<System.DateTime> FechaModificacion
        {
            get { return _fechaModificacion; }
            set
            {
                if (_fechaModificacion != value)
                {
                    _fechaModificacion = value;
                    OnPropertyChanged("FechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _fechaModificacion;
    
        [DataMember]
        public byte[] VersionRegistro
        {
            get { return _versionRegistro; }
            set
            {
                if (_versionRegistro != value)
                {
                    ChangeTracker.RecordOriginalValue("VersionRegistro", _versionRegistro);
                    _versionRegistro = value;
                    OnPropertyChanged("VersionRegistro");
                }
            }
        }
        private byte[] _versionRegistro;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<Corte> Corte
        {
            get
            {
                if (_corte == null)
                {
                    _corte = new TrackableCollection<Corte>();
                    _corte.CollectionChanged += FixupCorte;
                }
                return _corte;
            }
            set
            {
                if (!ReferenceEquals(_corte, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_corte != null)
                    {
                        _corte.CollectionChanged -= FixupCorte;
                    }
                    _corte = value;
                    if (_corte != null)
                    {
                        _corte.CollectionChanged += FixupCorte;
                    }
                    OnNavigationPropertyChanged("Corte");
                }
            }
        }
        private TrackableCollection<Corte> _corte;
    
        [DataMember]
        public NumeroUnico NumeroUnico
        {
            get { return _numeroUnico; }
            set
            {
                if (!ReferenceEquals(_numeroUnico, value))
                {
                    var previousValue = _numeroUnico;
                    _numeroUnico = value;
                    FixupNumeroUnico(previousValue);
                    OnNavigationPropertyChanged("NumeroUnico");
                }
            }
        }
        private NumeroUnico _numeroUnico;
    
        [DataMember]
        public NumeroUnicoMovimiento NumeroUnicoMovimiento
        {
            get { return _numeroUnicoMovimiento; }
            set
            {
                if (!ReferenceEquals(_numeroUnicoMovimiento, value))
                {
                    var previousValue = _numeroUnicoMovimiento;
                    _numeroUnicoMovimiento = value;
                    FixupNumeroUnicoMovimiento(previousValue);
                    OnNavigationPropertyChanged("NumeroUnicoMovimiento");
                }
            }
        }
        private NumeroUnicoMovimiento _numeroUnicoMovimiento;
    
        [DataMember]
        public OrdenTrabajo OrdenTrabajo
        {
            get { return _ordenTrabajo; }
            set
            {
                if (!ReferenceEquals(_ordenTrabajo, value))
                {
                    var previousValue = _ordenTrabajo;
                    _ordenTrabajo = value;
                    FixupOrdenTrabajo(previousValue);
                    OnNavigationPropertyChanged("OrdenTrabajo");
                }
            }
        }
        private OrdenTrabajo _ordenTrabajo;
    
        [DataMember]
        public Proyecto Proyecto
        {
            get { return _proyecto; }
            set
            {
                if (!ReferenceEquals(_proyecto, value))
                {
                    var previousValue = _proyecto;
                    _proyecto = value;
                    FixupProyecto(previousValue);
                    OnNavigationPropertyChanged("Proyecto");
                }
            }
        }
        private Proyecto _proyecto;
    
        [DataMember]
        public UbicacionFisica UbicacionFisica
        {
            get { return _ubicacionFisica; }
            set
            {
                if (!ReferenceEquals(_ubicacionFisica, value))
                {
                    var previousValue = _ubicacionFisica;
                    _ubicacionFisica = value;
                    FixupUbicacionFisica(previousValue);
                    OnNavigationPropertyChanged("UbicacionFisica");
                }
            }
        }
        private UbicacionFisica _ubicacionFisica;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
    	public void OnDeserializedMethod(StreamingContext context)
    	{
    		IsDeserializing = false;
    		ChangeTracker.ChangeTrackingEnabled = true;
    			if (_corte != null)
    		{
    			_corte.CollectionChanged -= FixupCorte;
    			_corte.CollectionChanged += FixupCorte;
    			}
    		}
    
    
        protected virtual void ClearNavigationProperties()
        {
            Corte.Clear();
            NumeroUnico = null;
            NumeroUnicoMovimiento = null;
            OrdenTrabajo = null;
            Proyecto = null;
            UbicacionFisica = null;
        }

        #endregion

        #region Association Fixup
    
        private void FixupNumeroUnico(NumeroUnico previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.NumeroUnicoCorte.Contains(this))
            {
                previousValue.NumeroUnicoCorte.Remove(this);
            }
    
            if (NumeroUnico != null)
            {
                if (!NumeroUnico.NumeroUnicoCorte.Contains(this))
                {
                    NumeroUnico.NumeroUnicoCorte.Add(this);
                }
    
                NumeroUnicoID = NumeroUnico.NumeroUnicoID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("NumeroUnico")
                    && (ChangeTracker.OriginalValues["NumeroUnico"] == NumeroUnico))
                {
                    ChangeTracker.OriginalValues.Remove("NumeroUnico");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("NumeroUnico", previousValue);
                }
                if (NumeroUnico != null && !NumeroUnico.ChangeTracker.ChangeTrackingEnabled)
                {
                    NumeroUnico.StartTracking();
                }
            }
        }
    
        private void FixupNumeroUnicoMovimiento(NumeroUnicoMovimiento previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.NumeroUnicoCorte.Contains(this))
            {
                previousValue.NumeroUnicoCorte.Remove(this);
            }
    
            if (NumeroUnicoMovimiento != null)
            {
                if (!NumeroUnicoMovimiento.NumeroUnicoCorte.Contains(this))
                {
                    NumeroUnicoMovimiento.NumeroUnicoCorte.Add(this);
                }
    
                SalidaMovimientoID = NumeroUnicoMovimiento.NumeroUnicoMovimientoID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("NumeroUnicoMovimiento")
                    && (ChangeTracker.OriginalValues["NumeroUnicoMovimiento"] == NumeroUnicoMovimiento))
                {
                    ChangeTracker.OriginalValues.Remove("NumeroUnicoMovimiento");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("NumeroUnicoMovimiento", previousValue);
                }
                if (NumeroUnicoMovimiento != null && !NumeroUnicoMovimiento.ChangeTracker.ChangeTrackingEnabled)
                {
                    NumeroUnicoMovimiento.StartTracking();
                }
            }
        }
    
        private void FixupOrdenTrabajo(OrdenTrabajo previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.NumeroUnicoCorte.Contains(this))
            {
                previousValue.NumeroUnicoCorte.Remove(this);
            }
    
            if (OrdenTrabajo != null)
            {
                if (!OrdenTrabajo.NumeroUnicoCorte.Contains(this))
                {
                    OrdenTrabajo.NumeroUnicoCorte.Add(this);
                }
    
                OrdenTrabajoID = OrdenTrabajo.OrdenTrabajoID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("OrdenTrabajo")
                    && (ChangeTracker.OriginalValues["OrdenTrabajo"] == OrdenTrabajo))
                {
                    ChangeTracker.OriginalValues.Remove("OrdenTrabajo");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("OrdenTrabajo", previousValue);
                }
                if (OrdenTrabajo != null && !OrdenTrabajo.ChangeTracker.ChangeTrackingEnabled)
                {
                    OrdenTrabajo.StartTracking();
                }
            }
        }
    
        private void FixupProyecto(Proyecto previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.NumeroUnicoCorte.Contains(this))
            {
                previousValue.NumeroUnicoCorte.Remove(this);
            }
    
            if (Proyecto != null)
            {
                if (!Proyecto.NumeroUnicoCorte.Contains(this))
                {
                    Proyecto.NumeroUnicoCorte.Add(this);
                }
    
                ProyectoID = Proyecto.ProyectoID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Proyecto")
                    && (ChangeTracker.OriginalValues["Proyecto"] == Proyecto))
                {
                    ChangeTracker.OriginalValues.Remove("Proyecto");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Proyecto", previousValue);
                }
                if (Proyecto != null && !Proyecto.ChangeTracker.ChangeTrackingEnabled)
                {
                    Proyecto.StartTracking();
                }
            }
        }
    
        private void FixupUbicacionFisica(UbicacionFisica previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.NumeroUnicoCorte.Contains(this))
            {
                previousValue.NumeroUnicoCorte.Remove(this);
            }
    
            if (UbicacionFisica != null)
            {
                if (!UbicacionFisica.NumeroUnicoCorte.Contains(this))
                {
                    UbicacionFisica.NumeroUnicoCorte.Add(this);
                }
    
                UbicacionFisicaID = UbicacionFisica.UbicacionFisicaID;
            }
            else if (!skipKeys)
            {
                UbicacionFisicaID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("UbicacionFisica")
                    && (ChangeTracker.OriginalValues["UbicacionFisica"] == UbicacionFisica))
                {
                    ChangeTracker.OriginalValues.Remove("UbicacionFisica");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("UbicacionFisica", previousValue);
                }
                if (UbicacionFisica != null && !UbicacionFisica.ChangeTracker.ChangeTrackingEnabled)
                {
                    UbicacionFisica.StartTracking();
                }
            }
        }
    
        private void FixupCorte(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Corte item in e.NewItems)
                {
                    item.NumeroUnicoCorte = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Corte", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Corte item in e.OldItems)
                {
                    if (ReferenceEquals(item.NumeroUnicoCorte, this))
                    {
                        item.NumeroUnicoCorte = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Corte", item);
                    }
                }
            }
        }

        #endregion

    }
}
