//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SAM.Entities
{
    
    [Serializable]
    public partial class NumeroUnicoCompuesto : INotifyComplexPropertyChanging, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int NumeroUnicoID
        {
            get { return _numeroUnicoID; }
            set
            {
                if (_numeroUnicoID != value)
                {
                    OnComplexPropertyChanging();
                    _numeroUnicoID = value;
                    OnPropertyChanged("NumeroUnicoID");
                }
            }
        }
        private int _numeroUnicoID;
    
        [DataMember]
        public string Codigo
        {
            get { return _codigo; }
            set
            {
                if (_codigo != value)
                {
                    OnComplexPropertyChanging();
                    _codigo = value;
                    OnPropertyChanged("Codigo");
                }
            }
        }
        private string _codigo;
    
        [DataMember]
        public decimal Diametro1
        {
            get { return _diametro1; }
            set
            {
                if (_diametro1 != value)
                {
                    OnComplexPropertyChanging();
                    _diametro1 = value;
                    OnPropertyChanged("Diametro1");
                }
            }
        }
        private decimal _diametro1;
    
        [DataMember]
        public decimal Diametro2
        {
            get { return _diametro2; }
            set
            {
                if (_diametro2 != value)
                {
                    OnComplexPropertyChanging();
                    _diametro2 = value;
                    OnPropertyChanged("Diametro2");
                }
            }
        }
        private decimal _diametro2;
    
        [DataMember]
        public string Factura
        {
            get { return _factura; }
            set
            {
                if (_factura != value)
                {
                    OnComplexPropertyChanging();
                    _factura = value;
                    OnPropertyChanged("Factura");
                }
            }
        }
        private string _factura;
    
        [DataMember]
        public string PartidaFactura
        {
            get { return _partidaFactura; }
            set
            {
                if (_partidaFactura != value)
                {
                    OnComplexPropertyChanging();
                    _partidaFactura = value;
                    OnPropertyChanged("PartidaFactura");
                }
            }
        }
        private string _partidaFactura;
    
        [DataMember]
        public string OrdenDeCompra
        {
            get { return _ordenDeCompra; }
            set
            {
                if (_ordenDeCompra != value)
                {
                    OnComplexPropertyChanging();
                    _ordenDeCompra = value;
                    OnPropertyChanged("OrdenDeCompra");
                }
            }
        }
        private string _ordenDeCompra;
    
        [DataMember]
        public string PartidaOrdenDeCompra
        {
            get { return _partidaOrdenDeCompra; }
            set
            {
                if (_partidaOrdenDeCompra != value)
                {
                    OnComplexPropertyChanging();
                    _partidaOrdenDeCompra = value;
                    OnPropertyChanged("PartidaOrdenDeCompra");
                }
            }
        }
        private string _partidaOrdenDeCompra;
    
        [DataMember]
        public string Cedula
        {
            get { return _cedula; }
            set
            {
                if (_cedula != value)
                {
                    OnComplexPropertyChanging();
                    _cedula = value;
                    OnPropertyChanged("Cedula");
                }
            }
        }
        private string _cedula;
    
        [DataMember]
        public Nullable<int> FabricanteID
        {
            get { return _fabricanteID; }
            set
            {
                if (_fabricanteID != value)
                {
                    OnComplexPropertyChanging();
                    _fabricanteID = value;
                    OnPropertyChanged("FabricanteID");
                }
            }
        }
        private Nullable<int> _fabricanteID;
    
        [DataMember]
        public Nullable<int> ProveedorID
        {
            get { return _proveedorID; }
            set
            {
                if (_proveedorID != value)
                {
                    OnComplexPropertyChanging();
                    _proveedorID = value;
                    OnPropertyChanged("ProveedorID");
                }
            }
        }
        private Nullable<int> _proveedorID;
    
        [DataMember]
        public bool MarcadoAsme
        {
            get { return _marcadoAsme; }
            set
            {
                if (_marcadoAsme != value)
                {
                    OnComplexPropertyChanging();
                    _marcadoAsme = value;
                    OnPropertyChanged("MarcadoAsme");
                }
            }
        }
        private bool _marcadoAsme;
    
        [DataMember]
        public bool MarcadoGolpe
        {
            get { return _marcadoGolpe; }
            set
            {
                if (_marcadoGolpe != value)
                {
                    OnComplexPropertyChanging();
                    _marcadoGolpe = value;
                    OnPropertyChanged("MarcadoGolpe");
                }
            }
        }
        private bool _marcadoGolpe;
    
        [DataMember]
        public bool MarcadoPintura
        {
            get { return _marcadoPintura; }
            set
            {
                if (_marcadoPintura != value)
                {
                    OnComplexPropertyChanging();
                    _marcadoPintura = value;
                    OnPropertyChanged("MarcadoPintura");
                }
            }
        }
        private bool _marcadoPintura;
    
        [DataMember]
        public string PruebasHidrostaticas
        {
            get { return _pruebasHidrostaticas; }
            set
            {
                if (_pruebasHidrostaticas != value)
                {
                    OnComplexPropertyChanging();
                    _pruebasHidrostaticas = value;
                    OnPropertyChanged("PruebasHidrostaticas");
                }
            }
        }
        private string _pruebasHidrostaticas;
    
        [DataMember]
        public string Estatus
        {
            get { return _estatus; }
            set
            {
                if (_estatus != value)
                {
                    OnComplexPropertyChanging();
                    _estatus = value;
                    OnPropertyChanged("Estatus");
                }
            }
        }
        private string _estatus;
    
        [DataMember]
        public Nullable<int> ItemCodeID
        {
            get { return _itemCodeID; }
            set
            {
                if (_itemCodeID != value)
                {
                    OnComplexPropertyChanging();
                    _itemCodeID = value;
                    OnPropertyChanged("ItemCodeID");
                }
            }
        }
        private Nullable<int> _itemCodeID;
    
        [DataMember]
        public string DescripcionEspanol
        {
            get { return _descripcionEspanol; }
            set
            {
                if (_descripcionEspanol != value)
                {
                    OnComplexPropertyChanging();
                    _descripcionEspanol = value;
                    OnPropertyChanged("DescripcionEspanol");
                }
            }
        }
        private string _descripcionEspanol;
    
        [DataMember]
        public string NumeroColada
        {
            get { return _numeroColada; }
            set
            {
                if (_numeroColada != value)
                {
                    OnComplexPropertyChanging();
                    _numeroColada = value;
                    OnPropertyChanged("NumeroColada");
                }
            }
        }
        private string _numeroColada;
    
        [DataMember]
        public string NumeroCertificado
        {
            get { return _numeroCertificado; }
            set
            {
                if (_numeroCertificado != value)
                {
                    OnComplexPropertyChanging();
                    _numeroCertificado = value;
                    OnPropertyChanged("NumeroCertificado");
                }
            }
        }
        private string _numeroCertificado;
    
        [DataMember]
        public Nullable<int> AceroID
        {
            get { return _aceroID; }
            set
            {
                if (_aceroID != value)
                {
                    OnComplexPropertyChanging();
                    _aceroID = value;
                    OnPropertyChanged("AceroID");
                }
            }
        }
        private Nullable<int> _aceroID;
    
        [DataMember]
        public int CantidadDanada
        {
            get { return _cantidadDanada; }
            set
            {
                if (_cantidadDanada != value)
                {
                    OnComplexPropertyChanging();
                    _cantidadDanada = value;
                    OnPropertyChanged("CantidadDanada");
                }
            }
        }
        private int _cantidadDanada;
    
        [DataMember]
        public int CantidadRecibida
        {
            get { return _cantidadRecibida; }
            set
            {
                if (_cantidadRecibida != value)
                {
                    OnComplexPropertyChanging();
                    _cantidadRecibida = value;
                    OnPropertyChanged("CantidadRecibida");
                }
            }
        }
        private int _cantidadRecibida;
    
        [DataMember]
        public int InventarioBuenEstado
        {
            get { return _inventarioBuenEstado; }
            set
            {
                if (_inventarioBuenEstado != value)
                {
                    OnComplexPropertyChanging();
                    _inventarioBuenEstado = value;
                    OnPropertyChanged("InventarioBuenEstado");
                }
            }
        }
        private int _inventarioBuenEstado;
    
        [DataMember]
        public Nullable<int> TotalDespachado
        {
            get { return _totalDespachado; }
            set
            {
                if (_totalDespachado != value)
                {
                    OnComplexPropertyChanging();
                    _totalDespachado = value;
                    OnPropertyChanged("TotalDespachado");
                }
            }
        }
        private Nullable<int> _totalDespachado;
    
        [DataMember]
        public Nullable<int> TotalOtrasSalidas
        {
            get { return _totalOtrasSalidas; }
            set
            {
                if (_totalOtrasSalidas != value)
                {
                    OnComplexPropertyChanging();
                    _totalOtrasSalidas = value;
                    OnPropertyChanged("TotalOtrasSalidas");
                }
            }
        }
        private Nullable<int> _totalOtrasSalidas;
    
        [DataMember]
        public string CodigoItemCode
        {
            get { return _codigoItemCode; }
            set
            {
                if (_codigoItemCode != value)
                {
                    OnComplexPropertyChanging();
                    _codigoItemCode = value;
                    OnPropertyChanged("CodigoItemCode");
                }
            }
        }
        private string _codigoItemCode;
    
        [DataMember]
        public Nullable<int> TipoCorte1ID
        {
            get { return _tipoCorte1ID; }
            set
            {
                if (_tipoCorte1ID != value)
                {
                    OnComplexPropertyChanging();
                    _tipoCorte1ID = value;
                    OnPropertyChanged("TipoCorte1ID");
                }
            }
        }
        private Nullable<int> _tipoCorte1ID;
    
        [DataMember]
        public Nullable<int> TipoCorte2ID
        {
            get { return _tipoCorte2ID; }
            set
            {
                if (_tipoCorte2ID != value)
                {
                    OnComplexPropertyChanging();
                    _tipoCorte2ID = value;
                    OnPropertyChanged("TipoCorte2ID");
                }
            }
        }
        private Nullable<int> _tipoCorte2ID;
    
        [DataMember]
        public int TransportistaID
        {
            get { return _transportistaID; }
            set
            {
                if (_transportistaID != value)
                {
                    OnComplexPropertyChanging();
                    _transportistaID = value;
                    OnPropertyChanged("TransportistaID");
                }
            }
        }
        private int _transportistaID;
    
        [DataMember]
        public int InventarioCongelado
        {
            get { return _inventarioCongelado; }
            set
            {
                if (_inventarioCongelado != value)
                {
                    OnComplexPropertyChanging();
                    _inventarioCongelado = value;
                    OnPropertyChanged("InventarioCongelado");
                }
            }
        }
        private int _inventarioCongelado;
    
        [DataMember]
        public int InventarioDisponibleCruce
        {
            get { return _inventarioDisponibleCruce; }
            set
            {
                if (_inventarioDisponibleCruce != value)
                {
                    OnComplexPropertyChanging();
                    _inventarioDisponibleCruce = value;
                    OnPropertyChanged("InventarioDisponibleCruce");
                }
            }
        }
        private int _inventarioDisponibleCruce;
    
        [DataMember]
        public int InventarioFisico
        {
            get { return _inventarioFisico; }
            set
            {
                if (_inventarioFisico != value)
                {
                    OnComplexPropertyChanging();
                    _inventarioFisico = value;
                    OnPropertyChanged("InventarioFisico");
                }
            }
        }
        private int _inventarioFisico;
    
        [DataMember]
        public Nullable<int> TipoMaterialID
        {
            get { return _tipoMaterialID; }
            set
            {
                if (_tipoMaterialID != value)
                {
                    OnComplexPropertyChanging();
                    _tipoMaterialID = value;
                    OnPropertyChanged("TipoMaterialID");
                }
            }
        }
        private Nullable<int> _tipoMaterialID;
    
        [DataMember]
        public Nullable<int> TotalMerma
        {
            get { return _totalMerma; }
            set
            {
                if (_totalMerma != value)
                {
                    OnComplexPropertyChanging();
                    _totalMerma = value;
                    OnPropertyChanged("TotalMerma");
                }
            }
        }
        private Nullable<int> _totalMerma;
    
        [DataMember]
        public int InventarioTransferenciaCorte
        {
            get { return _inventarioTransferenciaCorte; }
            set
            {
                if (_inventarioTransferenciaCorte != value)
                {
                    OnComplexPropertyChanging();
                    _inventarioTransferenciaCorte = value;
                    OnPropertyChanged("InventarioTransferenciaCorte");
                }
            }
        }
        private int _inventarioTransferenciaCorte;
    
        [DataMember]
        public Nullable<int> TotalCorte
        {
            get { return _totalCorte; }
            set
            {
                if (_totalCorte != value)
                {
                    OnComplexPropertyChanging();
                    _totalCorte = value;
                    OnPropertyChanged("TotalCorte");
                }
            }
        }
        private Nullable<int> _totalCorte;
    
        [DataMember]
        public Nullable<int> TotalEntradaOtrosProcesos
        {
            get { return _totalEntradaOtrosProcesos; }
            set
            {
                if (_totalEntradaOtrosProcesos != value)
                {
                    OnComplexPropertyChanging();
                    _totalEntradaOtrosProcesos = value;
                    OnPropertyChanged("TotalEntradaOtrosProcesos");
                }
            }
        }
        private Nullable<int> _totalEntradaOtrosProcesos;
    
        [DataMember]
        public Nullable<int> TotalSalidasTemporales
        {
            get { return _totalSalidasTemporales; }
            set
            {
                if (_totalSalidasTemporales != value)
                {
                    OnComplexPropertyChanging();
                    _totalSalidasTemporales = value;
                    OnPropertyChanged("TotalSalidasTemporales");
                }
            }
        }
        private Nullable<int> _totalSalidasTemporales;
    
        [DataMember]
        public Nullable<int> TotalDespachadoParaICE
        {
            get { return _totalDespachadoParaICE; }
            set
            {
                if (_totalDespachadoParaICE != value)
                {
                    OnComplexPropertyChanging();
                    _totalDespachadoParaICE = value;
                    OnPropertyChanged("TotalDespachadoParaICE");
                }
            }
        }
        private Nullable<int> _totalDespachadoParaICE;
    
        [DataMember]
        public Nullable<int> TotalEntradasTemporales
        {
            get { return _totalEntradasTemporales; }
            set
            {
                if (_totalEntradasTemporales != value)
                {
                    OnComplexPropertyChanging();
                    _totalEntradasTemporales = value;
                    OnPropertyChanged("TotalEntradasTemporales");
                }
            }
        }
        private Nullable<int> _totalEntradasTemporales;
    
        [DataMember]
        public string Rack
        {
            get { return _rack; }
            set
            {
                if (_rack != value)
                {
                    OnComplexPropertyChanging();
                    _rack = value;
                    OnPropertyChanged("Rack");
                }
            }
        }
        private string _rack;
    
        [DataMember]
        public System.DateTime FechaRecepcion
        {
            get { return _fechaRecepcion; }
            set
            {
                if (_fechaRecepcion != value)
                {
                    OnComplexPropertyChanging();
                    _fechaRecepcion = value;
                    OnPropertyChanged("FechaRecepcion");
                }
            }
        }
        private System.DateTime _fechaRecepcion;
    
        [DataMember]
        public string Observaciones
        {
            get { return _observaciones; }
            set
            {
                if (_observaciones != value)
                {
                    OnComplexPropertyChanging();
                    _observaciones = value;
                    OnPropertyChanged("Observaciones");
                }
            }
        }
        private string _observaciones;

        #endregion

        #region ChangeTracking
    
        private void OnComplexPropertyChanging()
        {
            if (_complexPropertyChanging != null)
            {
                _complexPropertyChanging(this, new EventArgs());
            }
        }
    
        event EventHandler INotifyComplexPropertyChanging.ComplexPropertyChanging { add { _complexPropertyChanging += value; } remove { _complexPropertyChanging -= value; } }
        private event EventHandler _complexPropertyChanging;
    
        private void OnPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged { add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
        public static void RecordComplexOriginalValues(String parentPropertyName, NumeroUnicoCompuesto complexObject, ObjectChangeTracker changeTracker)
        {
            if (String.IsNullOrEmpty(parentPropertyName))
            {
                throw new ArgumentException("String parameter cannot be null or empty.", "parentPropertyName");
            }
    
            if (changeTracker == null)
            {
                throw new ArgumentNullException("changeTracker");
            }
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.NumeroUnicoID", parentPropertyName), complexObject == null ? null : (object)complexObject.NumeroUnicoID);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.Codigo", parentPropertyName), complexObject == null ? null : (object)complexObject.Codigo);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.Diametro1", parentPropertyName), complexObject == null ? null : (object)complexObject.Diametro1);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.Diametro2", parentPropertyName), complexObject == null ? null : (object)complexObject.Diametro2);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.Factura", parentPropertyName), complexObject == null ? null : (object)complexObject.Factura);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.PartidaFactura", parentPropertyName), complexObject == null ? null : (object)complexObject.PartidaFactura);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.OrdenDeCompra", parentPropertyName), complexObject == null ? null : (object)complexObject.OrdenDeCompra);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.PartidaOrdenDeCompra", parentPropertyName), complexObject == null ? null : (object)complexObject.PartidaOrdenDeCompra);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.Cedula", parentPropertyName), complexObject == null ? null : (object)complexObject.Cedula);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.FabricanteID", parentPropertyName), complexObject == null ? null : (object)complexObject.FabricanteID);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.ProveedorID", parentPropertyName), complexObject == null ? null : (object)complexObject.ProveedorID);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.MarcadoAsme", parentPropertyName), complexObject == null ? null : (object)complexObject.MarcadoAsme);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.MarcadoGolpe", parentPropertyName), complexObject == null ? null : (object)complexObject.MarcadoGolpe);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.MarcadoPintura", parentPropertyName), complexObject == null ? null : (object)complexObject.MarcadoPintura);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.PruebasHidrostaticas", parentPropertyName), complexObject == null ? null : (object)complexObject.PruebasHidrostaticas);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.Estatus", parentPropertyName), complexObject == null ? null : (object)complexObject.Estatus);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.ItemCodeID", parentPropertyName), complexObject == null ? null : (object)complexObject.ItemCodeID);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.DescripcionEspanol", parentPropertyName), complexObject == null ? null : (object)complexObject.DescripcionEspanol);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.NumeroColada", parentPropertyName), complexObject == null ? null : (object)complexObject.NumeroColada);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.NumeroCertificado", parentPropertyName), complexObject == null ? null : (object)complexObject.NumeroCertificado);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.AceroID", parentPropertyName), complexObject == null ? null : (object)complexObject.AceroID);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.CantidadDanada", parentPropertyName), complexObject == null ? null : (object)complexObject.CantidadDanada);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.CantidadRecibida", parentPropertyName), complexObject == null ? null : (object)complexObject.CantidadRecibida);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.InventarioBuenEstado", parentPropertyName), complexObject == null ? null : (object)complexObject.InventarioBuenEstado);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.TotalDespachado", parentPropertyName), complexObject == null ? null : (object)complexObject.TotalDespachado);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.TotalOtrasSalidas", parentPropertyName), complexObject == null ? null : (object)complexObject.TotalOtrasSalidas);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.CodigoItemCode", parentPropertyName), complexObject == null ? null : (object)complexObject.CodigoItemCode);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.TipoCorte1ID", parentPropertyName), complexObject == null ? null : (object)complexObject.TipoCorte1ID);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.TipoCorte2ID", parentPropertyName), complexObject == null ? null : (object)complexObject.TipoCorte2ID);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.TransportistaID", parentPropertyName), complexObject == null ? null : (object)complexObject.TransportistaID);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.InventarioCongelado", parentPropertyName), complexObject == null ? null : (object)complexObject.InventarioCongelado);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.InventarioDisponibleCruce", parentPropertyName), complexObject == null ? null : (object)complexObject.InventarioDisponibleCruce);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.InventarioFisico", parentPropertyName), complexObject == null ? null : (object)complexObject.InventarioFisico);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.TipoMaterialID", parentPropertyName), complexObject == null ? null : (object)complexObject.TipoMaterialID);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.TotalMerma", parentPropertyName), complexObject == null ? null : (object)complexObject.TotalMerma);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.InventarioTransferenciaCorte", parentPropertyName), complexObject == null ? null : (object)complexObject.InventarioTransferenciaCorte);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.TotalCorte", parentPropertyName), complexObject == null ? null : (object)complexObject.TotalCorte);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.TotalEntradaOtrosProcesos", parentPropertyName), complexObject == null ? null : (object)complexObject.TotalEntradaOtrosProcesos);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.TotalSalidasTemporales", parentPropertyName), complexObject == null ? null : (object)complexObject.TotalSalidasTemporales);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.TotalDespachadoParaICE", parentPropertyName), complexObject == null ? null : (object)complexObject.TotalDespachadoParaICE);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.TotalEntradasTemporales", parentPropertyName), complexObject == null ? null : (object)complexObject.TotalEntradasTemporales);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.Rack", parentPropertyName), complexObject == null ? null : (object)complexObject.Rack);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.FechaRecepcion", parentPropertyName), complexObject == null ? null : (object)complexObject.FechaRecepcion);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.Observaciones", parentPropertyName), complexObject == null ? null : (object)complexObject.Observaciones);
        }

        #endregion

    }
}
