//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SAM.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(JuntaRequisicion))]
    [KnownType(typeof(JuntaWorkstatus))]
    [KnownType(typeof(ReportePnd))]
    [KnownType(typeof(TipoRechazo))]
    [KnownType(typeof(JuntaReportePndCuadrante))]
    [KnownType(typeof(JuntaReportePndSector))]
    [Serializable]
    public partial class JuntaReportePnd: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int JuntaReportePndID
        {
            get { return _juntaReportePndID; }
            set
            {
                if (_juntaReportePndID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'JuntaReportePndID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _juntaReportePndID = value;
                    OnPropertyChanged("JuntaReportePndID");
                }
            }
        }
        private int _juntaReportePndID;
    
        [DataMember]
        public int ReportePndID
        {
            get { return _reportePndID; }
            set
            {
                if (_reportePndID != value)
                {
                    ChangeTracker.RecordOriginalValue("ReportePndID", _reportePndID);
                    if (!IsDeserializing)
                    {
                        if (ReportePnd != null && ReportePnd.ReportePndID != value)
                        {
                            ReportePnd = null;
                        }
                    }
                    _reportePndID = value;
                    OnPropertyChanged("ReportePndID");
                }
            }
        }
        private int _reportePndID;
    
        [DataMember]
        public int JuntaWorkstatusID
        {
            get { return _juntaWorkstatusID; }
            set
            {
                if (_juntaWorkstatusID != value)
                {
                    ChangeTracker.RecordOriginalValue("JuntaWorkstatusID", _juntaWorkstatusID);
                    if (!IsDeserializing)
                    {
                        if (JuntaWorkstatus != null && JuntaWorkstatus.JuntaWorkstatusID != value)
                        {
                            JuntaWorkstatus = null;
                        }
                    }
                    _juntaWorkstatusID = value;
                    OnPropertyChanged("JuntaWorkstatusID");
                }
            }
        }
        private int _juntaWorkstatusID;
    
        [DataMember]
        public int JuntaRequisicionID
        {
            get { return _juntaRequisicionID; }
            set
            {
                if (_juntaRequisicionID != value)
                {
                    ChangeTracker.RecordOriginalValue("JuntaRequisicionID", _juntaRequisicionID);
                    if (!IsDeserializing)
                    {
                        if (JuntaRequisicion != null && JuntaRequisicion.JuntaRequisicionID != value)
                        {
                            JuntaRequisicion = null;
                        }
                    }
                    _juntaRequisicionID = value;
                    OnPropertyChanged("JuntaRequisicionID");
                }
            }
        }
        private int _juntaRequisicionID;
    
        [DataMember]
        public Nullable<int> TipoRechazoID
        {
            get { return _tipoRechazoID; }
            set
            {
                if (_tipoRechazoID != value)
                {
                    ChangeTracker.RecordOriginalValue("TipoRechazoID", _tipoRechazoID);
                    if (!IsDeserializing)
                    {
                        if (TipoRechazo != null && TipoRechazo.TipoRechazoID != value)
                        {
                            TipoRechazo = null;
                        }
                    }
                    _tipoRechazoID = value;
                    OnPropertyChanged("TipoRechazoID");
                }
            }
        }
        private Nullable<int> _tipoRechazoID;
    
        [DataMember]
        public System.DateTime FechaPrueba
        {
            get { return _fechaPrueba; }
            set
            {
                if (_fechaPrueba != value)
                {
                    _fechaPrueba = value;
                    OnPropertyChanged("FechaPrueba");
                }
            }
        }
        private System.DateTime _fechaPrueba;
    
        [DataMember]
        public Nullable<int> Hoja
        {
            get { return _hoja; }
            set
            {
                if (_hoja != value)
                {
                    _hoja = value;
                    OnPropertyChanged("Hoja");
                }
            }
        }
        private Nullable<int> _hoja;
    
        [DataMember]
        public bool Aprobado
        {
            get { return _aprobado; }
            set
            {
                if (_aprobado != value)
                {
                    _aprobado = value;
                    OnPropertyChanged("Aprobado");
                }
            }
        }
        private bool _aprobado;
    
        [DataMember]
        public string Observaciones
        {
            get { return _observaciones; }
            set
            {
                if (_observaciones != value)
                {
                    _observaciones = value;
                    OnPropertyChanged("Observaciones");
                }
            }
        }
        private string _observaciones;
    
        [DataMember]
        public Nullable<System.Guid> UsuarioModifica
        {
            get { return _usuarioModifica; }
            set
            {
                if (_usuarioModifica != value)
                {
                    _usuarioModifica = value;
                    OnPropertyChanged("UsuarioModifica");
                }
            }
        }
        private Nullable<System.Guid> _usuarioModifica;
    
        [DataMember]
        public Nullable<System.DateTime> FechaModificacion
        {
            get { return _fechaModificacion; }
            set
            {
                if (_fechaModificacion != value)
                {
                    _fechaModificacion = value;
                    OnPropertyChanged("FechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _fechaModificacion;
    
        [DataMember]
        public byte[] VersionRegistro
        {
            get { return _versionRegistro; }
            set
            {
                if (_versionRegistro != value)
                {
                    ChangeTracker.RecordOriginalValue("VersionRegistro", _versionRegistro);
                    _versionRegistro = value;
                    OnPropertyChanged("VersionRegistro");
                }
            }
        }
        private byte[] _versionRegistro;
    
        [DataMember]
        public Nullable<int> JuntaSeguimientoID1
        {
            get { return _juntaSeguimientoID1; }
            set
            {
                if (_juntaSeguimientoID1 != value)
                {
                    _juntaSeguimientoID1 = value;
                    OnPropertyChanged("JuntaSeguimientoID1");
                }
            }
        }
        private Nullable<int> _juntaSeguimientoID1;
    
        [DataMember]
        public Nullable<int> JuntaSeguimientoID2
        {
            get { return _juntaSeguimientoID2; }
            set
            {
                if (_juntaSeguimientoID2 != value)
                {
                    _juntaSeguimientoID2 = value;
                    OnPropertyChanged("JuntaSeguimientoID2");
                }
            }
        }
        private Nullable<int> _juntaSeguimientoID2;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public JuntaRequisicion JuntaRequisicion
        {
            get { return _juntaRequisicion; }
            set
            {
                if (!ReferenceEquals(_juntaRequisicion, value))
                {
                    var previousValue = _juntaRequisicion;
                    _juntaRequisicion = value;
                    FixupJuntaRequisicion(previousValue);
                    OnNavigationPropertyChanged("JuntaRequisicion");
                }
            }
        }
        private JuntaRequisicion _juntaRequisicion;
    
        [DataMember]
        public JuntaWorkstatus JuntaWorkstatus
        {
            get { return _juntaWorkstatus; }
            set
            {
                if (!ReferenceEquals(_juntaWorkstatus, value))
                {
                    var previousValue = _juntaWorkstatus;
                    _juntaWorkstatus = value;
                    FixupJuntaWorkstatus(previousValue);
                    OnNavigationPropertyChanged("JuntaWorkstatus");
                }
            }
        }
        private JuntaWorkstatus _juntaWorkstatus;
    
        [DataMember]
        public ReportePnd ReportePnd
        {
            get { return _reportePnd; }
            set
            {
                if (!ReferenceEquals(_reportePnd, value))
                {
                    var previousValue = _reportePnd;
                    _reportePnd = value;
                    FixupReportePnd(previousValue);
                    OnNavigationPropertyChanged("ReportePnd");
                }
            }
        }
        private ReportePnd _reportePnd;
    
        [DataMember]
        public TipoRechazo TipoRechazo
        {
            get { return _tipoRechazo; }
            set
            {
                if (!ReferenceEquals(_tipoRechazo, value))
                {
                    var previousValue = _tipoRechazo;
                    _tipoRechazo = value;
                    FixupTipoRechazo(previousValue);
                    OnNavigationPropertyChanged("TipoRechazo");
                }
            }
        }
        private TipoRechazo _tipoRechazo;
    
        [DataMember]
        public TrackableCollection<JuntaReportePndCuadrante> JuntaReportePndCuadrante
        {
            get
            {
                if (_juntaReportePndCuadrante == null)
                {
                    _juntaReportePndCuadrante = new TrackableCollection<JuntaReportePndCuadrante>();
                    _juntaReportePndCuadrante.CollectionChanged += FixupJuntaReportePndCuadrante;
                }
                return _juntaReportePndCuadrante;
            }
            set
            {
                if (!ReferenceEquals(_juntaReportePndCuadrante, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_juntaReportePndCuadrante != null)
                    {
                        _juntaReportePndCuadrante.CollectionChanged -= FixupJuntaReportePndCuadrante;
                    }
                    _juntaReportePndCuadrante = value;
                    if (_juntaReportePndCuadrante != null)
                    {
                        _juntaReportePndCuadrante.CollectionChanged += FixupJuntaReportePndCuadrante;
                    }
                    OnNavigationPropertyChanged("JuntaReportePndCuadrante");
                }
            }
        }
        private TrackableCollection<JuntaReportePndCuadrante> _juntaReportePndCuadrante;
    
        [DataMember]
        public TrackableCollection<JuntaReportePndSector> JuntaReportePndSector
        {
            get
            {
                if (_juntaReportePndSector == null)
                {
                    _juntaReportePndSector = new TrackableCollection<JuntaReportePndSector>();
                    _juntaReportePndSector.CollectionChanged += FixupJuntaReportePndSector;
                }
                return _juntaReportePndSector;
            }
            set
            {
                if (!ReferenceEquals(_juntaReportePndSector, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_juntaReportePndSector != null)
                    {
                        _juntaReportePndSector.CollectionChanged -= FixupJuntaReportePndSector;
                    }
                    _juntaReportePndSector = value;
                    if (_juntaReportePndSector != null)
                    {
                        _juntaReportePndSector.CollectionChanged += FixupJuntaReportePndSector;
                    }
                    OnNavigationPropertyChanged("JuntaReportePndSector");
                }
            }
        }
        private TrackableCollection<JuntaReportePndSector> _juntaReportePndSector;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
    	public void OnDeserializedMethod(StreamingContext context)
    	{
    		IsDeserializing = false;
    		ChangeTracker.ChangeTrackingEnabled = true;
    			if (_juntaReportePndCuadrante != null)
    		{
    			_juntaReportePndCuadrante.CollectionChanged -= FixupJuntaReportePndCuadrante;
    			_juntaReportePndCuadrante.CollectionChanged += FixupJuntaReportePndCuadrante;
    			}
    			if (_juntaReportePndSector != null)
    		{
    			_juntaReportePndSector.CollectionChanged -= FixupJuntaReportePndSector;
    			_juntaReportePndSector.CollectionChanged += FixupJuntaReportePndSector;
    			}
    		}
    
    
        protected virtual void ClearNavigationProperties()
        {
            JuntaRequisicion = null;
            JuntaWorkstatus = null;
            ReportePnd = null;
            TipoRechazo = null;
            JuntaReportePndCuadrante.Clear();
            JuntaReportePndSector.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupJuntaRequisicion(JuntaRequisicion previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JuntaReportePnd.Contains(this))
            {
                previousValue.JuntaReportePnd.Remove(this);
            }
    
            if (JuntaRequisicion != null)
            {
                if (!JuntaRequisicion.JuntaReportePnd.Contains(this))
                {
                    JuntaRequisicion.JuntaReportePnd.Add(this);
                }
    
                JuntaRequisicionID = JuntaRequisicion.JuntaRequisicionID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("JuntaRequisicion")
                    && (ChangeTracker.OriginalValues["JuntaRequisicion"] == JuntaRequisicion))
                {
                    ChangeTracker.OriginalValues.Remove("JuntaRequisicion");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("JuntaRequisicion", previousValue);
                }
                if (JuntaRequisicion != null && !JuntaRequisicion.ChangeTracker.ChangeTrackingEnabled)
                {
                    JuntaRequisicion.StartTracking();
                }
            }
        }
    
        private void FixupJuntaWorkstatus(JuntaWorkstatus previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JuntaReportePnd.Contains(this))
            {
                previousValue.JuntaReportePnd.Remove(this);
            }
    
            if (JuntaWorkstatus != null)
            {
                if (!JuntaWorkstatus.JuntaReportePnd.Contains(this))
                {
                    JuntaWorkstatus.JuntaReportePnd.Add(this);
                }
    
                JuntaWorkstatusID = JuntaWorkstatus.JuntaWorkstatusID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("JuntaWorkstatus")
                    && (ChangeTracker.OriginalValues["JuntaWorkstatus"] == JuntaWorkstatus))
                {
                    ChangeTracker.OriginalValues.Remove("JuntaWorkstatus");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("JuntaWorkstatus", previousValue);
                }
                if (JuntaWorkstatus != null && !JuntaWorkstatus.ChangeTracker.ChangeTrackingEnabled)
                {
                    JuntaWorkstatus.StartTracking();
                }
            }
        }
    
        private void FixupReportePnd(ReportePnd previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JuntaReportePnd.Contains(this))
            {
                previousValue.JuntaReportePnd.Remove(this);
            }
    
            if (ReportePnd != null)
            {
                if (!ReportePnd.JuntaReportePnd.Contains(this))
                {
                    ReportePnd.JuntaReportePnd.Add(this);
                }
    
                ReportePndID = ReportePnd.ReportePndID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ReportePnd")
                    && (ChangeTracker.OriginalValues["ReportePnd"] == ReportePnd))
                {
                    ChangeTracker.OriginalValues.Remove("ReportePnd");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ReportePnd", previousValue);
                }
                if (ReportePnd != null && !ReportePnd.ChangeTracker.ChangeTrackingEnabled)
                {
                    ReportePnd.StartTracking();
                }
            }
        }
    
        private void FixupTipoRechazo(TipoRechazo previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JuntaReportePnd.Contains(this))
            {
                previousValue.JuntaReportePnd.Remove(this);
            }
    
            if (TipoRechazo != null)
            {
                if (!TipoRechazo.JuntaReportePnd.Contains(this))
                {
                    TipoRechazo.JuntaReportePnd.Add(this);
                }
    
                TipoRechazoID = TipoRechazo.TipoRechazoID;
            }
            else if (!skipKeys)
            {
                TipoRechazoID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TipoRechazo")
                    && (ChangeTracker.OriginalValues["TipoRechazo"] == TipoRechazo))
                {
                    ChangeTracker.OriginalValues.Remove("TipoRechazo");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TipoRechazo", previousValue);
                }
                if (TipoRechazo != null && !TipoRechazo.ChangeTracker.ChangeTrackingEnabled)
                {
                    TipoRechazo.StartTracking();
                }
            }
        }
    
        private void FixupJuntaReportePndCuadrante(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (JuntaReportePndCuadrante item in e.NewItems)
                {
                    item.JuntaReportePnd = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("JuntaReportePndCuadrante", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (JuntaReportePndCuadrante item in e.OldItems)
                {
                    if (ReferenceEquals(item.JuntaReportePnd, this))
                    {
                        item.JuntaReportePnd = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("JuntaReportePndCuadrante", item);
                    }
                }
            }
        }
    
        private void FixupJuntaReportePndSector(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (JuntaReportePndSector item in e.NewItems)
                {
                    item.JuntaReportePnd = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("JuntaReportePndSector", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (JuntaReportePndSector item in e.OldItems)
                {
                    if (ReferenceEquals(item.JuntaReportePnd, this))
                    {
                        item.JuntaReportePnd = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("JuntaReportePndSector", item);
                    }
                }
            }
        }

        #endregion

    }
}
