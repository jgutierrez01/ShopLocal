//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SAM.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(JuntaRequisicion))]
    [KnownType(typeof(JuntaWorkstatus))]
    [KnownType(typeof(ReporteTt))]
    [Serializable]
    public partial class JuntaReporteTt: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int JuntaReporteTtID
        {
            get { return _juntaReporteTtID; }
            set
            {
                if (_juntaReporteTtID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'JuntaReporteTtID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _juntaReporteTtID = value;
                    OnPropertyChanged("JuntaReporteTtID");
                }
            }
        }
        private int _juntaReporteTtID;
    
        [DataMember]
        public int ReporteTtID
        {
            get { return _reporteTtID; }
            set
            {
                if (_reporteTtID != value)
                {
                    ChangeTracker.RecordOriginalValue("ReporteTtID", _reporteTtID);
                    if (!IsDeserializing)
                    {
                        if (ReporteTt != null && ReporteTt.ReporteTtID != value)
                        {
                            ReporteTt = null;
                        }
                    }
                    _reporteTtID = value;
                    OnPropertyChanged("ReporteTtID");
                }
            }
        }
        private int _reporteTtID;
    
        [DataMember]
        public int JuntaWorkstatusID
        {
            get { return _juntaWorkstatusID; }
            set
            {
                if (_juntaWorkstatusID != value)
                {
                    ChangeTracker.RecordOriginalValue("JuntaWorkstatusID", _juntaWorkstatusID);
                    if (!IsDeserializing)
                    {
                        if (JuntaWorkstatus != null && JuntaWorkstatus.JuntaWorkstatusID != value)
                        {
                            JuntaWorkstatus = null;
                        }
                    }
                    _juntaWorkstatusID = value;
                    OnPropertyChanged("JuntaWorkstatusID");
                }
            }
        }
        private int _juntaWorkstatusID;
    
        [DataMember]
        public int JuntaRequisicionID
        {
            get { return _juntaRequisicionID; }
            set
            {
                if (_juntaRequisicionID != value)
                {
                    ChangeTracker.RecordOriginalValue("JuntaRequisicionID", _juntaRequisicionID);
                    if (!IsDeserializing)
                    {
                        if (JuntaRequisicion != null && JuntaRequisicion.JuntaRequisicionID != value)
                        {
                            JuntaRequisicion = null;
                        }
                    }
                    _juntaRequisicionID = value;
                    OnPropertyChanged("JuntaRequisicionID");
                }
            }
        }
        private int _juntaRequisicionID;
    
        [DataMember]
        public System.DateTime FechaTratamiento
        {
            get { return _fechaTratamiento; }
            set
            {
                if (_fechaTratamiento != value)
                {
                    _fechaTratamiento = value;
                    OnPropertyChanged("FechaTratamiento");
                }
            }
        }
        private System.DateTime _fechaTratamiento;
    
        [DataMember]
        public string NumeroGrafica
        {
            get { return _numeroGrafica; }
            set
            {
                if (_numeroGrafica != value)
                {
                    _numeroGrafica = value;
                    OnPropertyChanged("NumeroGrafica");
                }
            }
        }
        private string _numeroGrafica;
    
        [DataMember]
        public bool Aprobado
        {
            get { return _aprobado; }
            set
            {
                if (_aprobado != value)
                {
                    _aprobado = value;
                    OnPropertyChanged("Aprobado");
                }
            }
        }
        private bool _aprobado;
    
        [DataMember]
        public string Observaciones
        {
            get { return _observaciones; }
            set
            {
                if (_observaciones != value)
                {
                    _observaciones = value;
                    OnPropertyChanged("Observaciones");
                }
            }
        }
        private string _observaciones;
    
        [DataMember]
        public Nullable<System.Guid> UsuarioModifica
        {
            get { return _usuarioModifica; }
            set
            {
                if (_usuarioModifica != value)
                {
                    _usuarioModifica = value;
                    OnPropertyChanged("UsuarioModifica");
                }
            }
        }
        private Nullable<System.Guid> _usuarioModifica;
    
        [DataMember]
        public Nullable<System.DateTime> FechaModificacion
        {
            get { return _fechaModificacion; }
            set
            {
                if (_fechaModificacion != value)
                {
                    _fechaModificacion = value;
                    OnPropertyChanged("FechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _fechaModificacion;
    
        [DataMember]
        public byte[] VersionRegistro
        {
            get { return _versionRegistro; }
            set
            {
                if (_versionRegistro != value)
                {
                    ChangeTracker.RecordOriginalValue("VersionRegistro", _versionRegistro);
                    _versionRegistro = value;
                    OnPropertyChanged("VersionRegistro");
                }
            }
        }
        private byte[] _versionRegistro;
    
        [DataMember]
        public Nullable<int> Hoja
        {
            get { return _hoja; }
            set
            {
                if (_hoja != value)
                {
                    _hoja = value;
                    OnPropertyChanged("Hoja");
                }
            }
        }
        private Nullable<int> _hoja;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public JuntaRequisicion JuntaRequisicion
        {
            get { return _juntaRequisicion; }
            set
            {
                if (!ReferenceEquals(_juntaRequisicion, value))
                {
                    var previousValue = _juntaRequisicion;
                    _juntaRequisicion = value;
                    FixupJuntaRequisicion(previousValue);
                    OnNavigationPropertyChanged("JuntaRequisicion");
                }
            }
        }
        private JuntaRequisicion _juntaRequisicion;
    
        [DataMember]
        public JuntaWorkstatus JuntaWorkstatus
        {
            get { return _juntaWorkstatus; }
            set
            {
                if (!ReferenceEquals(_juntaWorkstatus, value))
                {
                    var previousValue = _juntaWorkstatus;
                    _juntaWorkstatus = value;
                    FixupJuntaWorkstatus(previousValue);
                    OnNavigationPropertyChanged("JuntaWorkstatus");
                }
            }
        }
        private JuntaWorkstatus _juntaWorkstatus;
    
        [DataMember]
        public ReporteTt ReporteTt
        {
            get { return _reporteTt; }
            set
            {
                if (!ReferenceEquals(_reporteTt, value))
                {
                    var previousValue = _reporteTt;
                    _reporteTt = value;
                    FixupReporteTt(previousValue);
                    OnNavigationPropertyChanged("ReporteTt");
                }
            }
        }
        private ReporteTt _reporteTt;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
    	public void OnDeserializedMethod(StreamingContext context)
    	{
    		IsDeserializing = false;
    		ChangeTracker.ChangeTrackingEnabled = true;
    		}
    
    
        protected virtual void ClearNavigationProperties()
        {
            JuntaRequisicion = null;
            JuntaWorkstatus = null;
            ReporteTt = null;
        }

        #endregion

        #region Association Fixup
    
        private void FixupJuntaRequisicion(JuntaRequisicion previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JuntaReporteTt.Contains(this))
            {
                previousValue.JuntaReporteTt.Remove(this);
            }
    
            if (JuntaRequisicion != null)
            {
                if (!JuntaRequisicion.JuntaReporteTt.Contains(this))
                {
                    JuntaRequisicion.JuntaReporteTt.Add(this);
                }
    
                JuntaRequisicionID = JuntaRequisicion.JuntaRequisicionID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("JuntaRequisicion")
                    && (ChangeTracker.OriginalValues["JuntaRequisicion"] == JuntaRequisicion))
                {
                    ChangeTracker.OriginalValues.Remove("JuntaRequisicion");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("JuntaRequisicion", previousValue);
                }
                if (JuntaRequisicion != null && !JuntaRequisicion.ChangeTracker.ChangeTrackingEnabled)
                {
                    JuntaRequisicion.StartTracking();
                }
            }
        }
    
        private void FixupJuntaWorkstatus(JuntaWorkstatus previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JuntaReporteTt.Contains(this))
            {
                previousValue.JuntaReporteTt.Remove(this);
            }
    
            if (JuntaWorkstatus != null)
            {
                if (!JuntaWorkstatus.JuntaReporteTt.Contains(this))
                {
                    JuntaWorkstatus.JuntaReporteTt.Add(this);
                }
    
                JuntaWorkstatusID = JuntaWorkstatus.JuntaWorkstatusID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("JuntaWorkstatus")
                    && (ChangeTracker.OriginalValues["JuntaWorkstatus"] == JuntaWorkstatus))
                {
                    ChangeTracker.OriginalValues.Remove("JuntaWorkstatus");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("JuntaWorkstatus", previousValue);
                }
                if (JuntaWorkstatus != null && !JuntaWorkstatus.ChangeTracker.ChangeTrackingEnabled)
                {
                    JuntaWorkstatus.StartTracking();
                }
            }
        }
    
        private void FixupReporteTt(ReporteTt previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JuntaReporteTt.Contains(this))
            {
                previousValue.JuntaReporteTt.Remove(this);
            }
    
            if (ReporteTt != null)
            {
                if (!ReporteTt.JuntaReporteTt.Contains(this))
                {
                    ReporteTt.JuntaReporteTt.Add(this);
                }
    
                ReporteTtID = ReporteTt.ReporteTtID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ReporteTt")
                    && (ChangeTracker.OriginalValues["ReporteTt"] == ReporteTt))
                {
                    ChangeTracker.OriginalValues.Remove("ReporteTt");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ReporteTt", previousValue);
                }
                if (ReporteTt != null && !ReporteTt.ChangeTracker.ChangeTrackingEnabled)
                {
                    ReporteTt.StartTracking();
                }
            }
        }

        #endregion

    }
}
