//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SAM.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(TipoPrueba))]
    [KnownType(typeof(JuntaReportePndCuadrante))]
    [KnownType(typeof(JuntaReportePndSector))]
    [KnownType(typeof(JuntaInspeccionVisualDefecto))]
    [KnownType(typeof(JuntaCampoInspeccionVisualDefecto))]
    [KnownType(typeof(JuntaCampoReportePNDCuadrante))]
    [KnownType(typeof(JuntaCampoReportePNDSector))]
    [Serializable]
    public partial class Defecto: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int DefectoID
        {
            get { return _defectoID; }
            set
            {
                if (_defectoID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'DefectoID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _defectoID = value;
                    OnPropertyChanged("DefectoID");
                }
            }
        }
        private int _defectoID;
    
        [DataMember]
        public int TipoPruebaID
        {
            get { return _tipoPruebaID; }
            set
            {
                if (_tipoPruebaID != value)
                {
                    ChangeTracker.RecordOriginalValue("TipoPruebaID", _tipoPruebaID);
                    if (!IsDeserializing)
                    {
                        if (TipoPrueba != null && TipoPrueba.TipoPruebaID != value)
                        {
                            TipoPrueba = null;
                        }
                    }
                    _tipoPruebaID = value;
                    OnPropertyChanged("TipoPruebaID");
                }
            }
        }
        private int _tipoPruebaID;
    
        [DataMember]
        public string Nombre
        {
            get { return _nombre; }
            set
            {
                if (_nombre != value)
                {
                    _nombre = value;
                    OnPropertyChanged("Nombre");
                }
            }
        }
        private string _nombre;
    
        [DataMember]
        public string Descripcion
        {
            get { return _descripcion; }
            set
            {
                if (_descripcion != value)
                {
                    _descripcion = value;
                    OnPropertyChanged("Descripcion");
                }
            }
        }
        private string _descripcion;
    
        [DataMember]
        public Nullable<System.Guid> UsuarioModifica
        {
            get { return _usuarioModifica; }
            set
            {
                if (_usuarioModifica != value)
                {
                    _usuarioModifica = value;
                    OnPropertyChanged("UsuarioModifica");
                }
            }
        }
        private Nullable<System.Guid> _usuarioModifica;
    
        [DataMember]
        public Nullable<System.DateTime> FechaModificacion
        {
            get { return _fechaModificacion; }
            set
            {
                if (_fechaModificacion != value)
                {
                    _fechaModificacion = value;
                    OnPropertyChanged("FechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _fechaModificacion;
    
        [DataMember]
        public byte[] VersionRegistro
        {
            get { return _versionRegistro; }
            set
            {
                if (_versionRegistro != value)
                {
                    ChangeTracker.RecordOriginalValue("VersionRegistro", _versionRegistro);
                    _versionRegistro = value;
                    OnPropertyChanged("VersionRegistro");
                }
            }
        }
        private byte[] _versionRegistro;
    
        [DataMember]
        public string NombreIngles
        {
            get { return _nombreIngles; }
            set
            {
                if (_nombreIngles != value)
                {
                    _nombreIngles = value;
                    OnPropertyChanged("NombreIngles");
                }
            }
        }
        private string _nombreIngles;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public TipoPrueba TipoPrueba
        {
            get { return _tipoPrueba; }
            set
            {
                if (!ReferenceEquals(_tipoPrueba, value))
                {
                    var previousValue = _tipoPrueba;
                    _tipoPrueba = value;
                    FixupTipoPrueba(previousValue);
                    OnNavigationPropertyChanged("TipoPrueba");
                }
            }
        }
        private TipoPrueba _tipoPrueba;
    
        [DataMember]
        public TrackableCollection<JuntaReportePndCuadrante> JuntaReportePndCuadrante
        {
            get
            {
                if (_juntaReportePndCuadrante == null)
                {
                    _juntaReportePndCuadrante = new TrackableCollection<JuntaReportePndCuadrante>();
                    _juntaReportePndCuadrante.CollectionChanged += FixupJuntaReportePndCuadrante;
                }
                return _juntaReportePndCuadrante;
            }
            set
            {
                if (!ReferenceEquals(_juntaReportePndCuadrante, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_juntaReportePndCuadrante != null)
                    {
                        _juntaReportePndCuadrante.CollectionChanged -= FixupJuntaReportePndCuadrante;
                    }
                    _juntaReportePndCuadrante = value;
                    if (_juntaReportePndCuadrante != null)
                    {
                        _juntaReportePndCuadrante.CollectionChanged += FixupJuntaReportePndCuadrante;
                    }
                    OnNavigationPropertyChanged("JuntaReportePndCuadrante");
                }
            }
        }
        private TrackableCollection<JuntaReportePndCuadrante> _juntaReportePndCuadrante;
    
        [DataMember]
        public TrackableCollection<JuntaReportePndSector> JuntaReportePndSector
        {
            get
            {
                if (_juntaReportePndSector == null)
                {
                    _juntaReportePndSector = new TrackableCollection<JuntaReportePndSector>();
                    _juntaReportePndSector.CollectionChanged += FixupJuntaReportePndSector;
                }
                return _juntaReportePndSector;
            }
            set
            {
                if (!ReferenceEquals(_juntaReportePndSector, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_juntaReportePndSector != null)
                    {
                        _juntaReportePndSector.CollectionChanged -= FixupJuntaReportePndSector;
                    }
                    _juntaReportePndSector = value;
                    if (_juntaReportePndSector != null)
                    {
                        _juntaReportePndSector.CollectionChanged += FixupJuntaReportePndSector;
                    }
                    OnNavigationPropertyChanged("JuntaReportePndSector");
                }
            }
        }
        private TrackableCollection<JuntaReportePndSector> _juntaReportePndSector;
    
        [DataMember]
        public TrackableCollection<JuntaInspeccionVisualDefecto> JuntaInspeccionVisualDefecto
        {
            get
            {
                if (_juntaInspeccionVisualDefecto == null)
                {
                    _juntaInspeccionVisualDefecto = new TrackableCollection<JuntaInspeccionVisualDefecto>();
                    _juntaInspeccionVisualDefecto.CollectionChanged += FixupJuntaInspeccionVisualDefecto;
                }
                return _juntaInspeccionVisualDefecto;
            }
            set
            {
                if (!ReferenceEquals(_juntaInspeccionVisualDefecto, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_juntaInspeccionVisualDefecto != null)
                    {
                        _juntaInspeccionVisualDefecto.CollectionChanged -= FixupJuntaInspeccionVisualDefecto;
                    }
                    _juntaInspeccionVisualDefecto = value;
                    if (_juntaInspeccionVisualDefecto != null)
                    {
                        _juntaInspeccionVisualDefecto.CollectionChanged += FixupJuntaInspeccionVisualDefecto;
                    }
                    OnNavigationPropertyChanged("JuntaInspeccionVisualDefecto");
                }
            }
        }
        private TrackableCollection<JuntaInspeccionVisualDefecto> _juntaInspeccionVisualDefecto;
    
        [DataMember]
        public TrackableCollection<JuntaCampoInspeccionVisualDefecto> JuntaCampoInspeccionVisualDefecto
        {
            get
            {
                if (_juntaCampoInspeccionVisualDefecto == null)
                {
                    _juntaCampoInspeccionVisualDefecto = new TrackableCollection<JuntaCampoInspeccionVisualDefecto>();
                    _juntaCampoInspeccionVisualDefecto.CollectionChanged += FixupJuntaCampoInspeccionVisualDefecto;
                }
                return _juntaCampoInspeccionVisualDefecto;
            }
            set
            {
                if (!ReferenceEquals(_juntaCampoInspeccionVisualDefecto, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_juntaCampoInspeccionVisualDefecto != null)
                    {
                        _juntaCampoInspeccionVisualDefecto.CollectionChanged -= FixupJuntaCampoInspeccionVisualDefecto;
                    }
                    _juntaCampoInspeccionVisualDefecto = value;
                    if (_juntaCampoInspeccionVisualDefecto != null)
                    {
                        _juntaCampoInspeccionVisualDefecto.CollectionChanged += FixupJuntaCampoInspeccionVisualDefecto;
                    }
                    OnNavigationPropertyChanged("JuntaCampoInspeccionVisualDefecto");
                }
            }
        }
        private TrackableCollection<JuntaCampoInspeccionVisualDefecto> _juntaCampoInspeccionVisualDefecto;
    
        [DataMember]
        public TrackableCollection<JuntaCampoReportePNDCuadrante> JuntaCampoReportePNDCuadrante
        {
            get
            {
                if (_juntaCampoReportePNDCuadrante == null)
                {
                    _juntaCampoReportePNDCuadrante = new TrackableCollection<JuntaCampoReportePNDCuadrante>();
                    _juntaCampoReportePNDCuadrante.CollectionChanged += FixupJuntaCampoReportePNDCuadrante;
                }
                return _juntaCampoReportePNDCuadrante;
            }
            set
            {
                if (!ReferenceEquals(_juntaCampoReportePNDCuadrante, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_juntaCampoReportePNDCuadrante != null)
                    {
                        _juntaCampoReportePNDCuadrante.CollectionChanged -= FixupJuntaCampoReportePNDCuadrante;
                    }
                    _juntaCampoReportePNDCuadrante = value;
                    if (_juntaCampoReportePNDCuadrante != null)
                    {
                        _juntaCampoReportePNDCuadrante.CollectionChanged += FixupJuntaCampoReportePNDCuadrante;
                    }
                    OnNavigationPropertyChanged("JuntaCampoReportePNDCuadrante");
                }
            }
        }
        private TrackableCollection<JuntaCampoReportePNDCuadrante> _juntaCampoReportePNDCuadrante;
    
        [DataMember]
        public TrackableCollection<JuntaCampoReportePNDSector> JuntaCampoReportePNDSector
        {
            get
            {
                if (_juntaCampoReportePNDSector == null)
                {
                    _juntaCampoReportePNDSector = new TrackableCollection<JuntaCampoReportePNDSector>();
                    _juntaCampoReportePNDSector.CollectionChanged += FixupJuntaCampoReportePNDSector;
                }
                return _juntaCampoReportePNDSector;
            }
            set
            {
                if (!ReferenceEquals(_juntaCampoReportePNDSector, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_juntaCampoReportePNDSector != null)
                    {
                        _juntaCampoReportePNDSector.CollectionChanged -= FixupJuntaCampoReportePNDSector;
                    }
                    _juntaCampoReportePNDSector = value;
                    if (_juntaCampoReportePNDSector != null)
                    {
                        _juntaCampoReportePNDSector.CollectionChanged += FixupJuntaCampoReportePNDSector;
                    }
                    OnNavigationPropertyChanged("JuntaCampoReportePNDSector");
                }
            }
        }
        private TrackableCollection<JuntaCampoReportePNDSector> _juntaCampoReportePNDSector;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
    	public void OnDeserializedMethod(StreamingContext context)
    	{
    		IsDeserializing = false;
    		ChangeTracker.ChangeTrackingEnabled = true;
    			if (_juntaReportePndCuadrante != null)
    		{
    			_juntaReportePndCuadrante.CollectionChanged -= FixupJuntaReportePndCuadrante;
    			_juntaReportePndCuadrante.CollectionChanged += FixupJuntaReportePndCuadrante;
    			}
    			if (_juntaReportePndSector != null)
    		{
    			_juntaReportePndSector.CollectionChanged -= FixupJuntaReportePndSector;
    			_juntaReportePndSector.CollectionChanged += FixupJuntaReportePndSector;
    			}
    			if (_juntaInspeccionVisualDefecto != null)
    		{
    			_juntaInspeccionVisualDefecto.CollectionChanged -= FixupJuntaInspeccionVisualDefecto;
    			_juntaInspeccionVisualDefecto.CollectionChanged += FixupJuntaInspeccionVisualDefecto;
    			}
    			if (_juntaCampoInspeccionVisualDefecto != null)
    		{
    			_juntaCampoInspeccionVisualDefecto.CollectionChanged -= FixupJuntaCampoInspeccionVisualDefecto;
    			_juntaCampoInspeccionVisualDefecto.CollectionChanged += FixupJuntaCampoInspeccionVisualDefecto;
    			}
    			if (_juntaCampoReportePNDCuadrante != null)
    		{
    			_juntaCampoReportePNDCuadrante.CollectionChanged -= FixupJuntaCampoReportePNDCuadrante;
    			_juntaCampoReportePNDCuadrante.CollectionChanged += FixupJuntaCampoReportePNDCuadrante;
    			}
    			if (_juntaCampoReportePNDSector != null)
    		{
    			_juntaCampoReportePNDSector.CollectionChanged -= FixupJuntaCampoReportePNDSector;
    			_juntaCampoReportePNDSector.CollectionChanged += FixupJuntaCampoReportePNDSector;
    			}
    		}
    
    
        protected virtual void ClearNavigationProperties()
        {
            TipoPrueba = null;
            JuntaReportePndCuadrante.Clear();
            JuntaReportePndSector.Clear();
            JuntaInspeccionVisualDefecto.Clear();
            JuntaCampoInspeccionVisualDefecto.Clear();
            JuntaCampoReportePNDCuadrante.Clear();
            JuntaCampoReportePNDSector.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupTipoPrueba(TipoPrueba previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Defecto.Contains(this))
            {
                previousValue.Defecto.Remove(this);
            }
    
            if (TipoPrueba != null)
            {
                if (!TipoPrueba.Defecto.Contains(this))
                {
                    TipoPrueba.Defecto.Add(this);
                }
    
                TipoPruebaID = TipoPrueba.TipoPruebaID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TipoPrueba")
                    && (ChangeTracker.OriginalValues["TipoPrueba"] == TipoPrueba))
                {
                    ChangeTracker.OriginalValues.Remove("TipoPrueba");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TipoPrueba", previousValue);
                }
                if (TipoPrueba != null && !TipoPrueba.ChangeTracker.ChangeTrackingEnabled)
                {
                    TipoPrueba.StartTracking();
                }
            }
        }
    
        private void FixupJuntaReportePndCuadrante(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (JuntaReportePndCuadrante item in e.NewItems)
                {
                    item.Defecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("JuntaReportePndCuadrante", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (JuntaReportePndCuadrante item in e.OldItems)
                {
                    if (ReferenceEquals(item.Defecto, this))
                    {
                        item.Defecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("JuntaReportePndCuadrante", item);
                    }
                }
            }
        }
    
        private void FixupJuntaReportePndSector(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (JuntaReportePndSector item in e.NewItems)
                {
                    item.Defecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("JuntaReportePndSector", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (JuntaReportePndSector item in e.OldItems)
                {
                    if (ReferenceEquals(item.Defecto, this))
                    {
                        item.Defecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("JuntaReportePndSector", item);
                    }
                }
            }
        }
    
        private void FixupJuntaInspeccionVisualDefecto(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (JuntaInspeccionVisualDefecto item in e.NewItems)
                {
                    item.Defecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("JuntaInspeccionVisualDefecto", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (JuntaInspeccionVisualDefecto item in e.OldItems)
                {
                    if (ReferenceEquals(item.Defecto, this))
                    {
                        item.Defecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("JuntaInspeccionVisualDefecto", item);
                    }
                }
            }
        }
    
        private void FixupJuntaCampoInspeccionVisualDefecto(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (JuntaCampoInspeccionVisualDefecto item in e.NewItems)
                {
                    item.Defecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("JuntaCampoInspeccionVisualDefecto", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (JuntaCampoInspeccionVisualDefecto item in e.OldItems)
                {
                    if (ReferenceEquals(item.Defecto, this))
                    {
                        item.Defecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("JuntaCampoInspeccionVisualDefecto", item);
                    }
                }
            }
        }
    
        private void FixupJuntaCampoReportePNDCuadrante(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (JuntaCampoReportePNDCuadrante item in e.NewItems)
                {
                    item.Defecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("JuntaCampoReportePNDCuadrante", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (JuntaCampoReportePNDCuadrante item in e.OldItems)
                {
                    if (ReferenceEquals(item.Defecto, this))
                    {
                        item.Defecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("JuntaCampoReportePNDCuadrante", item);
                    }
                }
            }
        }
    
        private void FixupJuntaCampoReportePNDSector(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (JuntaCampoReportePNDSector item in e.NewItems)
                {
                    item.Defecto = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("JuntaCampoReportePNDSector", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (JuntaCampoReportePNDSector item in e.OldItems)
                {
                    if (ReferenceEquals(item.Defecto, this))
                    {
                        item.Defecto = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("JuntaCampoReportePNDSector", item);
                    }
                }
            }
        }

        #endregion

    }
}
