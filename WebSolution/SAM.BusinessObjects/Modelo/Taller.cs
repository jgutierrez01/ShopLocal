//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SAM.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Patio))]
    [KnownType(typeof(OrdenTrabajo))]
    [KnownType(typeof(JuntaSoldadura))]
    [KnownType(typeof(Estacion))]
    [KnownType(typeof(BastonSpool))]
    [KnownType(typeof(JuntaArmado))]
    [KnownType(typeof(Cortador))]
    [KnownType(typeof(Despachador))]
    [KnownType(typeof(JuntaInspeccionVisual))]
    [KnownType(typeof(ReporteDimensionalDetalle))]
    [KnownType(typeof(Inspector))]
    [Serializable]
    public partial class Taller: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int TallerID
        {
            get { return _tallerID; }
            set
            {
                if (_tallerID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'TallerID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _tallerID = value;
                    OnPropertyChanged("TallerID");
                }
            }
        }
        private int _tallerID;
    
        [DataMember]
        public int PatioID
        {
            get { return _patioID; }
            set
            {
                if (_patioID != value)
                {
                    ChangeTracker.RecordOriginalValue("PatioID", _patioID);
                    if (!IsDeserializing)
                    {
                        if (Patio != null && Patio.PatioID != value)
                        {
                            Patio = null;
                        }
                    }
                    _patioID = value;
                    OnPropertyChanged("PatioID");
                }
            }
        }
        private int _patioID;
    
        [DataMember]
        public string Nombre
        {
            get { return _nombre; }
            set
            {
                if (_nombre != value)
                {
                    _nombre = value;
                    OnPropertyChanged("Nombre");
                }
            }
        }
        private string _nombre;
    
        [DataMember]
        public Nullable<System.Guid> UsuarioModifica
        {
            get { return _usuarioModifica; }
            set
            {
                if (_usuarioModifica != value)
                {
                    _usuarioModifica = value;
                    OnPropertyChanged("UsuarioModifica");
                }
            }
        }
        private Nullable<System.Guid> _usuarioModifica;
    
        [DataMember]
        public Nullable<System.DateTime> FechaModificacion
        {
            get { return _fechaModificacion; }
            set
            {
                if (_fechaModificacion != value)
                {
                    _fechaModificacion = value;
                    OnPropertyChanged("FechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _fechaModificacion;
    
        [DataMember]
        public byte[] VersionRegistro
        {
            get { return _versionRegistro; }
            set
            {
                if (_versionRegistro != value)
                {
                    ChangeTracker.RecordOriginalValue("VersionRegistro", _versionRegistro);
                    _versionRegistro = value;
                    OnPropertyChanged("VersionRegistro");
                }
            }
        }
        private byte[] _versionRegistro;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public Patio Patio
        {
            get { return _patio; }
            set
            {
                if (!ReferenceEquals(_patio, value))
                {
                    var previousValue = _patio;
                    _patio = value;
                    FixupPatio(previousValue);
                    OnNavigationPropertyChanged("Patio");
                }
            }
        }
        private Patio _patio;
    
        [DataMember]
        public TrackableCollection<OrdenTrabajo> OrdenTrabajo
        {
            get
            {
                if (_ordenTrabajo == null)
                {
                    _ordenTrabajo = new TrackableCollection<OrdenTrabajo>();
                    _ordenTrabajo.CollectionChanged += FixupOrdenTrabajo;
                }
                return _ordenTrabajo;
            }
            set
            {
                if (!ReferenceEquals(_ordenTrabajo, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_ordenTrabajo != null)
                    {
                        _ordenTrabajo.CollectionChanged -= FixupOrdenTrabajo;
                    }
                    _ordenTrabajo = value;
                    if (_ordenTrabajo != null)
                    {
                        _ordenTrabajo.CollectionChanged += FixupOrdenTrabajo;
                    }
                    OnNavigationPropertyChanged("OrdenTrabajo");
                }
            }
        }
        private TrackableCollection<OrdenTrabajo> _ordenTrabajo;
    
        [DataMember]
        public TrackableCollection<JuntaSoldadura> JuntaSoldadura
        {
            get
            {
                if (_juntaSoldadura == null)
                {
                    _juntaSoldadura = new TrackableCollection<JuntaSoldadura>();
                    _juntaSoldadura.CollectionChanged += FixupJuntaSoldadura;
                }
                return _juntaSoldadura;
            }
            set
            {
                if (!ReferenceEquals(_juntaSoldadura, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_juntaSoldadura != null)
                    {
                        _juntaSoldadura.CollectionChanged -= FixupJuntaSoldadura;
                    }
                    _juntaSoldadura = value;
                    if (_juntaSoldadura != null)
                    {
                        _juntaSoldadura.CollectionChanged += FixupJuntaSoldadura;
                    }
                    OnNavigationPropertyChanged("JuntaSoldadura");
                }
            }
        }
        private TrackableCollection<JuntaSoldadura> _juntaSoldadura;
    
        [DataMember]
        public TrackableCollection<Estacion> Estacion
        {
            get
            {
                if (_estacion == null)
                {
                    _estacion = new TrackableCollection<Estacion>();
                    _estacion.CollectionChanged += FixupEstacion;
                }
                return _estacion;
            }
            set
            {
                if (!ReferenceEquals(_estacion, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_estacion != null)
                    {
                        _estacion.CollectionChanged -= FixupEstacion;
                    }
                    _estacion = value;
                    if (_estacion != null)
                    {
                        _estacion.CollectionChanged += FixupEstacion;
                    }
                    OnNavigationPropertyChanged("Estacion");
                }
            }
        }
        private TrackableCollection<Estacion> _estacion;
    
        [DataMember]
        public TrackableCollection<BastonSpool> BastonSpool
        {
            get
            {
                if (_bastonSpool == null)
                {
                    _bastonSpool = new TrackableCollection<BastonSpool>();
                    _bastonSpool.CollectionChanged += FixupBastonSpool;
                }
                return _bastonSpool;
            }
            set
            {
                if (!ReferenceEquals(_bastonSpool, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_bastonSpool != null)
                    {
                        _bastonSpool.CollectionChanged -= FixupBastonSpool;
                    }
                    _bastonSpool = value;
                    if (_bastonSpool != null)
                    {
                        _bastonSpool.CollectionChanged += FixupBastonSpool;
                    }
                    OnNavigationPropertyChanged("BastonSpool");
                }
            }
        }
        private TrackableCollection<BastonSpool> _bastonSpool;
    
        [DataMember]
        public TrackableCollection<JuntaArmado> JuntaArmado
        {
            get
            {
                if (_juntaArmado == null)
                {
                    _juntaArmado = new TrackableCollection<JuntaArmado>();
                    _juntaArmado.CollectionChanged += FixupJuntaArmado;
                }
                return _juntaArmado;
            }
            set
            {
                if (!ReferenceEquals(_juntaArmado, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_juntaArmado != null)
                    {
                        _juntaArmado.CollectionChanged -= FixupJuntaArmado;
                    }
                    _juntaArmado = value;
                    if (_juntaArmado != null)
                    {
                        _juntaArmado.CollectionChanged += FixupJuntaArmado;
                    }
                    OnNavigationPropertyChanged("JuntaArmado");
                }
            }
        }
        private TrackableCollection<JuntaArmado> _juntaArmado;
    
        [DataMember]
        public TrackableCollection<Cortador> Cortador
        {
            get
            {
                if (_cortador == null)
                {
                    _cortador = new TrackableCollection<Cortador>();
                    _cortador.CollectionChanged += FixupCortador;
                }
                return _cortador;
            }
            set
            {
                if (!ReferenceEquals(_cortador, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cortador != null)
                    {
                        _cortador.CollectionChanged -= FixupCortador;
                    }
                    _cortador = value;
                    if (_cortador != null)
                    {
                        _cortador.CollectionChanged += FixupCortador;
                    }
                    OnNavigationPropertyChanged("Cortador");
                }
            }
        }
        private TrackableCollection<Cortador> _cortador;
    
        [DataMember]
        public TrackableCollection<Despachador> Despachador
        {
            get
            {
                if (_despachador == null)
                {
                    _despachador = new TrackableCollection<Despachador>();
                    _despachador.CollectionChanged += FixupDespachador;
                }
                return _despachador;
            }
            set
            {
                if (!ReferenceEquals(_despachador, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_despachador != null)
                    {
                        _despachador.CollectionChanged -= FixupDespachador;
                    }
                    _despachador = value;
                    if (_despachador != null)
                    {
                        _despachador.CollectionChanged += FixupDespachador;
                    }
                    OnNavigationPropertyChanged("Despachador");
                }
            }
        }
        private TrackableCollection<Despachador> _despachador;
    
        [DataMember]
        public TrackableCollection<JuntaInspeccionVisual> JuntaInspeccionVisual
        {
            get
            {
                if (_juntaInspeccionVisual == null)
                {
                    _juntaInspeccionVisual = new TrackableCollection<JuntaInspeccionVisual>();
                    _juntaInspeccionVisual.CollectionChanged += FixupJuntaInspeccionVisual;
                }
                return _juntaInspeccionVisual;
            }
            set
            {
                if (!ReferenceEquals(_juntaInspeccionVisual, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_juntaInspeccionVisual != null)
                    {
                        _juntaInspeccionVisual.CollectionChanged -= FixupJuntaInspeccionVisual;
                    }
                    _juntaInspeccionVisual = value;
                    if (_juntaInspeccionVisual != null)
                    {
                        _juntaInspeccionVisual.CollectionChanged += FixupJuntaInspeccionVisual;
                    }
                    OnNavigationPropertyChanged("JuntaInspeccionVisual");
                }
            }
        }
        private TrackableCollection<JuntaInspeccionVisual> _juntaInspeccionVisual;
    
        [DataMember]
        public TrackableCollection<ReporteDimensionalDetalle> ReporteDimensionalDetalle
        {
            get
            {
                if (_reporteDimensionalDetalle == null)
                {
                    _reporteDimensionalDetalle = new TrackableCollection<ReporteDimensionalDetalle>();
                    _reporteDimensionalDetalle.CollectionChanged += FixupReporteDimensionalDetalle;
                }
                return _reporteDimensionalDetalle;
            }
            set
            {
                if (!ReferenceEquals(_reporteDimensionalDetalle, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_reporteDimensionalDetalle != null)
                    {
                        _reporteDimensionalDetalle.CollectionChanged -= FixupReporteDimensionalDetalle;
                    }
                    _reporteDimensionalDetalle = value;
                    if (_reporteDimensionalDetalle != null)
                    {
                        _reporteDimensionalDetalle.CollectionChanged += FixupReporteDimensionalDetalle;
                    }
                    OnNavigationPropertyChanged("ReporteDimensionalDetalle");
                }
            }
        }
        private TrackableCollection<ReporteDimensionalDetalle> _reporteDimensionalDetalle;
    
        [DataMember]
        public TrackableCollection<Inspector> Inspector
        {
            get
            {
                if (_inspector == null)
                {
                    _inspector = new TrackableCollection<Inspector>();
                    _inspector.CollectionChanged += FixupInspector;
                }
                return _inspector;
            }
            set
            {
                if (!ReferenceEquals(_inspector, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_inspector != null)
                    {
                        _inspector.CollectionChanged -= FixupInspector;
                    }
                    _inspector = value;
                    if (_inspector != null)
                    {
                        _inspector.CollectionChanged += FixupInspector;
                    }
                    OnNavigationPropertyChanged("Inspector");
                }
            }
        }
        private TrackableCollection<Inspector> _inspector;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
    	public void OnDeserializedMethod(StreamingContext context)
    	{
    		IsDeserializing = false;
    		ChangeTracker.ChangeTrackingEnabled = true;
    			if (_ordenTrabajo != null)
    		{
    			_ordenTrabajo.CollectionChanged -= FixupOrdenTrabajo;
    			_ordenTrabajo.CollectionChanged += FixupOrdenTrabajo;
    			}
    			if (_juntaSoldadura != null)
    		{
    			_juntaSoldadura.CollectionChanged -= FixupJuntaSoldadura;
    			_juntaSoldadura.CollectionChanged += FixupJuntaSoldadura;
    			}
    			if (_estacion != null)
    		{
    			_estacion.CollectionChanged -= FixupEstacion;
    			_estacion.CollectionChanged += FixupEstacion;
    			}
    			if (_bastonSpool != null)
    		{
    			_bastonSpool.CollectionChanged -= FixupBastonSpool;
    			_bastonSpool.CollectionChanged += FixupBastonSpool;
    			}
    			if (_juntaArmado != null)
    		{
    			_juntaArmado.CollectionChanged -= FixupJuntaArmado;
    			_juntaArmado.CollectionChanged += FixupJuntaArmado;
    			}
    			if (_cortador != null)
    		{
    			_cortador.CollectionChanged -= FixupCortador;
    			_cortador.CollectionChanged += FixupCortador;
    			}
    			if (_despachador != null)
    		{
    			_despachador.CollectionChanged -= FixupDespachador;
    			_despachador.CollectionChanged += FixupDespachador;
    			}
    			if (_juntaInspeccionVisual != null)
    		{
    			_juntaInspeccionVisual.CollectionChanged -= FixupJuntaInspeccionVisual;
    			_juntaInspeccionVisual.CollectionChanged += FixupJuntaInspeccionVisual;
    			}
    			if (_reporteDimensionalDetalle != null)
    		{
    			_reporteDimensionalDetalle.CollectionChanged -= FixupReporteDimensionalDetalle;
    			_reporteDimensionalDetalle.CollectionChanged += FixupReporteDimensionalDetalle;
    			}
    			if (_inspector != null)
    		{
    			_inspector.CollectionChanged -= FixupInspector;
    			_inspector.CollectionChanged += FixupInspector;
    			}
    		}
    
    
        protected virtual void ClearNavigationProperties()
        {
            Patio = null;
            OrdenTrabajo.Clear();
            JuntaSoldadura.Clear();
            Estacion.Clear();
            BastonSpool.Clear();
            JuntaArmado.Clear();
            Cortador.Clear();
            Despachador.Clear();
            JuntaInspeccionVisual.Clear();
            ReporteDimensionalDetalle.Clear();
            Inspector.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupPatio(Patio previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Taller.Contains(this))
            {
                previousValue.Taller.Remove(this);
            }
    
            if (Patio != null)
            {
                if (!Patio.Taller.Contains(this))
                {
                    Patio.Taller.Add(this);
                }
    
                PatioID = Patio.PatioID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Patio")
                    && (ChangeTracker.OriginalValues["Patio"] == Patio))
                {
                    ChangeTracker.OriginalValues.Remove("Patio");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Patio", previousValue);
                }
                if (Patio != null && !Patio.ChangeTracker.ChangeTrackingEnabled)
                {
                    Patio.StartTracking();
                }
            }
        }
    
        private void FixupOrdenTrabajo(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (OrdenTrabajo item in e.NewItems)
                {
                    item.Taller = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("OrdenTrabajo", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (OrdenTrabajo item in e.OldItems)
                {
                    if (ReferenceEquals(item.Taller, this))
                    {
                        item.Taller = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("OrdenTrabajo", item);
                    }
                }
            }
        }
    
        private void FixupJuntaSoldadura(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (JuntaSoldadura item in e.NewItems)
                {
                    item.Taller = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("JuntaSoldadura", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (JuntaSoldadura item in e.OldItems)
                {
                    if (ReferenceEquals(item.Taller, this))
                    {
                        item.Taller = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("JuntaSoldadura", item);
                    }
                }
            }
        }
    
        private void FixupEstacion(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Estacion item in e.NewItems)
                {
                    item.Taller = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Estacion", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Estacion item in e.OldItems)
                {
                    if (ReferenceEquals(item.Taller, this))
                    {
                        item.Taller = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Estacion", item);
                    }
                }
            }
        }
    
        private void FixupBastonSpool(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (BastonSpool item in e.NewItems)
                {
                    item.Taller = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("BastonSpool", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BastonSpool item in e.OldItems)
                {
                    if (ReferenceEquals(item.Taller, this))
                    {
                        item.Taller = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("BastonSpool", item);
                    }
                }
            }
        }
    
        private void FixupJuntaArmado(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (JuntaArmado item in e.NewItems)
                {
                    item.Taller = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("JuntaArmado", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (JuntaArmado item in e.OldItems)
                {
                    if (ReferenceEquals(item.Taller, this))
                    {
                        item.Taller = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("JuntaArmado", item);
                    }
                }
            }
        }
    
        private void FixupCortador(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Cortador item in e.NewItems)
                {
                    item.Taller = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Cortador", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Cortador item in e.OldItems)
                {
                    if (ReferenceEquals(item.Taller, this))
                    {
                        item.Taller = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Cortador", item);
                    }
                }
            }
        }
    
        private void FixupDespachador(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Despachador item in e.NewItems)
                {
                    item.Taller = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Despachador", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Despachador item in e.OldItems)
                {
                    if (ReferenceEquals(item.Taller, this))
                    {
                        item.Taller = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Despachador", item);
                    }
                }
            }
        }
    
        private void FixupJuntaInspeccionVisual(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (JuntaInspeccionVisual item in e.NewItems)
                {
                    item.Taller = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("JuntaInspeccionVisual", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (JuntaInspeccionVisual item in e.OldItems)
                {
                    if (ReferenceEquals(item.Taller, this))
                    {
                        item.Taller = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("JuntaInspeccionVisual", item);
                    }
                }
            }
        }
    
        private void FixupReporteDimensionalDetalle(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ReporteDimensionalDetalle item in e.NewItems)
                {
                    item.Taller = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ReporteDimensionalDetalle", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ReporteDimensionalDetalle item in e.OldItems)
                {
                    if (ReferenceEquals(item.Taller, this))
                    {
                        item.Taller = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ReporteDimensionalDetalle", item);
                    }
                }
            }
        }
    
        private void FixupInspector(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Inspector item in e.NewItems)
                {
                    item.Taller = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Inspector", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Inspector item in e.OldItems)
                {
                    if (ReferenceEquals(item.Taller, this))
                    {
                        item.Taller = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Inspector", item);
                    }
                }
            }
        }

        #endregion

    }
}
