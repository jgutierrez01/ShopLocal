//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SAM.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(NumeroUnico))]
    [KnownType(typeof(Recepcion))]
    [KnownType(typeof(NumeroUnicoMovimiento))]
    [Serializable]
    public partial class RecepcionNumeroUnico: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int RecepcionNumeroUnicoID
        {
            get { return _recepcionNumeroUnicoID; }
            set
            {
                if (_recepcionNumeroUnicoID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'RecepcionNumeroUnicoID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _recepcionNumeroUnicoID = value;
                    OnPropertyChanged("RecepcionNumeroUnicoID");
                }
            }
        }
        private int _recepcionNumeroUnicoID;
    
        [DataMember]
        public int RecepcionID
        {
            get { return _recepcionID; }
            set
            {
                if (_recepcionID != value)
                {
                    ChangeTracker.RecordOriginalValue("RecepcionID", _recepcionID);
                    if (!IsDeserializing)
                    {
                        if (Recepcion != null && Recepcion.RecepcionID != value)
                        {
                            Recepcion = null;
                        }
                    }
                    _recepcionID = value;
                    OnPropertyChanged("RecepcionID");
                }
            }
        }
        private int _recepcionID;
    
        [DataMember]
        public int NumeroUnicoID
        {
            get { return _numeroUnicoID; }
            set
            {
                if (_numeroUnicoID != value)
                {
                    ChangeTracker.RecordOriginalValue("NumeroUnicoID", _numeroUnicoID);
                    if (!IsDeserializing)
                    {
                        if (NumeroUnico != null && NumeroUnico.NumeroUnicoID != value)
                        {
                            NumeroUnico = null;
                        }
                    }
                    _numeroUnicoID = value;
                    OnPropertyChanged("NumeroUnicoID");
                }
            }
        }
        private int _numeroUnicoID;
    
        [DataMember]
        public Nullable<System.Guid> UsuarioModifica
        {
            get { return _usuarioModifica; }
            set
            {
                if (_usuarioModifica != value)
                {
                    _usuarioModifica = value;
                    OnPropertyChanged("UsuarioModifica");
                }
            }
        }
        private Nullable<System.Guid> _usuarioModifica;
    
        [DataMember]
        public Nullable<System.DateTime> FechaModificacion
        {
            get { return _fechaModificacion; }
            set
            {
                if (_fechaModificacion != value)
                {
                    _fechaModificacion = value;
                    OnPropertyChanged("FechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _fechaModificacion;
    
        [DataMember]
        public byte[] VersionRegistro
        {
            get { return _versionRegistro; }
            set
            {
                if (_versionRegistro != value)
                {
                    ChangeTracker.RecordOriginalValue("VersionRegistro", _versionRegistro);
                    _versionRegistro = value;
                    OnPropertyChanged("VersionRegistro");
                }
            }
        }
        private byte[] _versionRegistro;
    
        [DataMember]
        public Nullable<int> NumeroUnicoMovimientoID
        {
            get { return _numeroUnicoMovimientoID; }
            set
            {
                if (_numeroUnicoMovimientoID != value)
                {
                    ChangeTracker.RecordOriginalValue("NumeroUnicoMovimientoID", _numeroUnicoMovimientoID);
                    if (!IsDeserializing)
                    {
                        if (NumeroUnicoMovimiento != null && NumeroUnicoMovimiento.NumeroUnicoMovimientoID != value)
                        {
                            NumeroUnicoMovimiento = null;
                        }
                    }
                    _numeroUnicoMovimientoID = value;
                    OnPropertyChanged("NumeroUnicoMovimientoID");
                }
            }
        }
        private Nullable<int> _numeroUnicoMovimientoID;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public NumeroUnico NumeroUnico
        {
            get { return _numeroUnico; }
            set
            {
                if (!ReferenceEquals(_numeroUnico, value))
                {
                    var previousValue = _numeroUnico;
                    _numeroUnico = value;
                    FixupNumeroUnico(previousValue);
                    OnNavigationPropertyChanged("NumeroUnico");
                }
            }
        }
        private NumeroUnico _numeroUnico;
    
        [DataMember]
        public Recepcion Recepcion
        {
            get { return _recepcion; }
            set
            {
                if (!ReferenceEquals(_recepcion, value))
                {
                    var previousValue = _recepcion;
                    _recepcion = value;
                    FixupRecepcion(previousValue);
                    OnNavigationPropertyChanged("Recepcion");
                }
            }
        }
        private Recepcion _recepcion;
    
        [DataMember]
        public NumeroUnicoMovimiento NumeroUnicoMovimiento
        {
            get { return _numeroUnicoMovimiento; }
            set
            {
                if (!ReferenceEquals(_numeroUnicoMovimiento, value))
                {
                    var previousValue = _numeroUnicoMovimiento;
                    _numeroUnicoMovimiento = value;
                    FixupNumeroUnicoMovimiento(previousValue);
                    OnNavigationPropertyChanged("NumeroUnicoMovimiento");
                }
            }
        }
        private NumeroUnicoMovimiento _numeroUnicoMovimiento;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
    	public void OnDeserializedMethod(StreamingContext context)
    	{
    		IsDeserializing = false;
    		ChangeTracker.ChangeTrackingEnabled = true;
    		}
    
    
        protected virtual void ClearNavigationProperties()
        {
            NumeroUnico = null;
            Recepcion = null;
            NumeroUnicoMovimiento = null;
        }

        #endregion

        #region Association Fixup
    
        private void FixupNumeroUnico(NumeroUnico previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RecepcionNumeroUnico.Contains(this))
            {
                previousValue.RecepcionNumeroUnico.Remove(this);
            }
    
            if (NumeroUnico != null)
            {
                if (!NumeroUnico.RecepcionNumeroUnico.Contains(this))
                {
                    NumeroUnico.RecepcionNumeroUnico.Add(this);
                }
    
                NumeroUnicoID = NumeroUnico.NumeroUnicoID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("NumeroUnico")
                    && (ChangeTracker.OriginalValues["NumeroUnico"] == NumeroUnico))
                {
                    ChangeTracker.OriginalValues.Remove("NumeroUnico");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("NumeroUnico", previousValue);
                }
                if (NumeroUnico != null && !NumeroUnico.ChangeTracker.ChangeTrackingEnabled)
                {
                    NumeroUnico.StartTracking();
                }
            }
        }
    
        private void FixupRecepcion(Recepcion previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RecepcionNumeroUnico.Contains(this))
            {
                previousValue.RecepcionNumeroUnico.Remove(this);
            }
    
            if (Recepcion != null)
            {
                if (!Recepcion.RecepcionNumeroUnico.Contains(this))
                {
                    Recepcion.RecepcionNumeroUnico.Add(this);
                }
    
                RecepcionID = Recepcion.RecepcionID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Recepcion")
                    && (ChangeTracker.OriginalValues["Recepcion"] == Recepcion))
                {
                    ChangeTracker.OriginalValues.Remove("Recepcion");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Recepcion", previousValue);
                }
                if (Recepcion != null && !Recepcion.ChangeTracker.ChangeTrackingEnabled)
                {
                    Recepcion.StartTracking();
                }
            }
        }
    
        private void FixupNumeroUnicoMovimiento(NumeroUnicoMovimiento previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RecepcionNumeroUnico.Contains(this))
            {
                previousValue.RecepcionNumeroUnico.Remove(this);
            }
    
            if (NumeroUnicoMovimiento != null)
            {
                if (!NumeroUnicoMovimiento.RecepcionNumeroUnico.Contains(this))
                {
                    NumeroUnicoMovimiento.RecepcionNumeroUnico.Add(this);
                }
    
                NumeroUnicoMovimientoID = NumeroUnicoMovimiento.NumeroUnicoMovimientoID;
            }
            else if (!skipKeys)
            {
                NumeroUnicoMovimientoID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("NumeroUnicoMovimiento")
                    && (ChangeTracker.OriginalValues["NumeroUnicoMovimiento"] == NumeroUnicoMovimiento))
                {
                    ChangeTracker.OriginalValues.Remove("NumeroUnicoMovimiento");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("NumeroUnicoMovimiento", previousValue);
                }
                if (NumeroUnicoMovimiento != null && !NumeroUnicoMovimiento.ChangeTracker.ChangeTrackingEnabled)
                {
                    NumeroUnicoMovimiento.StartTracking();
                }
            }
        }

        #endregion

    }
}
