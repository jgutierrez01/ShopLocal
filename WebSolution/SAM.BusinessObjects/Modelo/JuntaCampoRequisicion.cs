//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SAM.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(JuntaCampo))]
    [KnownType(typeof(JuntaCampoReportePND))]
    [KnownType(typeof(JuntaCampoReporteTT))]
    [KnownType(typeof(RequisicionCampo))]
    [Serializable]
    public partial class JuntaCampoRequisicion: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int JuntaCampoRequisicionID
        {
            get { return _juntaCampoRequisicionID; }
            set
            {
                if (_juntaCampoRequisicionID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'JuntaCampoRequisicionID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _juntaCampoRequisicionID = value;
                    OnPropertyChanged("JuntaCampoRequisicionID");
                }
            }
        }
        private int _juntaCampoRequisicionID;
    
        [DataMember]
        public int RequisicionCampoID
        {
            get { return _requisicionCampoID; }
            set
            {
                if (_requisicionCampoID != value)
                {
                    ChangeTracker.RecordOriginalValue("RequisicionCampoID", _requisicionCampoID);
                    if (!IsDeserializing)
                    {
                        if (RequisicionCampo != null && RequisicionCampo.RequisicionCampoID != value)
                        {
                            RequisicionCampo = null;
                        }
                    }
                    _requisicionCampoID = value;
                    OnPropertyChanged("RequisicionCampoID");
                }
            }
        }
        private int _requisicionCampoID;
    
        [DataMember]
        public int JuntaCampoID
        {
            get { return _juntaCampoID; }
            set
            {
                if (_juntaCampoID != value)
                {
                    ChangeTracker.RecordOriginalValue("JuntaCampoID", _juntaCampoID);
                    if (!IsDeserializing)
                    {
                        if (JuntaCampo != null && JuntaCampo.JuntaCampoID != value)
                        {
                            JuntaCampo = null;
                        }
                    }
                    _juntaCampoID = value;
                    OnPropertyChanged("JuntaCampoID");
                }
            }
        }
        private int _juntaCampoID;
    
        [DataMember]
        public Nullable<System.Guid> UsuarioModifica
        {
            get { return _usuarioModifica; }
            set
            {
                if (_usuarioModifica != value)
                {
                    _usuarioModifica = value;
                    OnPropertyChanged("UsuarioModifica");
                }
            }
        }
        private Nullable<System.Guid> _usuarioModifica;
    
        [DataMember]
        public Nullable<System.DateTime> FechaModificacion
        {
            get { return _fechaModificacion; }
            set
            {
                if (_fechaModificacion != value)
                {
                    _fechaModificacion = value;
                    OnPropertyChanged("FechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _fechaModificacion;
    
        [DataMember]
        public byte[] VersionRegistro
        {
            get { return _versionRegistro; }
            set
            {
                if (_versionRegistro != value)
                {
                    ChangeTracker.RecordOriginalValue("VersionRegistro", _versionRegistro);
                    _versionRegistro = value;
                    OnPropertyChanged("VersionRegistro");
                }
            }
        }
        private byte[] _versionRegistro;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public JuntaCampo JuntaCampo
        {
            get { return _juntaCampo; }
            set
            {
                if (!ReferenceEquals(_juntaCampo, value))
                {
                    var previousValue = _juntaCampo;
                    _juntaCampo = value;
                    FixupJuntaCampo(previousValue);
                    OnNavigationPropertyChanged("JuntaCampo");
                }
            }
        }
        private JuntaCampo _juntaCampo;
    
        [DataMember]
        public TrackableCollection<JuntaCampoReportePND> JuntaCampoReportePND
        {
            get
            {
                if (_juntaCampoReportePND == null)
                {
                    _juntaCampoReportePND = new TrackableCollection<JuntaCampoReportePND>();
                    _juntaCampoReportePND.CollectionChanged += FixupJuntaCampoReportePND;
                }
                return _juntaCampoReportePND;
            }
            set
            {
                if (!ReferenceEquals(_juntaCampoReportePND, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_juntaCampoReportePND != null)
                    {
                        _juntaCampoReportePND.CollectionChanged -= FixupJuntaCampoReportePND;
                    }
                    _juntaCampoReportePND = value;
                    if (_juntaCampoReportePND != null)
                    {
                        _juntaCampoReportePND.CollectionChanged += FixupJuntaCampoReportePND;
                    }
                    OnNavigationPropertyChanged("JuntaCampoReportePND");
                }
            }
        }
        private TrackableCollection<JuntaCampoReportePND> _juntaCampoReportePND;
    
        [DataMember]
        public TrackableCollection<JuntaCampoReporteTT> JuntaCampoReporteTT
        {
            get
            {
                if (_juntaCampoReporteTT == null)
                {
                    _juntaCampoReporteTT = new TrackableCollection<JuntaCampoReporteTT>();
                    _juntaCampoReporteTT.CollectionChanged += FixupJuntaCampoReporteTT;
                }
                return _juntaCampoReporteTT;
            }
            set
            {
                if (!ReferenceEquals(_juntaCampoReporteTT, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_juntaCampoReporteTT != null)
                    {
                        _juntaCampoReporteTT.CollectionChanged -= FixupJuntaCampoReporteTT;
                    }
                    _juntaCampoReporteTT = value;
                    if (_juntaCampoReporteTT != null)
                    {
                        _juntaCampoReporteTT.CollectionChanged += FixupJuntaCampoReporteTT;
                    }
                    OnNavigationPropertyChanged("JuntaCampoReporteTT");
                }
            }
        }
        private TrackableCollection<JuntaCampoReporteTT> _juntaCampoReporteTT;
    
        [DataMember]
        public RequisicionCampo RequisicionCampo
        {
            get { return _requisicionCampo; }
            set
            {
                if (!ReferenceEquals(_requisicionCampo, value))
                {
                    var previousValue = _requisicionCampo;
                    _requisicionCampo = value;
                    FixupRequisicionCampo(previousValue);
                    OnNavigationPropertyChanged("RequisicionCampo");
                }
            }
        }
        private RequisicionCampo _requisicionCampo;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
    	public void OnDeserializedMethod(StreamingContext context)
    	{
    		IsDeserializing = false;
    		ChangeTracker.ChangeTrackingEnabled = true;
    			if (_juntaCampoReportePND != null)
    		{
    			_juntaCampoReportePND.CollectionChanged -= FixupJuntaCampoReportePND;
    			_juntaCampoReportePND.CollectionChanged += FixupJuntaCampoReportePND;
    			}
    			if (_juntaCampoReporteTT != null)
    		{
    			_juntaCampoReporteTT.CollectionChanged -= FixupJuntaCampoReporteTT;
    			_juntaCampoReporteTT.CollectionChanged += FixupJuntaCampoReporteTT;
    			}
    		}
    
    
        protected virtual void ClearNavigationProperties()
        {
            JuntaCampo = null;
            JuntaCampoReportePND.Clear();
            JuntaCampoReporteTT.Clear();
            RequisicionCampo = null;
        }

        #endregion

        #region Association Fixup
    
        private void FixupJuntaCampo(JuntaCampo previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JuntaCampoRequisicion.Contains(this))
            {
                previousValue.JuntaCampoRequisicion.Remove(this);
            }
    
            if (JuntaCampo != null)
            {
                if (!JuntaCampo.JuntaCampoRequisicion.Contains(this))
                {
                    JuntaCampo.JuntaCampoRequisicion.Add(this);
                }
    
                JuntaCampoID = JuntaCampo.JuntaCampoID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("JuntaCampo")
                    && (ChangeTracker.OriginalValues["JuntaCampo"] == JuntaCampo))
                {
                    ChangeTracker.OriginalValues.Remove("JuntaCampo");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("JuntaCampo", previousValue);
                }
                if (JuntaCampo != null && !JuntaCampo.ChangeTracker.ChangeTrackingEnabled)
                {
                    JuntaCampo.StartTracking();
                }
            }
        }
    
        private void FixupRequisicionCampo(RequisicionCampo previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JuntaCampoRequisicion.Contains(this))
            {
                previousValue.JuntaCampoRequisicion.Remove(this);
            }
    
            if (RequisicionCampo != null)
            {
                if (!RequisicionCampo.JuntaCampoRequisicion.Contains(this))
                {
                    RequisicionCampo.JuntaCampoRequisicion.Add(this);
                }
    
                RequisicionCampoID = RequisicionCampo.RequisicionCampoID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("RequisicionCampo")
                    && (ChangeTracker.OriginalValues["RequisicionCampo"] == RequisicionCampo))
                {
                    ChangeTracker.OriginalValues.Remove("RequisicionCampo");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("RequisicionCampo", previousValue);
                }
                if (RequisicionCampo != null && !RequisicionCampo.ChangeTracker.ChangeTrackingEnabled)
                {
                    RequisicionCampo.StartTracking();
                }
            }
        }
    
        private void FixupJuntaCampoReportePND(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (JuntaCampoReportePND item in e.NewItems)
                {
                    item.JuntaCampoRequisicion = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("JuntaCampoReportePND", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (JuntaCampoReportePND item in e.OldItems)
                {
                    if (ReferenceEquals(item.JuntaCampoRequisicion, this))
                    {
                        item.JuntaCampoRequisicion = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("JuntaCampoReportePND", item);
                    }
                }
            }
        }
    
        private void FixupJuntaCampoReporteTT(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (JuntaCampoReporteTT item in e.NewItems)
                {
                    item.JuntaCampoRequisicion = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("JuntaCampoReporteTT", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (JuntaCampoReporteTT item in e.OldItems)
                {
                    if (ReferenceEquals(item.JuntaCampoRequisicion, this))
                    {
                        item.JuntaCampoRequisicion = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("JuntaCampoReporteTT", item);
                    }
                }
            }
        }

        #endregion

    }
}
