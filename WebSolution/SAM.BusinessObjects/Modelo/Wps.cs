//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SAM.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(FamiliaAcero))]
    [KnownType(typeof(ProcesoRaiz))]
    [KnownType(typeof(ProcesoRelleno))]
    [KnownType(typeof(Wpq))]
    [KnownType(typeof(WpsProyecto))]
    [KnownType(typeof(JuntaSoldadura))]
    [KnownType(typeof(JuntaCampoSoldadura))]
    [Serializable]
    public partial class Wps: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int WpsID
        {
            get { return _wpsID; }
            set
            {
                if (_wpsID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'WpsID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _wpsID = value;
                    OnPropertyChanged("WpsID");
                }
            }
        }
        private int _wpsID;
    
        [DataMember]
        public string Nombre
        {
            get { return _nombre; }
            set
            {
                if (_nombre != value)
                {
                    _nombre = value;
                    OnPropertyChanged("Nombre");
                }
            }
        }
        private string _nombre;
    
        [DataMember]
        public int MaterialBase1ID
        {
            get { return _materialBase1ID; }
            set
            {
                if (_materialBase1ID != value)
                {
                    ChangeTracker.RecordOriginalValue("MaterialBase1ID", _materialBase1ID);
                    if (!IsDeserializing)
                    {
                        if (FamiliaAcero != null && FamiliaAcero.FamiliaAceroID != value)
                        {
                            FamiliaAcero = null;
                        }
                    }
                    _materialBase1ID = value;
                    OnPropertyChanged("MaterialBase1ID");
                }
            }
        }
        private int _materialBase1ID;
    
        [DataMember]
        public Nullable<int> MaterialBase2ID
        {
            get { return _materialBase2ID; }
            set
            {
                if (_materialBase2ID != value)
                {
                    ChangeTracker.RecordOriginalValue("MaterialBase2ID", _materialBase2ID);
                    if (!IsDeserializing)
                    {
                        if (FamiliaAcero1 != null && FamiliaAcero1.FamiliaAceroID != value)
                        {
                            FamiliaAcero1 = null;
                        }
                    }
                    _materialBase2ID = value;
                    OnPropertyChanged("MaterialBase2ID");
                }
            }
        }
        private Nullable<int> _materialBase2ID;
    
        [DataMember]
        public int ProcesoRaizID
        {
            get { return _procesoRaizID; }
            set
            {
                if (_procesoRaizID != value)
                {
                    ChangeTracker.RecordOriginalValue("ProcesoRaizID", _procesoRaizID);
                    if (!IsDeserializing)
                    {
                        if (ProcesoRaiz != null && ProcesoRaiz.ProcesoRaizID != value)
                        {
                            ProcesoRaiz = null;
                        }
                    }
                    _procesoRaizID = value;
                    OnPropertyChanged("ProcesoRaizID");
                }
            }
        }
        private int _procesoRaizID;
    
        [DataMember]
        public int ProcesoRellenoID
        {
            get { return _procesoRellenoID; }
            set
            {
                if (_procesoRellenoID != value)
                {
                    ChangeTracker.RecordOriginalValue("ProcesoRellenoID", _procesoRellenoID);
                    if (!IsDeserializing)
                    {
                        if (ProcesoRelleno != null && ProcesoRelleno.ProcesoRellenoID != value)
                        {
                            ProcesoRelleno = null;
                        }
                    }
                    _procesoRellenoID = value;
                    OnPropertyChanged("ProcesoRellenoID");
                }
            }
        }
        private int _procesoRellenoID;
    
        [DataMember]
        public Nullable<decimal> EspesorRaizMaximo
        {
            get { return _espesorRaizMaximo; }
            set
            {
                if (_espesorRaizMaximo != value)
                {
                    _espesorRaizMaximo = value;
                    OnPropertyChanged("EspesorRaizMaximo");
                }
            }
        }
        private Nullable<decimal> _espesorRaizMaximo;
    
        [DataMember]
        public Nullable<decimal> EspesorRellenoMaximo
        {
            get { return _espesorRellenoMaximo; }
            set
            {
                if (_espesorRellenoMaximo != value)
                {
                    _espesorRellenoMaximo = value;
                    OnPropertyChanged("EspesorRellenoMaximo");
                }
            }
        }
        private Nullable<decimal> _espesorRellenoMaximo;
    
        [DataMember]
        public bool RequierePwht
        {
            get { return _requierePwht; }
            set
            {
                if (_requierePwht != value)
                {
                    _requierePwht = value;
                    OnPropertyChanged("RequierePwht");
                }
            }
        }
        private bool _requierePwht;
    
        [DataMember]
        public Nullable<System.Guid> UsuarioModifica
        {
            get { return _usuarioModifica; }
            set
            {
                if (_usuarioModifica != value)
                {
                    _usuarioModifica = value;
                    OnPropertyChanged("UsuarioModifica");
                }
            }
        }
        private Nullable<System.Guid> _usuarioModifica;
    
        [DataMember]
        public Nullable<System.DateTime> FechaModificacion
        {
            get { return _fechaModificacion; }
            set
            {
                if (_fechaModificacion != value)
                {
                    _fechaModificacion = value;
                    OnPropertyChanged("FechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _fechaModificacion;
    
        [DataMember]
        public byte[] VersionRegistro
        {
            get { return _versionRegistro; }
            set
            {
                if (_versionRegistro != value)
                {
                    ChangeTracker.RecordOriginalValue("VersionRegistro", _versionRegistro);
                    _versionRegistro = value;
                    OnPropertyChanged("VersionRegistro");
                }
            }
        }
        private byte[] _versionRegistro;
    
        [DataMember]
        public bool RequierePreheat
        {
            get { return _requierePreheat; }
            set
            {
                if (_requierePreheat != value)
                {
                    _requierePreheat = value;
                    OnPropertyChanged("RequierePreheat");
                }
            }
        }
        private bool _requierePreheat;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public FamiliaAcero FamiliaAcero
        {
            get { return _familiaAcero; }
            set
            {
                if (!ReferenceEquals(_familiaAcero, value))
                {
                    var previousValue = _familiaAcero;
                    _familiaAcero = value;
                    FixupFamiliaAcero(previousValue);
                    OnNavigationPropertyChanged("FamiliaAcero");
                }
            }
        }
        private FamiliaAcero _familiaAcero;
    
        [DataMember]
        public FamiliaAcero FamiliaAcero1
        {
            get { return _familiaAcero1; }
            set
            {
                if (!ReferenceEquals(_familiaAcero1, value))
                {
                    var previousValue = _familiaAcero1;
                    _familiaAcero1 = value;
                    FixupFamiliaAcero1(previousValue);
                    OnNavigationPropertyChanged("FamiliaAcero1");
                }
            }
        }
        private FamiliaAcero _familiaAcero1;
    
        [DataMember]
        public ProcesoRaiz ProcesoRaiz
        {
            get { return _procesoRaiz; }
            set
            {
                if (!ReferenceEquals(_procesoRaiz, value))
                {
                    var previousValue = _procesoRaiz;
                    _procesoRaiz = value;
                    FixupProcesoRaiz(previousValue);
                    OnNavigationPropertyChanged("ProcesoRaiz");
                }
            }
        }
        private ProcesoRaiz _procesoRaiz;
    
        [DataMember]
        public ProcesoRelleno ProcesoRelleno
        {
            get { return _procesoRelleno; }
            set
            {
                if (!ReferenceEquals(_procesoRelleno, value))
                {
                    var previousValue = _procesoRelleno;
                    _procesoRelleno = value;
                    FixupProcesoRelleno(previousValue);
                    OnNavigationPropertyChanged("ProcesoRelleno");
                }
            }
        }
        private ProcesoRelleno _procesoRelleno;
    
        [DataMember]
        public TrackableCollection<Wpq> Wpq
        {
            get
            {
                if (_wpq == null)
                {
                    _wpq = new TrackableCollection<Wpq>();
                    _wpq.CollectionChanged += FixupWpq;
                }
                return _wpq;
            }
            set
            {
                if (!ReferenceEquals(_wpq, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_wpq != null)
                    {
                        _wpq.CollectionChanged -= FixupWpq;
                    }
                    _wpq = value;
                    if (_wpq != null)
                    {
                        _wpq.CollectionChanged += FixupWpq;
                    }
                    OnNavigationPropertyChanged("Wpq");
                }
            }
        }
        private TrackableCollection<Wpq> _wpq;
    
        [DataMember]
        public TrackableCollection<WpsProyecto> WpsProyecto
        {
            get
            {
                if (_wpsProyecto == null)
                {
                    _wpsProyecto = new TrackableCollection<WpsProyecto>();
                    _wpsProyecto.CollectionChanged += FixupWpsProyecto;
                }
                return _wpsProyecto;
            }
            set
            {
                if (!ReferenceEquals(_wpsProyecto, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_wpsProyecto != null)
                    {
                        _wpsProyecto.CollectionChanged -= FixupWpsProyecto;
                    }
                    _wpsProyecto = value;
                    if (_wpsProyecto != null)
                    {
                        _wpsProyecto.CollectionChanged += FixupWpsProyecto;
                    }
                    OnNavigationPropertyChanged("WpsProyecto");
                }
            }
        }
        private TrackableCollection<WpsProyecto> _wpsProyecto;
    
        [DataMember]
        public TrackableCollection<JuntaSoldadura> JuntaSoldadura
        {
            get
            {
                if (_juntaSoldadura == null)
                {
                    _juntaSoldadura = new TrackableCollection<JuntaSoldadura>();
                    _juntaSoldadura.CollectionChanged += FixupJuntaSoldadura;
                }
                return _juntaSoldadura;
            }
            set
            {
                if (!ReferenceEquals(_juntaSoldadura, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_juntaSoldadura != null)
                    {
                        _juntaSoldadura.CollectionChanged -= FixupJuntaSoldadura;
                    }
                    _juntaSoldadura = value;
                    if (_juntaSoldadura != null)
                    {
                        _juntaSoldadura.CollectionChanged += FixupJuntaSoldadura;
                    }
                    OnNavigationPropertyChanged("JuntaSoldadura");
                }
            }
        }
        private TrackableCollection<JuntaSoldadura> _juntaSoldadura;
    
        [DataMember]
        public TrackableCollection<JuntaSoldadura> JuntaSoldadura1
        {
            get
            {
                if (_juntaSoldadura1 == null)
                {
                    _juntaSoldadura1 = new TrackableCollection<JuntaSoldadura>();
                    _juntaSoldadura1.CollectionChanged += FixupJuntaSoldadura1;
                }
                return _juntaSoldadura1;
            }
            set
            {
                if (!ReferenceEquals(_juntaSoldadura1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_juntaSoldadura1 != null)
                    {
                        _juntaSoldadura1.CollectionChanged -= FixupJuntaSoldadura1;
                    }
                    _juntaSoldadura1 = value;
                    if (_juntaSoldadura1 != null)
                    {
                        _juntaSoldadura1.CollectionChanged += FixupJuntaSoldadura1;
                    }
                    OnNavigationPropertyChanged("JuntaSoldadura1");
                }
            }
        }
        private TrackableCollection<JuntaSoldadura> _juntaSoldadura1;
    
        [DataMember]
        public TrackableCollection<JuntaCampoSoldadura> JuntaCampoSoldadura
        {
            get
            {
                if (_juntaCampoSoldadura == null)
                {
                    _juntaCampoSoldadura = new TrackableCollection<JuntaCampoSoldadura>();
                    _juntaCampoSoldadura.CollectionChanged += FixupJuntaCampoSoldadura;
                }
                return _juntaCampoSoldadura;
            }
            set
            {
                if (!ReferenceEquals(_juntaCampoSoldadura, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_juntaCampoSoldadura != null)
                    {
                        _juntaCampoSoldadura.CollectionChanged -= FixupJuntaCampoSoldadura;
                    }
                    _juntaCampoSoldadura = value;
                    if (_juntaCampoSoldadura != null)
                    {
                        _juntaCampoSoldadura.CollectionChanged += FixupJuntaCampoSoldadura;
                    }
                    OnNavigationPropertyChanged("JuntaCampoSoldadura");
                }
            }
        }
        private TrackableCollection<JuntaCampoSoldadura> _juntaCampoSoldadura;
    
        [DataMember]
        public TrackableCollection<JuntaCampoSoldadura> JuntaCampoSoldadura1
        {
            get
            {
                if (_juntaCampoSoldadura1 == null)
                {
                    _juntaCampoSoldadura1 = new TrackableCollection<JuntaCampoSoldadura>();
                    _juntaCampoSoldadura1.CollectionChanged += FixupJuntaCampoSoldadura1;
                }
                return _juntaCampoSoldadura1;
            }
            set
            {
                if (!ReferenceEquals(_juntaCampoSoldadura1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_juntaCampoSoldadura1 != null)
                    {
                        _juntaCampoSoldadura1.CollectionChanged -= FixupJuntaCampoSoldadura1;
                    }
                    _juntaCampoSoldadura1 = value;
                    if (_juntaCampoSoldadura1 != null)
                    {
                        _juntaCampoSoldadura1.CollectionChanged += FixupJuntaCampoSoldadura1;
                    }
                    OnNavigationPropertyChanged("JuntaCampoSoldadura1");
                }
            }
        }
        private TrackableCollection<JuntaCampoSoldadura> _juntaCampoSoldadura1;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
    	public void OnDeserializedMethod(StreamingContext context)
    	{
    		IsDeserializing = false;
    		ChangeTracker.ChangeTrackingEnabled = true;
    			if (_wpq != null)
    		{
    			_wpq.CollectionChanged -= FixupWpq;
    			_wpq.CollectionChanged += FixupWpq;
    			}
    			if (_wpsProyecto != null)
    		{
    			_wpsProyecto.CollectionChanged -= FixupWpsProyecto;
    			_wpsProyecto.CollectionChanged += FixupWpsProyecto;
    			}
    			if (_juntaSoldadura != null)
    		{
    			_juntaSoldadura.CollectionChanged -= FixupJuntaSoldadura;
    			_juntaSoldadura.CollectionChanged += FixupJuntaSoldadura;
    			}
    			if (_juntaSoldadura1 != null)
    		{
    			_juntaSoldadura1.CollectionChanged -= FixupJuntaSoldadura1;
    			_juntaSoldadura1.CollectionChanged += FixupJuntaSoldadura1;
    			}
    			if (_juntaCampoSoldadura != null)
    		{
    			_juntaCampoSoldadura.CollectionChanged -= FixupJuntaCampoSoldadura;
    			_juntaCampoSoldadura.CollectionChanged += FixupJuntaCampoSoldadura;
    			}
    			if (_juntaCampoSoldadura1 != null)
    		{
    			_juntaCampoSoldadura1.CollectionChanged -= FixupJuntaCampoSoldadura1;
    			_juntaCampoSoldadura1.CollectionChanged += FixupJuntaCampoSoldadura1;
    			}
    		}
    
    
        protected virtual void ClearNavigationProperties()
        {
            FamiliaAcero = null;
            FamiliaAcero1 = null;
            ProcesoRaiz = null;
            ProcesoRelleno = null;
            Wpq.Clear();
            WpsProyecto.Clear();
            JuntaSoldadura.Clear();
            JuntaSoldadura1.Clear();
            JuntaCampoSoldadura.Clear();
            JuntaCampoSoldadura1.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupFamiliaAcero(FamiliaAcero previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Wps.Contains(this))
            {
                previousValue.Wps.Remove(this);
            }
    
            if (FamiliaAcero != null)
            {
                if (!FamiliaAcero.Wps.Contains(this))
                {
                    FamiliaAcero.Wps.Add(this);
                }
    
                MaterialBase1ID = FamiliaAcero.FamiliaAceroID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("FamiliaAcero")
                    && (ChangeTracker.OriginalValues["FamiliaAcero"] == FamiliaAcero))
                {
                    ChangeTracker.OriginalValues.Remove("FamiliaAcero");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("FamiliaAcero", previousValue);
                }
                if (FamiliaAcero != null && !FamiliaAcero.ChangeTracker.ChangeTrackingEnabled)
                {
                    FamiliaAcero.StartTracking();
                }
            }
        }
    
        private void FixupFamiliaAcero1(FamiliaAcero previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Wps1.Contains(this))
            {
                previousValue.Wps1.Remove(this);
            }
    
            if (FamiliaAcero1 != null)
            {
                if (!FamiliaAcero1.Wps1.Contains(this))
                {
                    FamiliaAcero1.Wps1.Add(this);
                }
    
                MaterialBase2ID = FamiliaAcero1.FamiliaAceroID;
            }
            else if (!skipKeys)
            {
                MaterialBase2ID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("FamiliaAcero1")
                    && (ChangeTracker.OriginalValues["FamiliaAcero1"] == FamiliaAcero1))
                {
                    ChangeTracker.OriginalValues.Remove("FamiliaAcero1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("FamiliaAcero1", previousValue);
                }
                if (FamiliaAcero1 != null && !FamiliaAcero1.ChangeTracker.ChangeTrackingEnabled)
                {
                    FamiliaAcero1.StartTracking();
                }
            }
        }
    
        private void FixupProcesoRaiz(ProcesoRaiz previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Wps.Contains(this))
            {
                previousValue.Wps.Remove(this);
            }
    
            if (ProcesoRaiz != null)
            {
                if (!ProcesoRaiz.Wps.Contains(this))
                {
                    ProcesoRaiz.Wps.Add(this);
                }
    
                ProcesoRaizID = ProcesoRaiz.ProcesoRaizID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ProcesoRaiz")
                    && (ChangeTracker.OriginalValues["ProcesoRaiz"] == ProcesoRaiz))
                {
                    ChangeTracker.OriginalValues.Remove("ProcesoRaiz");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ProcesoRaiz", previousValue);
                }
                if (ProcesoRaiz != null && !ProcesoRaiz.ChangeTracker.ChangeTrackingEnabled)
                {
                    ProcesoRaiz.StartTracking();
                }
            }
        }
    
        private void FixupProcesoRelleno(ProcesoRelleno previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Wps.Contains(this))
            {
                previousValue.Wps.Remove(this);
            }
    
            if (ProcesoRelleno != null)
            {
                if (!ProcesoRelleno.Wps.Contains(this))
                {
                    ProcesoRelleno.Wps.Add(this);
                }
    
                ProcesoRellenoID = ProcesoRelleno.ProcesoRellenoID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ProcesoRelleno")
                    && (ChangeTracker.OriginalValues["ProcesoRelleno"] == ProcesoRelleno))
                {
                    ChangeTracker.OriginalValues.Remove("ProcesoRelleno");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ProcesoRelleno", previousValue);
                }
                if (ProcesoRelleno != null && !ProcesoRelleno.ChangeTracker.ChangeTrackingEnabled)
                {
                    ProcesoRelleno.StartTracking();
                }
            }
        }
    
        private void FixupWpq(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Wpq item in e.NewItems)
                {
                    item.Wps = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Wpq", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Wpq item in e.OldItems)
                {
                    if (ReferenceEquals(item.Wps, this))
                    {
                        item.Wps = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Wpq", item);
                    }
                }
            }
        }
    
        private void FixupWpsProyecto(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (WpsProyecto item in e.NewItems)
                {
                    item.Wps = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("WpsProyecto", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (WpsProyecto item in e.OldItems)
                {
                    if (ReferenceEquals(item.Wps, this))
                    {
                        item.Wps = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("WpsProyecto", item);
                    }
                }
            }
        }
    
        private void FixupJuntaSoldadura(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (JuntaSoldadura item in e.NewItems)
                {
                    item.Wps = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("JuntaSoldadura", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (JuntaSoldadura item in e.OldItems)
                {
                    if (ReferenceEquals(item.Wps, this))
                    {
                        item.Wps = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("JuntaSoldadura", item);
                    }
                }
            }
        }
    
        private void FixupJuntaSoldadura1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (JuntaSoldadura item in e.NewItems)
                {
                    item.Wps1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("JuntaSoldadura1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (JuntaSoldadura item in e.OldItems)
                {
                    if (ReferenceEquals(item.Wps1, this))
                    {
                        item.Wps1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("JuntaSoldadura1", item);
                    }
                }
            }
        }
    
        private void FixupJuntaCampoSoldadura(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (JuntaCampoSoldadura item in e.NewItems)
                {
                    item.Wps = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("JuntaCampoSoldadura", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (JuntaCampoSoldadura item in e.OldItems)
                {
                    if (ReferenceEquals(item.Wps, this))
                    {
                        item.Wps = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("JuntaCampoSoldadura", item);
                    }
                }
            }
        }
    
        private void FixupJuntaCampoSoldadura1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (JuntaCampoSoldadura item in e.NewItems)
                {
                    item.Wps1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("JuntaCampoSoldadura1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (JuntaCampoSoldadura item in e.OldItems)
                {
                    if (ReferenceEquals(item.Wps1, this))
                    {
                        item.Wps1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("JuntaCampoSoldadura1", item);
                    }
                }
            }
        }

        #endregion

    }
}
