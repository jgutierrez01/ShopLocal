//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SAM.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(InspeccionVisualCampo))]
    [KnownType(typeof(JuntaCampo))]
    [KnownType(typeof(JuntaCampoInspeccionVisualDefecto))]
    [Serializable]
    public partial class JuntaCampoInspeccionVisual: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int JuntaCampoInspeccionVisualID
        {
            get { return _juntaCampoInspeccionVisualID; }
            set
            {
                if (_juntaCampoInspeccionVisualID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'JuntaCampoInspeccionVisualID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _juntaCampoInspeccionVisualID = value;
                    OnPropertyChanged("JuntaCampoInspeccionVisualID");
                }
            }
        }
        private int _juntaCampoInspeccionVisualID;
    
        [DataMember]
        public int InspeccionVisualCampoID
        {
            get { return _inspeccionVisualCampoID; }
            set
            {
                if (_inspeccionVisualCampoID != value)
                {
                    ChangeTracker.RecordOriginalValue("InspeccionVisualCampoID", _inspeccionVisualCampoID);
                    if (!IsDeserializing)
                    {
                        if (InspeccionVisualCampo != null && InspeccionVisualCampo.InspeccionVisualCampoID != value)
                        {
                            InspeccionVisualCampo = null;
                        }
                    }
                    _inspeccionVisualCampoID = value;
                    OnPropertyChanged("InspeccionVisualCampoID");
                }
            }
        }
        private int _inspeccionVisualCampoID;
    
        [DataMember]
        public int JuntaCampoID
        {
            get { return _juntaCampoID; }
            set
            {
                if (_juntaCampoID != value)
                {
                    ChangeTracker.RecordOriginalValue("JuntaCampoID", _juntaCampoID);
                    if (!IsDeserializing)
                    {
                        if (JuntaCampo1 != null && JuntaCampo1.JuntaCampoID != value)
                        {
                            JuntaCampo1 = null;
                        }
                    }
                    _juntaCampoID = value;
                    OnPropertyChanged("JuntaCampoID");
                }
            }
        }
        private int _juntaCampoID;
    
        [DataMember]
        public Nullable<System.DateTime> FechaInspeccion
        {
            get { return _fechaInspeccion; }
            set
            {
                if (_fechaInspeccion != value)
                {
                    _fechaInspeccion = value;
                    OnPropertyChanged("FechaInspeccion");
                }
            }
        }
        private Nullable<System.DateTime> _fechaInspeccion;
    
        [DataMember]
        public bool Aprobado
        {
            get { return _aprobado; }
            set
            {
                if (_aprobado != value)
                {
                    _aprobado = value;
                    OnPropertyChanged("Aprobado");
                }
            }
        }
        private bool _aprobado;
    
        [DataMember]
        public string Observaciones
        {
            get { return _observaciones; }
            set
            {
                if (_observaciones != value)
                {
                    _observaciones = value;
                    OnPropertyChanged("Observaciones");
                }
            }
        }
        private string _observaciones;
    
        [DataMember]
        public Nullable<System.Guid> UsuarioModifica
        {
            get { return _usuarioModifica; }
            set
            {
                if (_usuarioModifica != value)
                {
                    _usuarioModifica = value;
                    OnPropertyChanged("UsuarioModifica");
                }
            }
        }
        private Nullable<System.Guid> _usuarioModifica;
    
        [DataMember]
        public Nullable<System.DateTime> FechaModificacion
        {
            get { return _fechaModificacion; }
            set
            {
                if (_fechaModificacion != value)
                {
                    _fechaModificacion = value;
                    OnPropertyChanged("FechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _fechaModificacion;
    
        [DataMember]
        public byte[] VersionRegistro
        {
            get { return _versionRegistro; }
            set
            {
                if (_versionRegistro != value)
                {
                    ChangeTracker.RecordOriginalValue("VersionRegistro", _versionRegistro);
                    _versionRegistro = value;
                    OnPropertyChanged("VersionRegistro");
                }
            }
        }
        private byte[] _versionRegistro;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public InspeccionVisualCampo InspeccionVisualCampo
        {
            get { return _inspeccionVisualCampo; }
            set
            {
                if (!ReferenceEquals(_inspeccionVisualCampo, value))
                {
                    var previousValue = _inspeccionVisualCampo;
                    _inspeccionVisualCampo = value;
                    FixupInspeccionVisualCampo(previousValue);
                    OnNavigationPropertyChanged("InspeccionVisualCampo");
                }
            }
        }
        private InspeccionVisualCampo _inspeccionVisualCampo;
    
        [DataMember]
        public TrackableCollection<JuntaCampo> JuntaCampo
        {
            get
            {
                if (_juntaCampo == null)
                {
                    _juntaCampo = new TrackableCollection<JuntaCampo>();
                    _juntaCampo.CollectionChanged += FixupJuntaCampo;
                }
                return _juntaCampo;
            }
            set
            {
                if (!ReferenceEquals(_juntaCampo, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_juntaCampo != null)
                    {
                        _juntaCampo.CollectionChanged -= FixupJuntaCampo;
                    }
                    _juntaCampo = value;
                    if (_juntaCampo != null)
                    {
                        _juntaCampo.CollectionChanged += FixupJuntaCampo;
                    }
                    OnNavigationPropertyChanged("JuntaCampo");
                }
            }
        }
        private TrackableCollection<JuntaCampo> _juntaCampo;
    
        [DataMember]
        public JuntaCampo JuntaCampo1
        {
            get { return _juntaCampo1; }
            set
            {
                if (!ReferenceEquals(_juntaCampo1, value))
                {
                    var previousValue = _juntaCampo1;
                    _juntaCampo1 = value;
                    FixupJuntaCampo1(previousValue);
                    OnNavigationPropertyChanged("JuntaCampo1");
                }
            }
        }
        private JuntaCampo _juntaCampo1;
    
        [DataMember]
        public TrackableCollection<JuntaCampoInspeccionVisualDefecto> JuntaCampoInspeccionVisualDefecto
        {
            get
            {
                if (_juntaCampoInspeccionVisualDefecto == null)
                {
                    _juntaCampoInspeccionVisualDefecto = new TrackableCollection<JuntaCampoInspeccionVisualDefecto>();
                    _juntaCampoInspeccionVisualDefecto.CollectionChanged += FixupJuntaCampoInspeccionVisualDefecto;
                }
                return _juntaCampoInspeccionVisualDefecto;
            }
            set
            {
                if (!ReferenceEquals(_juntaCampoInspeccionVisualDefecto, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_juntaCampoInspeccionVisualDefecto != null)
                    {
                        _juntaCampoInspeccionVisualDefecto.CollectionChanged -= FixupJuntaCampoInspeccionVisualDefecto;
                    }
                    _juntaCampoInspeccionVisualDefecto = value;
                    if (_juntaCampoInspeccionVisualDefecto != null)
                    {
                        _juntaCampoInspeccionVisualDefecto.CollectionChanged += FixupJuntaCampoInspeccionVisualDefecto;
                    }
                    OnNavigationPropertyChanged("JuntaCampoInspeccionVisualDefecto");
                }
            }
        }
        private TrackableCollection<JuntaCampoInspeccionVisualDefecto> _juntaCampoInspeccionVisualDefecto;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
    	public void OnDeserializedMethod(StreamingContext context)
    	{
    		IsDeserializing = false;
    		ChangeTracker.ChangeTrackingEnabled = true;
    			if (_juntaCampo != null)
    		{
    			_juntaCampo.CollectionChanged -= FixupJuntaCampo;
    			_juntaCampo.CollectionChanged += FixupJuntaCampo;
    			}
    			if (_juntaCampoInspeccionVisualDefecto != null)
    		{
    			_juntaCampoInspeccionVisualDefecto.CollectionChanged -= FixupJuntaCampoInspeccionVisualDefecto;
    			_juntaCampoInspeccionVisualDefecto.CollectionChanged += FixupJuntaCampoInspeccionVisualDefecto;
    			}
    		}
    
    
        protected virtual void ClearNavigationProperties()
        {
            InspeccionVisualCampo = null;
            JuntaCampo.Clear();
            JuntaCampo1 = null;
            JuntaCampoInspeccionVisualDefecto.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupInspeccionVisualCampo(InspeccionVisualCampo previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JuntaCampoInspeccionVisual.Contains(this))
            {
                previousValue.JuntaCampoInspeccionVisual.Remove(this);
            }
    
            if (InspeccionVisualCampo != null)
            {
                if (!InspeccionVisualCampo.JuntaCampoInspeccionVisual.Contains(this))
                {
                    InspeccionVisualCampo.JuntaCampoInspeccionVisual.Add(this);
                }
    
                InspeccionVisualCampoID = InspeccionVisualCampo.InspeccionVisualCampoID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("InspeccionVisualCampo")
                    && (ChangeTracker.OriginalValues["InspeccionVisualCampo"] == InspeccionVisualCampo))
                {
                    ChangeTracker.OriginalValues.Remove("InspeccionVisualCampo");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("InspeccionVisualCampo", previousValue);
                }
                if (InspeccionVisualCampo != null && !InspeccionVisualCampo.ChangeTracker.ChangeTrackingEnabled)
                {
                    InspeccionVisualCampo.StartTracking();
                }
            }
        }
    
        private void FixupJuntaCampo1(JuntaCampo previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JuntaCampoInspeccionVisual1.Contains(this))
            {
                previousValue.JuntaCampoInspeccionVisual1.Remove(this);
            }
    
            if (JuntaCampo1 != null)
            {
                if (!JuntaCampo1.JuntaCampoInspeccionVisual1.Contains(this))
                {
                    JuntaCampo1.JuntaCampoInspeccionVisual1.Add(this);
                }
    
                JuntaCampoID = JuntaCampo1.JuntaCampoID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("JuntaCampo1")
                    && (ChangeTracker.OriginalValues["JuntaCampo1"] == JuntaCampo1))
                {
                    ChangeTracker.OriginalValues.Remove("JuntaCampo1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("JuntaCampo1", previousValue);
                }
                if (JuntaCampo1 != null && !JuntaCampo1.ChangeTracker.ChangeTrackingEnabled)
                {
                    JuntaCampo1.StartTracking();
                }
            }
        }
    
        private void FixupJuntaCampo(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (JuntaCampo item in e.NewItems)
                {
                    item.JuntaCampoInspeccionVisual = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("JuntaCampo", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (JuntaCampo item in e.OldItems)
                {
                    if (ReferenceEquals(item.JuntaCampoInspeccionVisual, this))
                    {
                        item.JuntaCampoInspeccionVisual = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("JuntaCampo", item);
                    }
                }
            }
        }
    
        private void FixupJuntaCampoInspeccionVisualDefecto(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (JuntaCampoInspeccionVisualDefecto item in e.NewItems)
                {
                    item.JuntaCampoInspeccionVisual = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("JuntaCampoInspeccionVisualDefecto", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (JuntaCampoInspeccionVisualDefecto item in e.OldItems)
                {
                    if (ReferenceEquals(item.JuntaCampoInspeccionVisual, this))
                    {
                        item.JuntaCampoInspeccionVisual = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("JuntaCampoInspeccionVisualDefecto", item);
                    }
                }
            }
        }

        #endregion

    }
}
