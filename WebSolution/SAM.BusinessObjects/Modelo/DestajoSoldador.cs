//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SAM.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(PeriodoDestajo))]
    [KnownType(typeof(Soldador))]
    [KnownType(typeof(DestajoSoldadorDetalle))]
    [Serializable]
    public partial class DestajoSoldador: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int DestajoSoldadorID
        {
            get { return _destajoSoldadorID; }
            set
            {
                if (_destajoSoldadorID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'DestajoSoldadorID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _destajoSoldadorID = value;
                    OnPropertyChanged("DestajoSoldadorID");
                }
            }
        }
        private int _destajoSoldadorID;
    
        [DataMember]
        public int SoldadorID
        {
            get { return _soldadorID; }
            set
            {
                if (_soldadorID != value)
                {
                    ChangeTracker.RecordOriginalValue("SoldadorID", _soldadorID);
                    if (!IsDeserializing)
                    {
                        if (Soldador != null && Soldador.SoldadorID != value)
                        {
                            Soldador = null;
                        }
                    }
                    _soldadorID = value;
                    OnPropertyChanged("SoldadorID");
                }
            }
        }
        private int _soldadorID;
    
        [DataMember]
        public int PeriodoDestajoID
        {
            get { return _periodoDestajoID; }
            set
            {
                if (_periodoDestajoID != value)
                {
                    ChangeTracker.RecordOriginalValue("PeriodoDestajoID", _periodoDestajoID);
                    if (!IsDeserializing)
                    {
                        if (PeriodoDestajo != null && PeriodoDestajo.PeriodoDestajoID != value)
                        {
                            PeriodoDestajo = null;
                        }
                    }
                    _periodoDestajoID = value;
                    OnPropertyChanged("PeriodoDestajoID");
                }
            }
        }
        private int _periodoDestajoID;
    
        [DataMember]
        public decimal ReferenciaCuadro
        {
            get { return _referenciaCuadro; }
            set
            {
                if (_referenciaCuadro != value)
                {
                    _referenciaCuadro = value;
                    OnPropertyChanged("ReferenciaCuadro");
                }
            }
        }
        private decimal _referenciaCuadro;
    
        [DataMember]
        public decimal TotalDestajoRaiz
        {
            get { return _totalDestajoRaiz; }
            set
            {
                if (_totalDestajoRaiz != value)
                {
                    _totalDestajoRaiz = value;
                    OnPropertyChanged("TotalDestajoRaiz");
                }
            }
        }
        private decimal _totalDestajoRaiz;
    
        [DataMember]
        public decimal TotalDestajoRelleno
        {
            get { return _totalDestajoRelleno; }
            set
            {
                if (_totalDestajoRelleno != value)
                {
                    _totalDestajoRelleno = value;
                    OnPropertyChanged("TotalDestajoRelleno");
                }
            }
        }
        private decimal _totalDestajoRelleno;
    
        [DataMember]
        public decimal TotalCuadro
        {
            get { return _totalCuadro; }
            set
            {
                if (_totalCuadro != value)
                {
                    _totalCuadro = value;
                    OnPropertyChanged("TotalCuadro");
                }
            }
        }
        private decimal _totalCuadro;
    
        [DataMember]
        public decimal TotalDiasFestivos
        {
            get { return _totalDiasFestivos; }
            set
            {
                if (_totalDiasFestivos != value)
                {
                    _totalDiasFestivos = value;
                    OnPropertyChanged("TotalDiasFestivos");
                }
            }
        }
        private decimal _totalDiasFestivos;
    
        [DataMember]
        public decimal TotalOtros
        {
            get { return _totalOtros; }
            set
            {
                if (_totalOtros != value)
                {
                    _totalOtros = value;
                    OnPropertyChanged("TotalOtros");
                }
            }
        }
        private decimal _totalOtros;
    
        [DataMember]
        public decimal TotalAjuste
        {
            get { return _totalAjuste; }
            set
            {
                if (_totalAjuste != value)
                {
                    _totalAjuste = value;
                    OnPropertyChanged("TotalAjuste");
                }
            }
        }
        private decimal _totalAjuste;
    
        [DataMember]
        public decimal GranTotal
        {
            get { return _granTotal; }
            set
            {
                if (_granTotal != value)
                {
                    _granTotal = value;
                    OnPropertyChanged("GranTotal");
                }
            }
        }
        private decimal _granTotal;
    
        [DataMember]
        public bool Aprobado
        {
            get { return _aprobado; }
            set
            {
                if (_aprobado != value)
                {
                    _aprobado = value;
                    OnPropertyChanged("Aprobado");
                }
            }
        }
        private bool _aprobado;
    
        [DataMember]
        public string Comentarios
        {
            get { return _comentarios; }
            set
            {
                if (_comentarios != value)
                {
                    _comentarios = value;
                    OnPropertyChanged("Comentarios");
                }
            }
        }
        private string _comentarios;
    
        [DataMember]
        public Nullable<System.Guid> UsuarioModifica
        {
            get { return _usuarioModifica; }
            set
            {
                if (_usuarioModifica != value)
                {
                    _usuarioModifica = value;
                    OnPropertyChanged("UsuarioModifica");
                }
            }
        }
        private Nullable<System.Guid> _usuarioModifica;
    
        [DataMember]
        public Nullable<System.DateTime> FechaModificacion
        {
            get { return _fechaModificacion; }
            set
            {
                if (_fechaModificacion != value)
                {
                    _fechaModificacion = value;
                    OnPropertyChanged("FechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _fechaModificacion;
    
        [DataMember]
        public byte[] VersionRegistro
        {
            get { return _versionRegistro; }
            set
            {
                if (_versionRegistro != value)
                {
                    ChangeTracker.RecordOriginalValue("VersionRegistro", _versionRegistro);
                    _versionRegistro = value;
                    OnPropertyChanged("VersionRegistro");
                }
            }
        }
        private byte[] _versionRegistro;
    
        [DataMember]
        public int CantidadDiasFestivos
        {
            get { return _cantidadDiasFestivos; }
            set
            {
                if (_cantidadDiasFestivos != value)
                {
                    _cantidadDiasFestivos = value;
                    OnPropertyChanged("CantidadDiasFestivos");
                }
            }
        }
        private int _cantidadDiasFestivos;
    
        [DataMember]
        public decimal CostoDiaFestivo
        {
            get { return _costoDiaFestivo; }
            set
            {
                if (_costoDiaFestivo != value)
                {
                    _costoDiaFestivo = value;
                    OnPropertyChanged("CostoDiaFestivo");
                }
            }
        }
        private decimal _costoDiaFestivo;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public PeriodoDestajo PeriodoDestajo
        {
            get { return _periodoDestajo; }
            set
            {
                if (!ReferenceEquals(_periodoDestajo, value))
                {
                    var previousValue = _periodoDestajo;
                    _periodoDestajo = value;
                    FixupPeriodoDestajo(previousValue);
                    OnNavigationPropertyChanged("PeriodoDestajo");
                }
            }
        }
        private PeriodoDestajo _periodoDestajo;
    
        [DataMember]
        public Soldador Soldador
        {
            get { return _soldador; }
            set
            {
                if (!ReferenceEquals(_soldador, value))
                {
                    var previousValue = _soldador;
                    _soldador = value;
                    FixupSoldador(previousValue);
                    OnNavigationPropertyChanged("Soldador");
                }
            }
        }
        private Soldador _soldador;
    
        [DataMember]
        public TrackableCollection<DestajoSoldadorDetalle> DestajoSoldadorDetalle
        {
            get
            {
                if (_destajoSoldadorDetalle == null)
                {
                    _destajoSoldadorDetalle = new TrackableCollection<DestajoSoldadorDetalle>();
                    _destajoSoldadorDetalle.CollectionChanged += FixupDestajoSoldadorDetalle;
                }
                return _destajoSoldadorDetalle;
            }
            set
            {
                if (!ReferenceEquals(_destajoSoldadorDetalle, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_destajoSoldadorDetalle != null)
                    {
                        _destajoSoldadorDetalle.CollectionChanged -= FixupDestajoSoldadorDetalle;
                    }
                    _destajoSoldadorDetalle = value;
                    if (_destajoSoldadorDetalle != null)
                    {
                        _destajoSoldadorDetalle.CollectionChanged += FixupDestajoSoldadorDetalle;
                    }
                    OnNavigationPropertyChanged("DestajoSoldadorDetalle");
                }
            }
        }
        private TrackableCollection<DestajoSoldadorDetalle> _destajoSoldadorDetalle;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
    	public void OnDeserializedMethod(StreamingContext context)
    	{
    		IsDeserializing = false;
    		ChangeTracker.ChangeTrackingEnabled = true;
    			if (_destajoSoldadorDetalle != null)
    		{
    			_destajoSoldadorDetalle.CollectionChanged -= FixupDestajoSoldadorDetalle;
    			_destajoSoldadorDetalle.CollectionChanged += FixupDestajoSoldadorDetalle;
    			}
    		}
    
    
        protected virtual void ClearNavigationProperties()
        {
            PeriodoDestajo = null;
            Soldador = null;
            DestajoSoldadorDetalle.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupPeriodoDestajo(PeriodoDestajo previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.DestajoSoldador.Contains(this))
            {
                previousValue.DestajoSoldador.Remove(this);
            }
    
            if (PeriodoDestajo != null)
            {
                if (!PeriodoDestajo.DestajoSoldador.Contains(this))
                {
                    PeriodoDestajo.DestajoSoldador.Add(this);
                }
    
                PeriodoDestajoID = PeriodoDestajo.PeriodoDestajoID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("PeriodoDestajo")
                    && (ChangeTracker.OriginalValues["PeriodoDestajo"] == PeriodoDestajo))
                {
                    ChangeTracker.OriginalValues.Remove("PeriodoDestajo");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("PeriodoDestajo", previousValue);
                }
                if (PeriodoDestajo != null && !PeriodoDestajo.ChangeTracker.ChangeTrackingEnabled)
                {
                    PeriodoDestajo.StartTracking();
                }
            }
        }
    
        private void FixupSoldador(Soldador previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.DestajoSoldador.Contains(this))
            {
                previousValue.DestajoSoldador.Remove(this);
            }
    
            if (Soldador != null)
            {
                if (!Soldador.DestajoSoldador.Contains(this))
                {
                    Soldador.DestajoSoldador.Add(this);
                }
    
                SoldadorID = Soldador.SoldadorID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Soldador")
                    && (ChangeTracker.OriginalValues["Soldador"] == Soldador))
                {
                    ChangeTracker.OriginalValues.Remove("Soldador");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Soldador", previousValue);
                }
                if (Soldador != null && !Soldador.ChangeTracker.ChangeTrackingEnabled)
                {
                    Soldador.StartTracking();
                }
            }
        }
    
        private void FixupDestajoSoldadorDetalle(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (DestajoSoldadorDetalle item in e.NewItems)
                {
                    item.DestajoSoldador = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("DestajoSoldadorDetalle", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (DestajoSoldadorDetalle item in e.OldItems)
                {
                    if (ReferenceEquals(item.DestajoSoldador, this))
                    {
                        item.DestajoSoldador = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("DestajoSoldadorDetalle", item);
                    }
                }
            }
        }

        #endregion

    }
}
