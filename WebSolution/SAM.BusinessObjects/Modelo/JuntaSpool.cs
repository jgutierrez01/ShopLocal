//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SAM.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(BastonSpoolJunta))]
    [KnownType(typeof(Estacion))]
    [KnownType(typeof(FabArea))]
    [KnownType(typeof(FamiliaAcero))]
    [KnownType(typeof(JuntaCampo))]
    [KnownType(typeof(Spool))]
    [KnownType(typeof(TipoJunta))]
    [KnownType(typeof(JuntaWorkstatus))]
    [KnownType(typeof(OrdenTrabajoJunta))]
    [KnownType(typeof(AgrupadoresPorJunta))]
    [Serializable]
    public partial class JuntaSpool: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int JuntaSpoolID
        {
            get { return _juntaSpoolID; }
            set
            {
                if (_juntaSpoolID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'JuntaSpoolID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _juntaSpoolID = value;
                    OnPropertyChanged("JuntaSpoolID");
                }
            }
        }
        private int _juntaSpoolID;
    
        [DataMember]
        public int SpoolID
        {
            get { return _spoolID; }
            set
            {
                if (_spoolID != value)
                {
                    ChangeTracker.RecordOriginalValue("SpoolID", _spoolID);
                    if (!IsDeserializing)
                    {
                        if (Spool != null && Spool.SpoolID != value)
                        {
                            Spool = null;
                        }
                    }
                    _spoolID = value;
                    OnPropertyChanged("SpoolID");
                }
            }
        }
        private int _spoolID;
    
        [DataMember]
        public int TipoJuntaID
        {
            get { return _tipoJuntaID; }
            set
            {
                if (_tipoJuntaID != value)
                {
                    ChangeTracker.RecordOriginalValue("TipoJuntaID", _tipoJuntaID);
                    if (!IsDeserializing)
                    {
                        if (TipoJunta != null && TipoJunta.TipoJuntaID != value)
                        {
                            TipoJunta = null;
                        }
                    }
                    _tipoJuntaID = value;
                    OnPropertyChanged("TipoJuntaID");
                }
            }
        }
        private int _tipoJuntaID;
    
        [DataMember]
        public int FabAreaID
        {
            get { return _fabAreaID; }
            set
            {
                if (_fabAreaID != value)
                {
                    ChangeTracker.RecordOriginalValue("FabAreaID", _fabAreaID);
                    if (!IsDeserializing)
                    {
                        if (FabArea != null && FabArea.FabAreaID != value)
                        {
                            FabArea = null;
                        }
                    }
                    _fabAreaID = value;
                    OnPropertyChanged("FabAreaID");
                }
            }
        }
        private int _fabAreaID;
    
        [DataMember]
        public string Etiqueta
        {
            get { return _etiqueta; }
            set
            {
                if (_etiqueta != value)
                {
                    _etiqueta = value;
                    OnPropertyChanged("Etiqueta");
                }
            }
        }
        private string _etiqueta;
    
        [DataMember]
        public string EtiquetaMaterial1
        {
            get { return _etiquetaMaterial1; }
            set
            {
                if (_etiquetaMaterial1 != value)
                {
                    _etiquetaMaterial1 = value;
                    OnPropertyChanged("EtiquetaMaterial1");
                }
            }
        }
        private string _etiquetaMaterial1;
    
        [DataMember]
        public string EtiquetaMaterial2
        {
            get { return _etiquetaMaterial2; }
            set
            {
                if (_etiquetaMaterial2 != value)
                {
                    _etiquetaMaterial2 = value;
                    OnPropertyChanged("EtiquetaMaterial2");
                }
            }
        }
        private string _etiquetaMaterial2;
    
        [DataMember]
        public string Cedula
        {
            get { return _cedula; }
            set
            {
                if (_cedula != value)
                {
                    _cedula = value;
                    OnPropertyChanged("Cedula");
                }
            }
        }
        private string _cedula;
    
        [DataMember]
        public int FamiliaAceroMaterial1ID
        {
            get { return _familiaAceroMaterial1ID; }
            set
            {
                if (_familiaAceroMaterial1ID != value)
                {
                    ChangeTracker.RecordOriginalValue("FamiliaAceroMaterial1ID", _familiaAceroMaterial1ID);
                    if (!IsDeserializing)
                    {
                        if (FamiliaAcero != null && FamiliaAcero.FamiliaAceroID != value)
                        {
                            FamiliaAcero = null;
                        }
                    }
                    _familiaAceroMaterial1ID = value;
                    OnPropertyChanged("FamiliaAceroMaterial1ID");
                }
            }
        }
        private int _familiaAceroMaterial1ID;
    
        [DataMember]
        public Nullable<int> FamiliaAceroMaterial2ID
        {
            get { return _familiaAceroMaterial2ID; }
            set
            {
                if (_familiaAceroMaterial2ID != value)
                {
                    ChangeTracker.RecordOriginalValue("FamiliaAceroMaterial2ID", _familiaAceroMaterial2ID);
                    if (!IsDeserializing)
                    {
                        if (FamiliaAcero1 != null && FamiliaAcero1.FamiliaAceroID != value)
                        {
                            FamiliaAcero1 = null;
                        }
                    }
                    _familiaAceroMaterial2ID = value;
                    OnPropertyChanged("FamiliaAceroMaterial2ID");
                }
            }
        }
        private Nullable<int> _familiaAceroMaterial2ID;
    
        [DataMember]
        public decimal Diametro
        {
            get { return _diametro; }
            set
            {
                if (_diametro != value)
                {
                    _diametro = value;
                    OnPropertyChanged("Diametro");
                }
            }
        }
        private decimal _diametro;
    
        [DataMember]
        public Nullable<decimal> Espesor
        {
            get { return _espesor; }
            set
            {
                if (_espesor != value)
                {
                    _espesor = value;
                    OnPropertyChanged("Espesor");
                }
            }
        }
        private Nullable<decimal> _espesor;
    
        [DataMember]
        public Nullable<decimal> KgTeoricos
        {
            get { return _kgTeoricos; }
            set
            {
                if (_kgTeoricos != value)
                {
                    _kgTeoricos = value;
                    OnPropertyChanged("KgTeoricos");
                }
            }
        }
        private Nullable<decimal> _kgTeoricos;
    
        [DataMember]
        public Nullable<decimal> Peqs
        {
            get { return _peqs; }
            set
            {
                if (_peqs != value)
                {
                    _peqs = value;
                    OnPropertyChanged("Peqs");
                }
            }
        }
        private Nullable<decimal> _peqs;
    
        [DataMember]
        public Nullable<System.Guid> UsuarioModifica
        {
            get { return _usuarioModifica; }
            set
            {
                if (_usuarioModifica != value)
                {
                    _usuarioModifica = value;
                    OnPropertyChanged("UsuarioModifica");
                }
            }
        }
        private Nullable<System.Guid> _usuarioModifica;
    
        [DataMember]
        public Nullable<System.DateTime> FechaModificacion
        {
            get { return _fechaModificacion; }
            set
            {
                if (_fechaModificacion != value)
                {
                    _fechaModificacion = value;
                    OnPropertyChanged("FechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _fechaModificacion;
    
        [DataMember]
        public byte[] VersionRegistro
        {
            get { return _versionRegistro; }
            set
            {
                if (_versionRegistro != value)
                {
                    _versionRegistro = value;
                    OnPropertyChanged("VersionRegistro");
                }
            }
        }
        private byte[] _versionRegistro;
    
        [DataMember]
        public Nullable<bool> EsManual
        {
            get { return _esManual; }
            set
            {
                if (_esManual != value)
                {
                    _esManual = value;
                    OnPropertyChanged("EsManual");
                }
            }
        }
        private Nullable<bool> _esManual;
    
        [DataMember]
        public Nullable<int> EstacionID
        {
            get { return _estacionID; }
            set
            {
                if (_estacionID != value)
                {
                    ChangeTracker.RecordOriginalValue("EstacionID", _estacionID);
                    if (!IsDeserializing)
                    {
                        if (Estacion != null && Estacion.EstacionID != value)
                        {
                            Estacion = null;
                        }
                    }
                    _estacionID = value;
                    OnPropertyChanged("EstacionID");
                }
            }
        }
        private Nullable<int> _estacionID;
    
        [DataMember]
        public string FabClas
        {
            get { return _fabClas; }
            set
            {
                if (_fabClas != value)
                {
                    _fabClas = value;
                    OnPropertyChanged("FabClas");
                }
            }
        }
        private string _fabClas;
    
        [DataMember]
        public string Campo2
        {
            get { return _campo2; }
            set
            {
                if (_campo2 != value)
                {
                    _campo2 = value;
                    OnPropertyChanged("Campo2");
                }
            }
        }
        private string _campo2;
    
        [DataMember]
        public string Campo3
        {
            get { return _campo3; }
            set
            {
                if (_campo3 != value)
                {
                    _campo3 = value;
                    OnPropertyChanged("Campo3");
                }
            }
        }
        private string _campo3;
    
        [DataMember]
        public string Campo4
        {
            get { return _campo4; }
            set
            {
                if (_campo4 != value)
                {
                    _campo4 = value;
                    OnPropertyChanged("Campo4");
                }
            }
        }
        private string _campo4;
    
        [DataMember]
        public string Campo5
        {
            get { return _campo5; }
            set
            {
                if (_campo5 != value)
                {
                    _campo5 = value;
                    OnPropertyChanged("Campo5");
                }
            }
        }
        private string _campo5;
    
        [DataMember]
        public bool RequierePwht
        {
            get { return _requierePwht; }
            set
            {
                if (_requierePwht != value)
                {
                    _requierePwht = value;
                    OnPropertyChanged("RequierePwht");
                }
            }
        }
        private bool _requierePwht;
    
        [DataMember]
        public Nullable<bool> RequierePruebaNeumatica
        {
            get { return _requierePruebaNeumatica; }
            set
            {
                if (_requierePruebaNeumatica != value)
                {
                    _requierePruebaNeumatica = value;
                    OnPropertyChanged("RequierePruebaNeumatica");
                }
            }
        }
        private Nullable<bool> _requierePruebaNeumatica;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<BastonSpoolJunta> BastonSpoolJunta
        {
            get
            {
                if (_bastonSpoolJunta == null)
                {
                    _bastonSpoolJunta = new TrackableCollection<BastonSpoolJunta>();
                    _bastonSpoolJunta.CollectionChanged += FixupBastonSpoolJunta;
                }
                return _bastonSpoolJunta;
            }
            set
            {
                if (!ReferenceEquals(_bastonSpoolJunta, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_bastonSpoolJunta != null)
                    {
                        _bastonSpoolJunta.CollectionChanged -= FixupBastonSpoolJunta;
                    }
                    _bastonSpoolJunta = value;
                    if (_bastonSpoolJunta != null)
                    {
                        _bastonSpoolJunta.CollectionChanged += FixupBastonSpoolJunta;
                    }
                    OnNavigationPropertyChanged("BastonSpoolJunta");
                }
            }
        }
        private TrackableCollection<BastonSpoolJunta> _bastonSpoolJunta;
    
        [DataMember]
        public Estacion Estacion
        {
            get { return _estacion; }
            set
            {
                if (!ReferenceEquals(_estacion, value))
                {
                    var previousValue = _estacion;
                    _estacion = value;
                    FixupEstacion(previousValue);
                    OnNavigationPropertyChanged("Estacion");
                }
            }
        }
        private Estacion _estacion;
    
        [DataMember]
        public FabArea FabArea
        {
            get { return _fabArea; }
            set
            {
                if (!ReferenceEquals(_fabArea, value))
                {
                    var previousValue = _fabArea;
                    _fabArea = value;
                    FixupFabArea(previousValue);
                    OnNavigationPropertyChanged("FabArea");
                }
            }
        }
        private FabArea _fabArea;
    
        [DataMember]
        public FamiliaAcero FamiliaAcero
        {
            get { return _familiaAcero; }
            set
            {
                if (!ReferenceEquals(_familiaAcero, value))
                {
                    var previousValue = _familiaAcero;
                    _familiaAcero = value;
                    FixupFamiliaAcero(previousValue);
                    OnNavigationPropertyChanged("FamiliaAcero");
                }
            }
        }
        private FamiliaAcero _familiaAcero;
    
        [DataMember]
        public FamiliaAcero FamiliaAcero1
        {
            get { return _familiaAcero1; }
            set
            {
                if (!ReferenceEquals(_familiaAcero1, value))
                {
                    var previousValue = _familiaAcero1;
                    _familiaAcero1 = value;
                    FixupFamiliaAcero1(previousValue);
                    OnNavigationPropertyChanged("FamiliaAcero1");
                }
            }
        }
        private FamiliaAcero _familiaAcero1;
    
        [DataMember]
        public TrackableCollection<JuntaCampo> JuntaCampo
        {
            get
            {
                if (_juntaCampo == null)
                {
                    _juntaCampo = new TrackableCollection<JuntaCampo>();
                    _juntaCampo.CollectionChanged += FixupJuntaCampo;
                }
                return _juntaCampo;
            }
            set
            {
                if (!ReferenceEquals(_juntaCampo, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_juntaCampo != null)
                    {
                        _juntaCampo.CollectionChanged -= FixupJuntaCampo;
                    }
                    _juntaCampo = value;
                    if (_juntaCampo != null)
                    {
                        _juntaCampo.CollectionChanged += FixupJuntaCampo;
                    }
                    OnNavigationPropertyChanged("JuntaCampo");
                }
            }
        }
        private TrackableCollection<JuntaCampo> _juntaCampo;
    
        [DataMember]
        public Spool Spool
        {
            get { return _spool; }
            set
            {
                if (!ReferenceEquals(_spool, value))
                {
                    var previousValue = _spool;
                    _spool = value;
                    FixupSpool(previousValue);
                    OnNavigationPropertyChanged("Spool");
                }
            }
        }
        private Spool _spool;
    
        [DataMember]
        public TipoJunta TipoJunta
        {
            get { return _tipoJunta; }
            set
            {
                if (!ReferenceEquals(_tipoJunta, value))
                {
                    var previousValue = _tipoJunta;
                    _tipoJunta = value;
                    FixupTipoJunta(previousValue);
                    OnNavigationPropertyChanged("TipoJunta");
                }
            }
        }
        private TipoJunta _tipoJunta;
    
        [DataMember]
        public TrackableCollection<JuntaWorkstatus> JuntaWorkstatus
        {
            get
            {
                if (_juntaWorkstatus == null)
                {
                    _juntaWorkstatus = new TrackableCollection<JuntaWorkstatus>();
                    _juntaWorkstatus.CollectionChanged += FixupJuntaWorkstatus;
                }
                return _juntaWorkstatus;
            }
            set
            {
                if (!ReferenceEquals(_juntaWorkstatus, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_juntaWorkstatus != null)
                    {
                        _juntaWorkstatus.CollectionChanged -= FixupJuntaWorkstatus;
                    }
                    _juntaWorkstatus = value;
                    if (_juntaWorkstatus != null)
                    {
                        _juntaWorkstatus.CollectionChanged += FixupJuntaWorkstatus;
                    }
                    OnNavigationPropertyChanged("JuntaWorkstatus");
                }
            }
        }
        private TrackableCollection<JuntaWorkstatus> _juntaWorkstatus;
    
        [DataMember]
        public TrackableCollection<OrdenTrabajoJunta> OrdenTrabajoJunta
        {
            get
            {
                if (_ordenTrabajoJunta == null)
                {
                    _ordenTrabajoJunta = new TrackableCollection<OrdenTrabajoJunta>();
                    _ordenTrabajoJunta.CollectionChanged += FixupOrdenTrabajoJunta;
                }
                return _ordenTrabajoJunta;
            }
            set
            {
                if (!ReferenceEquals(_ordenTrabajoJunta, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_ordenTrabajoJunta != null)
                    {
                        _ordenTrabajoJunta.CollectionChanged -= FixupOrdenTrabajoJunta;
                    }
                    _ordenTrabajoJunta = value;
                    if (_ordenTrabajoJunta != null)
                    {
                        _ordenTrabajoJunta.CollectionChanged += FixupOrdenTrabajoJunta;
                    }
                    OnNavigationPropertyChanged("OrdenTrabajoJunta");
                }
            }
        }
        private TrackableCollection<OrdenTrabajoJunta> _ordenTrabajoJunta;
    
        [DataMember]
        public TrackableCollection<AgrupadoresPorJunta> AgrupadoresPorJunta
        {
            get
            {
                if (_agrupadoresPorJunta == null)
                {
                    _agrupadoresPorJunta = new TrackableCollection<AgrupadoresPorJunta>();
                    _agrupadoresPorJunta.CollectionChanged += FixupAgrupadoresPorJunta;
                }
                return _agrupadoresPorJunta;
            }
            set
            {
                if (!ReferenceEquals(_agrupadoresPorJunta, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_agrupadoresPorJunta != null)
                    {
                        _agrupadoresPorJunta.CollectionChanged -= FixupAgrupadoresPorJunta;
                    }
                    _agrupadoresPorJunta = value;
                    if (_agrupadoresPorJunta != null)
                    {
                        _agrupadoresPorJunta.CollectionChanged += FixupAgrupadoresPorJunta;
                    }
                    OnNavigationPropertyChanged("AgrupadoresPorJunta");
                }
            }
        }
        private TrackableCollection<AgrupadoresPorJunta> _agrupadoresPorJunta;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
    	public void OnDeserializedMethod(StreamingContext context)
    	{
    		IsDeserializing = false;
    		ChangeTracker.ChangeTrackingEnabled = true;
    			if (_bastonSpoolJunta != null)
    		{
    			_bastonSpoolJunta.CollectionChanged -= FixupBastonSpoolJunta;
    			_bastonSpoolJunta.CollectionChanged += FixupBastonSpoolJunta;
    			}
    			if (_juntaCampo != null)
    		{
    			_juntaCampo.CollectionChanged -= FixupJuntaCampo;
    			_juntaCampo.CollectionChanged += FixupJuntaCampo;
    			}
    			if (_juntaWorkstatus != null)
    		{
    			_juntaWorkstatus.CollectionChanged -= FixupJuntaWorkstatus;
    			_juntaWorkstatus.CollectionChanged += FixupJuntaWorkstatus;
    			}
    			if (_ordenTrabajoJunta != null)
    		{
    			_ordenTrabajoJunta.CollectionChanged -= FixupOrdenTrabajoJunta;
    			_ordenTrabajoJunta.CollectionChanged += FixupOrdenTrabajoJunta;
    			}
    			if (_agrupadoresPorJunta != null)
    		{
    			_agrupadoresPorJunta.CollectionChanged -= FixupAgrupadoresPorJunta;
    			_agrupadoresPorJunta.CollectionChanged += FixupAgrupadoresPorJunta;
    			}
    		}
    
    
        protected virtual void ClearNavigationProperties()
        {
            BastonSpoolJunta.Clear();
            Estacion = null;
            FabArea = null;
            FamiliaAcero = null;
            FamiliaAcero1 = null;
            JuntaCampo.Clear();
            Spool = null;
            TipoJunta = null;
            JuntaWorkstatus.Clear();
            OrdenTrabajoJunta.Clear();
            AgrupadoresPorJunta.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupEstacion(Estacion previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JuntaSpool.Contains(this))
            {
                previousValue.JuntaSpool.Remove(this);
            }
    
            if (Estacion != null)
            {
                if (!Estacion.JuntaSpool.Contains(this))
                {
                    Estacion.JuntaSpool.Add(this);
                }
    
                EstacionID = Estacion.EstacionID;
            }
            else if (!skipKeys)
            {
                EstacionID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Estacion")
                    && (ChangeTracker.OriginalValues["Estacion"] == Estacion))
                {
                    ChangeTracker.OriginalValues.Remove("Estacion");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Estacion", previousValue);
                }
                if (Estacion != null && !Estacion.ChangeTracker.ChangeTrackingEnabled)
                {
                    Estacion.StartTracking();
                }
            }
        }
    
        private void FixupFabArea(FabArea previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JuntaSpool.Contains(this))
            {
                previousValue.JuntaSpool.Remove(this);
            }
    
            if (FabArea != null)
            {
                if (!FabArea.JuntaSpool.Contains(this))
                {
                    FabArea.JuntaSpool.Add(this);
                }
    
                FabAreaID = FabArea.FabAreaID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("FabArea")
                    && (ChangeTracker.OriginalValues["FabArea"] == FabArea))
                {
                    ChangeTracker.OriginalValues.Remove("FabArea");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("FabArea", previousValue);
                }
                if (FabArea != null && !FabArea.ChangeTracker.ChangeTrackingEnabled)
                {
                    FabArea.StartTracking();
                }
            }
        }
    
        private void FixupFamiliaAcero(FamiliaAcero previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JuntaSpool.Contains(this))
            {
                previousValue.JuntaSpool.Remove(this);
            }
    
            if (FamiliaAcero != null)
            {
                if (!FamiliaAcero.JuntaSpool.Contains(this))
                {
                    FamiliaAcero.JuntaSpool.Add(this);
                }
    
                FamiliaAceroMaterial1ID = FamiliaAcero.FamiliaAceroID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("FamiliaAcero")
                    && (ChangeTracker.OriginalValues["FamiliaAcero"] == FamiliaAcero))
                {
                    ChangeTracker.OriginalValues.Remove("FamiliaAcero");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("FamiliaAcero", previousValue);
                }
                if (FamiliaAcero != null && !FamiliaAcero.ChangeTracker.ChangeTrackingEnabled)
                {
                    FamiliaAcero.StartTracking();
                }
            }
        }
    
        private void FixupFamiliaAcero1(FamiliaAcero previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (FamiliaAcero1 != null)
            {
                FamiliaAceroMaterial2ID = FamiliaAcero1.FamiliaAceroID;
            }
    
            else if (!skipKeys)
            {
                FamiliaAceroMaterial2ID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("FamiliaAcero1")
                    && (ChangeTracker.OriginalValues["FamiliaAcero1"] == FamiliaAcero1))
                {
                    ChangeTracker.OriginalValues.Remove("FamiliaAcero1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("FamiliaAcero1", previousValue);
                }
                if (FamiliaAcero1 != null && !FamiliaAcero1.ChangeTracker.ChangeTrackingEnabled)
                {
                    FamiliaAcero1.StartTracking();
                }
            }
        }
    
        private void FixupSpool(Spool previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JuntaSpool.Contains(this))
            {
                previousValue.JuntaSpool.Remove(this);
            }
    
            if (Spool != null)
            {
                if (!Spool.JuntaSpool.Contains(this))
                {
                    Spool.JuntaSpool.Add(this);
                }
    
                SpoolID = Spool.SpoolID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Spool")
                    && (ChangeTracker.OriginalValues["Spool"] == Spool))
                {
                    ChangeTracker.OriginalValues.Remove("Spool");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Spool", previousValue);
                }
                if (Spool != null && !Spool.ChangeTracker.ChangeTrackingEnabled)
                {
                    Spool.StartTracking();
                }
            }
        }
    
        private void FixupTipoJunta(TipoJunta previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JuntaSpool.Contains(this))
            {
                previousValue.JuntaSpool.Remove(this);
            }
    
            if (TipoJunta != null)
            {
                if (!TipoJunta.JuntaSpool.Contains(this))
                {
                    TipoJunta.JuntaSpool.Add(this);
                }
    
                TipoJuntaID = TipoJunta.TipoJuntaID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TipoJunta")
                    && (ChangeTracker.OriginalValues["TipoJunta"] == TipoJunta))
                {
                    ChangeTracker.OriginalValues.Remove("TipoJunta");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TipoJunta", previousValue);
                }
                if (TipoJunta != null && !TipoJunta.ChangeTracker.ChangeTrackingEnabled)
                {
                    TipoJunta.StartTracking();
                }
            }
        }
    
        private void FixupBastonSpoolJunta(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (BastonSpoolJunta item in e.NewItems)
                {
                    item.JuntaSpool = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("BastonSpoolJunta", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BastonSpoolJunta item in e.OldItems)
                {
                    if (ReferenceEquals(item.JuntaSpool, this))
                    {
                        item.JuntaSpool = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("BastonSpoolJunta", item);
                    }
                }
            }
        }
    
        private void FixupJuntaCampo(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (JuntaCampo item in e.NewItems)
                {
                    item.JuntaSpool = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("JuntaCampo", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (JuntaCampo item in e.OldItems)
                {
                    if (ReferenceEquals(item.JuntaSpool, this))
                    {
                        item.JuntaSpool = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("JuntaCampo", item);
                    }
                }
            }
        }
    
        private void FixupJuntaWorkstatus(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (JuntaWorkstatus item in e.NewItems)
                {
                    item.JuntaSpool = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("JuntaWorkstatus", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (JuntaWorkstatus item in e.OldItems)
                {
                    if (ReferenceEquals(item.JuntaSpool, this))
                    {
                        item.JuntaSpool = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("JuntaWorkstatus", item);
                    }
                }
            }
        }
    
        private void FixupOrdenTrabajoJunta(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (OrdenTrabajoJunta item in e.NewItems)
                {
                    item.JuntaSpool = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("OrdenTrabajoJunta", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (OrdenTrabajoJunta item in e.OldItems)
                {
                    if (ReferenceEquals(item.JuntaSpool, this))
                    {
                        item.JuntaSpool = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("OrdenTrabajoJunta", item);
                    }
                }
            }
        }
    
        private void FixupAgrupadoresPorJunta(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (AgrupadoresPorJunta item in e.NewItems)
                {
                    item.JuntaSpool = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("AgrupadoresPorJunta", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AgrupadoresPorJunta item in e.OldItems)
                {
                    if (ReferenceEquals(item.JuntaSpool, this))
                    {
                        item.JuntaSpool = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("AgrupadoresPorJunta", item);
                    }
                }
            }
        }

        #endregion

    }
}
