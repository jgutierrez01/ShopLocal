//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SAM.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(NumeroUnico))]
    [KnownType(typeof(PinturaNumeroUnico))]
    [KnownType(typeof(RequisicionNumeroUnico))]
    [Serializable]
    public partial class RequisicionNumeroUnicoDetalle: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int RequisicionNumeroUnicoDetalleID
        {
            get { return _requisicionNumeroUnicoDetalleID; }
            set
            {
                if (_requisicionNumeroUnicoDetalleID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'RequisicionNumeroUnicoDetalleID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _requisicionNumeroUnicoDetalleID = value;
                    OnPropertyChanged("RequisicionNumeroUnicoDetalleID");
                }
            }
        }
        private int _requisicionNumeroUnicoDetalleID;
    
        [DataMember]
        public int RequisicionNumeroUnicoID
        {
            get { return _requisicionNumeroUnicoID; }
            set
            {
                if (_requisicionNumeroUnicoID != value)
                {
                    ChangeTracker.RecordOriginalValue("RequisicionNumeroUnicoID", _requisicionNumeroUnicoID);
                    if (!IsDeserializing)
                    {
                        if (RequisicionNumeroUnico != null && RequisicionNumeroUnico.RequisicionNumeroUnicoID != value)
                        {
                            RequisicionNumeroUnico = null;
                        }
                    }
                    _requisicionNumeroUnicoID = value;
                    OnPropertyChanged("RequisicionNumeroUnicoID");
                }
            }
        }
        private int _requisicionNumeroUnicoID;
    
        [DataMember]
        public int NumeroUnicoID
        {
            get { return _numeroUnicoID; }
            set
            {
                if (_numeroUnicoID != value)
                {
                    ChangeTracker.RecordOriginalValue("NumeroUnicoID", _numeroUnicoID);
                    if (!IsDeserializing)
                    {
                        if (NumeroUnico != null && NumeroUnico.NumeroUnicoID != value)
                        {
                            NumeroUnico = null;
                        }
                    }
                    _numeroUnicoID = value;
                    OnPropertyChanged("NumeroUnicoID");
                }
            }
        }
        private int _numeroUnicoID;
    
        [DataMember]
        public Nullable<System.Guid> UsuarioModifica
        {
            get { return _usuarioModifica; }
            set
            {
                if (_usuarioModifica != value)
                {
                    _usuarioModifica = value;
                    OnPropertyChanged("UsuarioModifica");
                }
            }
        }
        private Nullable<System.Guid> _usuarioModifica;
    
        [DataMember]
        public Nullable<System.DateTime> FechaModificacion
        {
            get { return _fechaModificacion; }
            set
            {
                if (_fechaModificacion != value)
                {
                    _fechaModificacion = value;
                    OnPropertyChanged("FechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _fechaModificacion;
    
        [DataMember]
        public byte[] VersionRegistro
        {
            get { return _versionRegistro; }
            set
            {
                if (_versionRegistro != value)
                {
                    ChangeTracker.RecordOriginalValue("VersionRegistro", _versionRegistro);
                    _versionRegistro = value;
                    OnPropertyChanged("VersionRegistro");
                }
            }
        }
        private byte[] _versionRegistro;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public NumeroUnico NumeroUnico
        {
            get { return _numeroUnico; }
            set
            {
                if (!ReferenceEquals(_numeroUnico, value))
                {
                    var previousValue = _numeroUnico;
                    _numeroUnico = value;
                    FixupNumeroUnico(previousValue);
                    OnNavigationPropertyChanged("NumeroUnico");
                }
            }
        }
        private NumeroUnico _numeroUnico;
    
        [DataMember]
        public TrackableCollection<PinturaNumeroUnico> PinturaNumeroUnico
        {
            get
            {
                if (_pinturaNumeroUnico == null)
                {
                    _pinturaNumeroUnico = new TrackableCollection<PinturaNumeroUnico>();
                    _pinturaNumeroUnico.CollectionChanged += FixupPinturaNumeroUnico;
                }
                return _pinturaNumeroUnico;
            }
            set
            {
                if (!ReferenceEquals(_pinturaNumeroUnico, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_pinturaNumeroUnico != null)
                    {
                        _pinturaNumeroUnico.CollectionChanged -= FixupPinturaNumeroUnico;
                    }
                    _pinturaNumeroUnico = value;
                    if (_pinturaNumeroUnico != null)
                    {
                        _pinturaNumeroUnico.CollectionChanged += FixupPinturaNumeroUnico;
                    }
                    OnNavigationPropertyChanged("PinturaNumeroUnico");
                }
            }
        }
        private TrackableCollection<PinturaNumeroUnico> _pinturaNumeroUnico;
    
        [DataMember]
        public RequisicionNumeroUnico RequisicionNumeroUnico
        {
            get { return _requisicionNumeroUnico; }
            set
            {
                if (!ReferenceEquals(_requisicionNumeroUnico, value))
                {
                    var previousValue = _requisicionNumeroUnico;
                    _requisicionNumeroUnico = value;
                    FixupRequisicionNumeroUnico(previousValue);
                    OnNavigationPropertyChanged("RequisicionNumeroUnico");
                }
            }
        }
        private RequisicionNumeroUnico _requisicionNumeroUnico;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
    	public void OnDeserializedMethod(StreamingContext context)
    	{
    		IsDeserializing = false;
    		ChangeTracker.ChangeTrackingEnabled = true;
    			if (_pinturaNumeroUnico != null)
    		{
    			_pinturaNumeroUnico.CollectionChanged -= FixupPinturaNumeroUnico;
    			_pinturaNumeroUnico.CollectionChanged += FixupPinturaNumeroUnico;
    			}
    		}
    
    
        protected virtual void ClearNavigationProperties()
        {
            NumeroUnico = null;
            PinturaNumeroUnico.Clear();
            RequisicionNumeroUnico = null;
        }

        #endregion

        #region Association Fixup
    
        private void FixupNumeroUnico(NumeroUnico previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RequisicionNumeroUnicoDetalle.Contains(this))
            {
                previousValue.RequisicionNumeroUnicoDetalle.Remove(this);
            }
    
            if (NumeroUnico != null)
            {
                if (!NumeroUnico.RequisicionNumeroUnicoDetalle.Contains(this))
                {
                    NumeroUnico.RequisicionNumeroUnicoDetalle.Add(this);
                }
    
                NumeroUnicoID = NumeroUnico.NumeroUnicoID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("NumeroUnico")
                    && (ChangeTracker.OriginalValues["NumeroUnico"] == NumeroUnico))
                {
                    ChangeTracker.OriginalValues.Remove("NumeroUnico");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("NumeroUnico", previousValue);
                }
                if (NumeroUnico != null && !NumeroUnico.ChangeTracker.ChangeTrackingEnabled)
                {
                    NumeroUnico.StartTracking();
                }
            }
        }
    
        private void FixupRequisicionNumeroUnico(RequisicionNumeroUnico previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RequisicionNumeroUnicoDetalle.Contains(this))
            {
                previousValue.RequisicionNumeroUnicoDetalle.Remove(this);
            }
    
            if (RequisicionNumeroUnico != null)
            {
                if (!RequisicionNumeroUnico.RequisicionNumeroUnicoDetalle.Contains(this))
                {
                    RequisicionNumeroUnico.RequisicionNumeroUnicoDetalle.Add(this);
                }
    
                RequisicionNumeroUnicoID = RequisicionNumeroUnico.RequisicionNumeroUnicoID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("RequisicionNumeroUnico")
                    && (ChangeTracker.OriginalValues["RequisicionNumeroUnico"] == RequisicionNumeroUnico))
                {
                    ChangeTracker.OriginalValues.Remove("RequisicionNumeroUnico");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("RequisicionNumeroUnico", previousValue);
                }
                if (RequisicionNumeroUnico != null && !RequisicionNumeroUnico.ChangeTracker.ChangeTrackingEnabled)
                {
                    RequisicionNumeroUnico.StartTracking();
                }
            }
        }
    
        private void FixupPinturaNumeroUnico(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (PinturaNumeroUnico item in e.NewItems)
                {
                    item.RequisicionNumeroUnicoDetalle = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("PinturaNumeroUnico", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PinturaNumeroUnico item in e.OldItems)
                {
                    if (ReferenceEquals(item.RequisicionNumeroUnicoDetalle, this))
                    {
                        item.RequisicionNumeroUnicoDetalle = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("PinturaNumeroUnico", item);
                    }
                }
            }
        }

        #endregion

    }
}
