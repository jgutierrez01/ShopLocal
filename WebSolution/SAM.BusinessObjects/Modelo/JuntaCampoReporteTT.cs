//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SAM.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(JuntaCampo))]
    [KnownType(typeof(JuntaCampoRequisicion))]
    [KnownType(typeof(ReporteCampoTT))]
    [Serializable]
    public partial class JuntaCampoReporteTT: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int JuntaCampoReporteTTID
        {
            get { return _juntaCampoReporteTTID; }
            set
            {
                if (_juntaCampoReporteTTID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'JuntaCampoReporteTTID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _juntaCampoReporteTTID = value;
                    OnPropertyChanged("JuntaCampoReporteTTID");
                }
            }
        }
        private int _juntaCampoReporteTTID;
    
        [DataMember]
        public int ReporteCampoTTID
        {
            get { return _reporteCampoTTID; }
            set
            {
                if (_reporteCampoTTID != value)
                {
                    ChangeTracker.RecordOriginalValue("ReporteCampoTTID", _reporteCampoTTID);
                    if (!IsDeserializing)
                    {
                        if (ReporteCampoTT != null && ReporteCampoTT.ReporteCampoTTID != value)
                        {
                            ReporteCampoTT = null;
                        }
                    }
                    _reporteCampoTTID = value;
                    OnPropertyChanged("ReporteCampoTTID");
                }
            }
        }
        private int _reporteCampoTTID;
    
        [DataMember]
        public int JuntaCampoID
        {
            get { return _juntaCampoID; }
            set
            {
                if (_juntaCampoID != value)
                {
                    ChangeTracker.RecordOriginalValue("JuntaCampoID", _juntaCampoID);
                    if (!IsDeserializing)
                    {
                        if (JuntaCampo != null && JuntaCampo.JuntaCampoID != value)
                        {
                            JuntaCampo = null;
                        }
                    }
                    _juntaCampoID = value;
                    OnPropertyChanged("JuntaCampoID");
                }
            }
        }
        private int _juntaCampoID;
    
        [DataMember]
        public int JuntaCampoRequisicionID
        {
            get { return _juntaCampoRequisicionID; }
            set
            {
                if (_juntaCampoRequisicionID != value)
                {
                    ChangeTracker.RecordOriginalValue("JuntaCampoRequisicionID", _juntaCampoRequisicionID);
                    if (!IsDeserializing)
                    {
                        if (JuntaCampoRequisicion != null && JuntaCampoRequisicion.JuntaCampoRequisicionID != value)
                        {
                            JuntaCampoRequisicion = null;
                        }
                    }
                    _juntaCampoRequisicionID = value;
                    OnPropertyChanged("JuntaCampoRequisicionID");
                }
            }
        }
        private int _juntaCampoRequisicionID;
    
        [DataMember]
        public System.DateTime FechaTratamiento
        {
            get { return _fechaTratamiento; }
            set
            {
                if (_fechaTratamiento != value)
                {
                    _fechaTratamiento = value;
                    OnPropertyChanged("FechaTratamiento");
                }
            }
        }
        private System.DateTime _fechaTratamiento;
    
        [DataMember]
        public string NumeroGrafica
        {
            get { return _numeroGrafica; }
            set
            {
                if (_numeroGrafica != value)
                {
                    _numeroGrafica = value;
                    OnPropertyChanged("NumeroGrafica");
                }
            }
        }
        private string _numeroGrafica;
    
        [DataMember]
        public bool Aprobado
        {
            get { return _aprobado; }
            set
            {
                if (_aprobado != value)
                {
                    _aprobado = value;
                    OnPropertyChanged("Aprobado");
                }
            }
        }
        private bool _aprobado;
    
        [DataMember]
        public string Observaciones
        {
            get { return _observaciones; }
            set
            {
                if (_observaciones != value)
                {
                    _observaciones = value;
                    OnPropertyChanged("Observaciones");
                }
            }
        }
        private string _observaciones;
    
        [DataMember]
        public Nullable<System.Guid> UsuarioModifica
        {
            get { return _usuarioModifica; }
            set
            {
                if (_usuarioModifica != value)
                {
                    _usuarioModifica = value;
                    OnPropertyChanged("UsuarioModifica");
                }
            }
        }
        private Nullable<System.Guid> _usuarioModifica;
    
        [DataMember]
        public Nullable<System.DateTime> FechaModificacion
        {
            get { return _fechaModificacion; }
            set
            {
                if (_fechaModificacion != value)
                {
                    _fechaModificacion = value;
                    OnPropertyChanged("FechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _fechaModificacion;
    
        [DataMember]
        public byte[] VersionRegistro
        {
            get { return _versionRegistro; }
            set
            {
                if (_versionRegistro != value)
                {
                    ChangeTracker.RecordOriginalValue("VersionRegistro", _versionRegistro);
                    _versionRegistro = value;
                    OnPropertyChanged("VersionRegistro");
                }
            }
        }
        private byte[] _versionRegistro;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public JuntaCampo JuntaCampo
        {
            get { return _juntaCampo; }
            set
            {
                if (!ReferenceEquals(_juntaCampo, value))
                {
                    var previousValue = _juntaCampo;
                    _juntaCampo = value;
                    FixupJuntaCampo(previousValue);
                    OnNavigationPropertyChanged("JuntaCampo");
                }
            }
        }
        private JuntaCampo _juntaCampo;
    
        [DataMember]
        public JuntaCampoRequisicion JuntaCampoRequisicion
        {
            get { return _juntaCampoRequisicion; }
            set
            {
                if (!ReferenceEquals(_juntaCampoRequisicion, value))
                {
                    var previousValue = _juntaCampoRequisicion;
                    _juntaCampoRequisicion = value;
                    FixupJuntaCampoRequisicion(previousValue);
                    OnNavigationPropertyChanged("JuntaCampoRequisicion");
                }
            }
        }
        private JuntaCampoRequisicion _juntaCampoRequisicion;
    
        [DataMember]
        public ReporteCampoTT ReporteCampoTT
        {
            get { return _reporteCampoTT; }
            set
            {
                if (!ReferenceEquals(_reporteCampoTT, value))
                {
                    var previousValue = _reporteCampoTT;
                    _reporteCampoTT = value;
                    FixupReporteCampoTT(previousValue);
                    OnNavigationPropertyChanged("ReporteCampoTT");
                }
            }
        }
        private ReporteCampoTT _reporteCampoTT;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
    	public void OnDeserializedMethod(StreamingContext context)
    	{
    		IsDeserializing = false;
    		ChangeTracker.ChangeTrackingEnabled = true;
    		}
    
    
        protected virtual void ClearNavigationProperties()
        {
            JuntaCampo = null;
            JuntaCampoRequisicion = null;
            ReporteCampoTT = null;
        }

        #endregion

        #region Association Fixup
    
        private void FixupJuntaCampo(JuntaCampo previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JuntaCampoReporteTT.Contains(this))
            {
                previousValue.JuntaCampoReporteTT.Remove(this);
            }
    
            if (JuntaCampo != null)
            {
                if (!JuntaCampo.JuntaCampoReporteTT.Contains(this))
                {
                    JuntaCampo.JuntaCampoReporteTT.Add(this);
                }
    
                JuntaCampoID = JuntaCampo.JuntaCampoID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("JuntaCampo")
                    && (ChangeTracker.OriginalValues["JuntaCampo"] == JuntaCampo))
                {
                    ChangeTracker.OriginalValues.Remove("JuntaCampo");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("JuntaCampo", previousValue);
                }
                if (JuntaCampo != null && !JuntaCampo.ChangeTracker.ChangeTrackingEnabled)
                {
                    JuntaCampo.StartTracking();
                }
            }
        }
    
        private void FixupJuntaCampoRequisicion(JuntaCampoRequisicion previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JuntaCampoReporteTT.Contains(this))
            {
                previousValue.JuntaCampoReporteTT.Remove(this);
            }
    
            if (JuntaCampoRequisicion != null)
            {
                if (!JuntaCampoRequisicion.JuntaCampoReporteTT.Contains(this))
                {
                    JuntaCampoRequisicion.JuntaCampoReporteTT.Add(this);
                }
    
                JuntaCampoRequisicionID = JuntaCampoRequisicion.JuntaCampoRequisicionID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("JuntaCampoRequisicion")
                    && (ChangeTracker.OriginalValues["JuntaCampoRequisicion"] == JuntaCampoRequisicion))
                {
                    ChangeTracker.OriginalValues.Remove("JuntaCampoRequisicion");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("JuntaCampoRequisicion", previousValue);
                }
                if (JuntaCampoRequisicion != null && !JuntaCampoRequisicion.ChangeTracker.ChangeTrackingEnabled)
                {
                    JuntaCampoRequisicion.StartTracking();
                }
            }
        }
    
        private void FixupReporteCampoTT(ReporteCampoTT previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JuntaCampoReporteTT.Contains(this))
            {
                previousValue.JuntaCampoReporteTT.Remove(this);
            }
    
            if (ReporteCampoTT != null)
            {
                if (!ReporteCampoTT.JuntaCampoReporteTT.Contains(this))
                {
                    ReporteCampoTT.JuntaCampoReporteTT.Add(this);
                }
    
                ReporteCampoTTID = ReporteCampoTT.ReporteCampoTTID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ReporteCampoTT")
                    && (ChangeTracker.OriginalValues["ReporteCampoTT"] == ReporteCampoTT))
                {
                    ChangeTracker.OriginalValues.Remove("ReporteCampoTT");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ReporteCampoTT", previousValue);
                }
                if (ReporteCampoTT != null && !ReporteCampoTT.ChangeTracker.ChangeTrackingEnabled)
                {
                    ReporteCampoTT.StartTracking();
                }
            }
        }

        #endregion

    }
}
