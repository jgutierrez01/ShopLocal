//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SAM.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(FamiliaAcero))]
    [KnownType(typeof(Colada))]
    [Serializable]
    public partial class Acero: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int AceroID
        {
            get { return _aceroID; }
            set
            {
                if (_aceroID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'AceroID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _aceroID = value;
                    OnPropertyChanged("AceroID");
                }
            }
        }
        private int _aceroID;
    
        [DataMember]
        public int FamiliaAceroID
        {
            get { return _familiaAceroID; }
            set
            {
                if (_familiaAceroID != value)
                {
                    ChangeTracker.RecordOriginalValue("FamiliaAceroID", _familiaAceroID);
                    if (!IsDeserializing)
                    {
                        if (FamiliaAcero != null && FamiliaAcero.FamiliaAceroID != value)
                        {
                            FamiliaAcero = null;
                        }
                    }
                    _familiaAceroID = value;
                    OnPropertyChanged("FamiliaAceroID");
                }
            }
        }
        private int _familiaAceroID;
    
        [DataMember]
        public string Nomenclatura
        {
            get { return _nomenclatura; }
            set
            {
                if (_nomenclatura != value)
                {
                    _nomenclatura = value;
                    OnPropertyChanged("Nomenclatura");
                }
            }
        }
        private string _nomenclatura;
    
        [DataMember]
        public Nullable<System.Guid> UsuarioModifica
        {
            get { return _usuarioModifica; }
            set
            {
                if (_usuarioModifica != value)
                {
                    _usuarioModifica = value;
                    OnPropertyChanged("UsuarioModifica");
                }
            }
        }
        private Nullable<System.Guid> _usuarioModifica;
    
        [DataMember]
        public Nullable<System.DateTime> FechaModificacion
        {
            get { return _fechaModificacion; }
            set
            {
                if (_fechaModificacion != value)
                {
                    _fechaModificacion = value;
                    OnPropertyChanged("FechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _fechaModificacion;
    
        [DataMember]
        public byte[] VersionRegistro
        {
            get { return _versionRegistro; }
            set
            {
                if (_versionRegistro != value)
                {
                    ChangeTracker.RecordOriginalValue("VersionRegistro", _versionRegistro);
                    _versionRegistro = value;
                    OnPropertyChanged("VersionRegistro");
                }
            }
        }
        private byte[] _versionRegistro;
    
        [DataMember]
        public bool VerificadoPorCalidad
        {
            get { return _verificadoPorCalidad; }
            set
            {
                if (_verificadoPorCalidad != value)
                {
                    _verificadoPorCalidad = value;
                    OnPropertyChanged("VerificadoPorCalidad");
                }
            }
        }
        private bool _verificadoPorCalidad;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public FamiliaAcero FamiliaAcero
        {
            get { return _familiaAcero; }
            set
            {
                if (!ReferenceEquals(_familiaAcero, value))
                {
                    var previousValue = _familiaAcero;
                    _familiaAcero = value;
                    FixupFamiliaAcero(previousValue);
                    OnNavigationPropertyChanged("FamiliaAcero");
                }
            }
        }
        private FamiliaAcero _familiaAcero;
    
        [DataMember]
        public TrackableCollection<Colada> Colada
        {
            get
            {
                if (_colada == null)
                {
                    _colada = new TrackableCollection<Colada>();
                    _colada.CollectionChanged += FixupColada;
                }
                return _colada;
            }
            set
            {
                if (!ReferenceEquals(_colada, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_colada != null)
                    {
                        _colada.CollectionChanged -= FixupColada;
                    }
                    _colada = value;
                    if (_colada != null)
                    {
                        _colada.CollectionChanged += FixupColada;
                    }
                    OnNavigationPropertyChanged("Colada");
                }
            }
        }
        private TrackableCollection<Colada> _colada;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
    	public void OnDeserializedMethod(StreamingContext context)
    	{
    		IsDeserializing = false;
    		ChangeTracker.ChangeTrackingEnabled = true;
    			if (_colada != null)
    		{
    			_colada.CollectionChanged -= FixupColada;
    			_colada.CollectionChanged += FixupColada;
    			}
    		}
    
    
        protected virtual void ClearNavigationProperties()
        {
            FamiliaAcero = null;
            Colada.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupFamiliaAcero(FamiliaAcero previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Acero.Contains(this))
            {
                previousValue.Acero.Remove(this);
            }
    
            if (FamiliaAcero != null)
            {
                if (!FamiliaAcero.Acero.Contains(this))
                {
                    FamiliaAcero.Acero.Add(this);
                }
    
                FamiliaAceroID = FamiliaAcero.FamiliaAceroID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("FamiliaAcero")
                    && (ChangeTracker.OriginalValues["FamiliaAcero"] == FamiliaAcero))
                {
                    ChangeTracker.OriginalValues.Remove("FamiliaAcero");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("FamiliaAcero", previousValue);
                }
                if (FamiliaAcero != null && !FamiliaAcero.ChangeTracker.ChangeTrackingEnabled)
                {
                    FamiliaAcero.StartTracking();
                }
            }
        }
    
        private void FixupColada(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Colada item in e.NewItems)
                {
                    item.Acero = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Colada", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Colada item in e.OldItems)
                {
                    if (ReferenceEquals(item.Acero, this))
                    {
                        item.Acero = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Colada", item);
                    }
                }
            }
        }

        #endregion

    }
}
