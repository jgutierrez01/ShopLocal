//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SAM.Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(ModuloSeguimientoJunta))]
    [KnownType(typeof(DetallePersonalizacionSeguimientoJunta))]
    [Serializable]
    public partial class CampoSeguimientoJunta: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int CampoSeguimientoJuntaID
        {
            get { return _campoSeguimientoJuntaID; }
            set
            {
                if (_campoSeguimientoJuntaID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'CampoSeguimientoJuntaID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _campoSeguimientoJuntaID = value;
                    OnPropertyChanged("CampoSeguimientoJuntaID");
                }
            }
        }
        private int _campoSeguimientoJuntaID;
    
        [DataMember]
        public int ModuloSeguimientoJuntaID
        {
            get { return _moduloSeguimientoJuntaID; }
            set
            {
                if (_moduloSeguimientoJuntaID != value)
                {
                    ChangeTracker.RecordOriginalValue("ModuloSeguimientoJuntaID", _moduloSeguimientoJuntaID);
                    if (!IsDeserializing)
                    {
                        if (ModuloSeguimientoJunta != null && ModuloSeguimientoJunta.ModuloSeguimientoJuntaID != value)
                        {
                            ModuloSeguimientoJunta = null;
                        }
                    }
                    _moduloSeguimientoJuntaID = value;
                    OnPropertyChanged("ModuloSeguimientoJuntaID");
                }
            }
        }
        private int _moduloSeguimientoJuntaID;
    
        [DataMember]
        public string Nombre
        {
            get { return _nombre; }
            set
            {
                if (_nombre != value)
                {
                    _nombre = value;
                    OnPropertyChanged("Nombre");
                }
            }
        }
        private string _nombre;
    
        [DataMember]
        public string NombreIngles
        {
            get { return _nombreIngles; }
            set
            {
                if (_nombreIngles != value)
                {
                    _nombreIngles = value;
                    OnPropertyChanged("NombreIngles");
                }
            }
        }
        private string _nombreIngles;
    
        [DataMember]
        public byte OrdenUI
        {
            get { return _ordenUI; }
            set
            {
                if (_ordenUI != value)
                {
                    _ordenUI = value;
                    OnPropertyChanged("OrdenUI");
                }
            }
        }
        private byte _ordenUI;
    
        [DataMember]
        public string NombreControlUI
        {
            get { return _nombreControlUI; }
            set
            {
                if (_nombreControlUI != value)
                {
                    _nombreControlUI = value;
                    OnPropertyChanged("NombreControlUI");
                }
            }
        }
        private string _nombreControlUI;
    
        [DataMember]
        public string NombreColumnaSp
        {
            get { return _nombreColumnaSp; }
            set
            {
                if (_nombreColumnaSp != value)
                {
                    _nombreColumnaSp = value;
                    OnPropertyChanged("NombreColumnaSp");
                }
            }
        }
        private string _nombreColumnaSp;
    
        [DataMember]
        public string DataFormat
        {
            get { return _dataFormat; }
            set
            {
                if (_dataFormat != value)
                {
                    _dataFormat = value;
                    OnPropertyChanged("DataFormat");
                }
            }
        }
        private string _dataFormat;
    
        [DataMember]
        public string CssColumnaUI
        {
            get { return _cssColumnaUI; }
            set
            {
                if (_cssColumnaUI != value)
                {
                    _cssColumnaUI = value;
                    OnPropertyChanged("CssColumnaUI");
                }
            }
        }
        private string _cssColumnaUI;
    
        [DataMember]
        public Nullable<System.Guid> UsuarioModifica
        {
            get { return _usuarioModifica; }
            set
            {
                if (_usuarioModifica != value)
                {
                    _usuarioModifica = value;
                    OnPropertyChanged("UsuarioModifica");
                }
            }
        }
        private Nullable<System.Guid> _usuarioModifica;
    
        [DataMember]
        public Nullable<System.DateTime> FechaModificacion
        {
            get { return _fechaModificacion; }
            set
            {
                if (_fechaModificacion != value)
                {
                    _fechaModificacion = value;
                    OnPropertyChanged("FechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _fechaModificacion;
    
        [DataMember]
        public byte[] VersionRegistro
        {
            get { return _versionRegistro; }
            set
            {
                if (_versionRegistro != value)
                {
                    ChangeTracker.RecordOriginalValue("VersionRegistro", _versionRegistro);
                    _versionRegistro = value;
                    OnPropertyChanged("VersionRegistro");
                }
            }
        }
        private byte[] _versionRegistro;
    
        [DataMember]
        public Nullable<int> AnchoUI
        {
            get { return _anchoUI; }
            set
            {
                if (_anchoUI != value)
                {
                    _anchoUI = value;
                    OnPropertyChanged("AnchoUI");
                }
            }
        }
        private Nullable<int> _anchoUI;
    
        [DataMember]
        public string TipoDeDato
        {
            get { return _tipoDeDato; }
            set
            {
                if (_tipoDeDato != value)
                {
                    _tipoDeDato = value;
                    OnPropertyChanged("TipoDeDato");
                }
            }
        }
        private string _tipoDeDato;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public ModuloSeguimientoJunta ModuloSeguimientoJunta
        {
            get { return _moduloSeguimientoJunta; }
            set
            {
                if (!ReferenceEquals(_moduloSeguimientoJunta, value))
                {
                    var previousValue = _moduloSeguimientoJunta;
                    _moduloSeguimientoJunta = value;
                    FixupModuloSeguimientoJunta(previousValue);
                    OnNavigationPropertyChanged("ModuloSeguimientoJunta");
                }
            }
        }
        private ModuloSeguimientoJunta _moduloSeguimientoJunta;
    
        [DataMember]
        public TrackableCollection<DetallePersonalizacionSeguimientoJunta> DetallePersonalizacionSeguimientoJunta
        {
            get
            {
                if (_detallePersonalizacionSeguimientoJunta == null)
                {
                    _detallePersonalizacionSeguimientoJunta = new TrackableCollection<DetallePersonalizacionSeguimientoJunta>();
                    _detallePersonalizacionSeguimientoJunta.CollectionChanged += FixupDetallePersonalizacionSeguimientoJunta;
                }
                return _detallePersonalizacionSeguimientoJunta;
            }
            set
            {
                if (!ReferenceEquals(_detallePersonalizacionSeguimientoJunta, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_detallePersonalizacionSeguimientoJunta != null)
                    {
                        _detallePersonalizacionSeguimientoJunta.CollectionChanged -= FixupDetallePersonalizacionSeguimientoJunta;
                    }
                    _detallePersonalizacionSeguimientoJunta = value;
                    if (_detallePersonalizacionSeguimientoJunta != null)
                    {
                        _detallePersonalizacionSeguimientoJunta.CollectionChanged += FixupDetallePersonalizacionSeguimientoJunta;
                    }
                    OnNavigationPropertyChanged("DetallePersonalizacionSeguimientoJunta");
                }
            }
        }
        private TrackableCollection<DetallePersonalizacionSeguimientoJunta> _detallePersonalizacionSeguimientoJunta;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
    	public void OnDeserializedMethod(StreamingContext context)
    	{
    		IsDeserializing = false;
    		ChangeTracker.ChangeTrackingEnabled = true;
    			if (_detallePersonalizacionSeguimientoJunta != null)
    		{
    			_detallePersonalizacionSeguimientoJunta.CollectionChanged -= FixupDetallePersonalizacionSeguimientoJunta;
    			_detallePersonalizacionSeguimientoJunta.CollectionChanged += FixupDetallePersonalizacionSeguimientoJunta;
    			}
    		}
    
    
        protected virtual void ClearNavigationProperties()
        {
            ModuloSeguimientoJunta = null;
            DetallePersonalizacionSeguimientoJunta.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupModuloSeguimientoJunta(ModuloSeguimientoJunta previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CampoSeguimientoJunta.Contains(this))
            {
                previousValue.CampoSeguimientoJunta.Remove(this);
            }
    
            if (ModuloSeguimientoJunta != null)
            {
                if (!ModuloSeguimientoJunta.CampoSeguimientoJunta.Contains(this))
                {
                    ModuloSeguimientoJunta.CampoSeguimientoJunta.Add(this);
                }
    
                ModuloSeguimientoJuntaID = ModuloSeguimientoJunta.ModuloSeguimientoJuntaID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ModuloSeguimientoJunta")
                    && (ChangeTracker.OriginalValues["ModuloSeguimientoJunta"] == ModuloSeguimientoJunta))
                {
                    ChangeTracker.OriginalValues.Remove("ModuloSeguimientoJunta");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ModuloSeguimientoJunta", previousValue);
                }
                if (ModuloSeguimientoJunta != null && !ModuloSeguimientoJunta.ChangeTracker.ChangeTrackingEnabled)
                {
                    ModuloSeguimientoJunta.StartTracking();
                }
            }
        }
    
        private void FixupDetallePersonalizacionSeguimientoJunta(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (DetallePersonalizacionSeguimientoJunta item in e.NewItems)
                {
                    item.CampoSeguimientoJunta = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("DetallePersonalizacionSeguimientoJunta", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (DetallePersonalizacionSeguimientoJunta item in e.OldItems)
                {
                    if (ReferenceEquals(item.CampoSeguimientoJunta, this))
                    {
                        item.CampoSeguimientoJunta = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("DetallePersonalizacionSeguimientoJunta", item);
                    }
                }
            }
        }

        #endregion

    }
}
